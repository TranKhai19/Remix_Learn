{
	"id": "f5e476a5736ca3cb2a19fa4c55773f79",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/nft.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NFTMarketplace is Ownable {\r\n\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _itemIds;\r\n    Counters.Counter private _itemsSold;\r\n\r\n    struct NFTItem {\r\n        uint256 id;\r\n        address creator;\r\n        string uri;\r\n        uint256 price;\r\n        bool sold;\r\n    }\r\n\r\n    mapping(uint256 => NFTItem) private _items;\r\n\r\n    event ItemCreated(uint256 indexed itemId, address indexed creator, string uri, uint256 price);\r\n    event ItemSold(uint256 indexed itemId, address indexed buyer, uint256 price);\r\n\r\n    function createItem(string memory uri, uint256 price) public onlyOwner {\r\n        _itemIds.increment();\r\n        uint256 itemId = _itemIds.current();\r\n\r\n        _items[itemId] = NFTItem(itemId, msg.sender, uri, price, false);\r\n\r\n        emit ItemCreated(itemId, msg.sender, uri, price);\r\n    }\r\n\r\n    function buyItem(uint256 itemId) public payable {\r\n        NFTItem storage item = _items[itemId];\r\n        require(item.sold == false, \"Item already sold\");\r\n        require(msg.value >= item.price, \"Insufficient funds\");\r\n\r\n        item.sold = true;\r\n        _itemsSold.increment();\r\n\r\n        emit ItemSold(itemId, msg.sender, item.price);\r\n\r\n        payable(item.creator).transfer(item.price);\r\n    }\r\n\r\n    function getItem(uint256 itemId) public view returns (uint256 id, address creator, string memory uri, uint256 price, bool sold) {\r\n        NFTItem storage item = _items[itemId];\r\n        id = item.id;\r\n        creator = item.creator;\r\n        uri = item.uri;\r\n        price = item.price;\r\n        sold = item.sold;\r\n    }\r\n\r\n    function getItemsSold() public view returns (uint256) {\r\n        return _itemsSold.current();\r\n    }\r\n\r\n    constructor() Ownable(msg.sender) { }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1436,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ERC721Utils": {
					"abi": [],
					"devdoc": {
						"details": "Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":431:1911  library ERC721Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a6a7ff1d890081d95f3d349fd10a0dab12d220e6b834576052d6c59ccc3c44364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a6a7ff1d890081d95f3d349fd10a0dab12d220e6b834576052d6c59ccc3c44364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH11 0x7FF1D890081D95F3D349FD LT LOG0 0xDA 0xB1 0x2D 0x22 0xE PUSH12 0x834576052D6C59CCC3C44364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "431:1480:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a6a7ff1d890081d95f3d349fd10a0dab12d220e6b834576052d6c59ccc3c44364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH11 0x7FF1D890081D95F3D349FD LT LOG0 0xDA 0xB1 0x2D 0x22 0xE PUSH12 0x834576052D6C59CCC3C44364 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "431:1480:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 1911,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a6a7ff1d890081d95f3d349fd10a0dab12d220e6b834576052d6c59ccc3c44364736f6c634300081a0033",
									".code": [
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 431,
											"end": 1911,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122070eca543777392d2109ebc632b2b4c27e0298752961666854d40c43483f4f4cc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122070eca543777392d2109ebc632b2b4c27e0298752961666854d40c43483f4f4cc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xECA543777392D2109EBC632B2B4C27E029 DUP8 MSTORE SWAP7 AND PUSH7 0x854D40C43483F4 DELEGATECALL 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:3680:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122070eca543777392d2109ebc632b2b4c27e0298752961666854d40c43483f4f4cc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xECA543777392D2109EBC632B2B4C27E029 DUP8 MSTORE SWAP7 AND PUSH7 0x854D40C43483F4 DELEGATECALL 0xCC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:3680:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070eca543777392d2109ebc632b2b4c27e0298752961666854d40c43483f4f4cc64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fa7c02d7911a6098a6de30c9d90c46f1d7369eda6bb59569ba6510e68324934864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fa7c02d7911a6098a6de30c9d90c46f1d7369eda6bb59569ba6510e68324934864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH29 0x2D7911A6098A6DE30C9D90C46F1D7369EDA6BB59569BA6510E6832493 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "258:2354:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fa7c02d7911a6098a6de30c9d90c46f1d7369eda6bb59569ba6510e68324934864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL PUSH29 0x2D7911A6098A6DE30C9D90C46F1D7369EDA6BB59569BA6510E6832493 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "258:2354:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa7c02d7911a6098a6de30c9d90c46f1d7369eda6bb59569ba6510e68324934864736f6c634300081a0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/nft.sol": {
				"NFTMarketplace": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "buyItem",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "createItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "getItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getItemsSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/nft.sol\":309:2047  contract NFTMarketplace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/nft.sol\":2007:2044  constructor() Ownable(msg.sender) { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/nft.sol\":2029:2039  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/nft.sol\":309:2047  contract NFTMarketplace is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/nft.sol\":309:2047  contract NFTMarketplace is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/nft.sol\":309:2047  contract NFTMarketplace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4b15141\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe7fb74c7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x3129e773\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8c551742\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/nft.sol\":1570:1891  function getItem(uint256 itemId) public view returns (uint256 id, address creator, string memory uri, uint256 price, bool sold) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/nft.sol\":858:1151  function createItem(string memory uri, uint256 price) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nft.sol\":1899:1999  function getItemsSold() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/nft.sol\":1159:1562  function buyItem(uint256 itemId) public payable {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/nft.sol\":1570:1891  function getItem(uint256 itemId) public view returns (uint256 id, address creator, string memory uri, uint256 price, bool sold) {... */\n    tag_14:\n        /* \"contracts/nft.sol\":1624:1634  uint256 id */\n      0x00\n        /* \"contracts/nft.sol\":1636:1651  address creator */\n      dup1\n        /* \"contracts/nft.sol\":1653:1670  string memory uri */\n      0x60\n        /* \"contracts/nft.sol\":1672:1685  uint256 price */\n      0x00\n        /* \"contracts/nft.sol\":1687:1696  bool sold */\n      dup1\n        /* \"contracts/nft.sol\":1709:1729  NFTItem storage item */\n      0x00\n        /* \"contracts/nft.sol\":1732:1738  _items */\n      0x03\n        /* \"contracts/nft.sol\":1732:1746  _items[itemId] */\n      0x00\n        /* \"contracts/nft.sol\":1739:1745  itemId */\n      dup9\n        /* \"contracts/nft.sol\":1732:1746  _items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nft.sol\":1709:1746  NFTItem storage item = _items[itemId] */\n      swap1\n      pop\n        /* \"contracts/nft.sol\":1762:1766  item */\n      dup1\n        /* \"contracts/nft.sol\":1762:1769  item.id */\n      0x00\n      add\n      sload\n        /* \"contracts/nft.sol\":1757:1769  id = item.id */\n      swap6\n      pop\n        /* \"contracts/nft.sol\":1790:1794  item */\n      dup1\n        /* \"contracts/nft.sol\":1790:1802  item.creator */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nft.sol\":1780:1802  creator = item.creator */\n      swap5\n      pop\n        /* \"contracts/nft.sol\":1819:1823  item */\n      dup1\n        /* \"contracts/nft.sol\":1819:1827  item.uri */\n      0x02\n      add\n        /* \"contracts/nft.sol\":1813:1827  uri = item.uri */\n      dup1\n      sload\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_46\n      swap1\n      tag_45\n      jump\t// in\n    tag_46:\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_48\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_47)\n    tag_48:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_49:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_49\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap4\n      pop\n        /* \"contracts/nft.sol\":1846:1850  item */\n      dup1\n        /* \"contracts/nft.sol\":1846:1856  item.price */\n      0x03\n      add\n      sload\n        /* \"contracts/nft.sol\":1838:1856  price = item.price */\n      swap3\n      pop\n        /* \"contracts/nft.sol\":1874:1878  item */\n      dup1\n        /* \"contracts/nft.sol\":1874:1883  item.sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/nft.sol\":1867:1883  sold = item.sold */\n      swap2\n      pop\n        /* \"contracts/nft.sol\":1698:1891  {... */\n      pop\n        /* \"contracts/nft.sol\":1570:1891  function getItem(uint256 itemId) public view returns (uint256 id, address creator, string memory uri, uint256 price, bool sold) {... */\n      swap2\n      swap4\n      swap6\n      swap1\n      swap3\n      swap5\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/nft.sol\":858:1151  function createItem(string memory uri, uint256 price) public onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/nft.sol\":940:960  _itemIds.increment() */\n      tag_59\n        /* \"contracts/nft.sol\":940:948  _itemIds */\n      0x01\n        /* \"contracts/nft.sol\":940:958  _itemIds.increment */\n      tag_60\n        /* \"contracts/nft.sol\":940:960  _itemIds.increment() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/nft.sol\":971:985  uint256 itemId */\n      0x00\n        /* \"contracts/nft.sol\":988:1006  _itemIds.current() */\n      tag_61\n        /* \"contracts/nft.sol\":988:996  _itemIds */\n      0x01\n        /* \"contracts/nft.sol\":988:1004  _itemIds.current */\n      tag_62\n        /* \"contracts/nft.sol\":988:1006  _itemIds.current() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/nft.sol\":971:1006  uint256 itemId = _itemIds.current() */\n      swap1\n      pop\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/nft.sol\":1044:1050  itemId */\n      dup3\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/nft.sol\":1052:1062  msg.sender */\n      caller\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/nft.sol\":1064:1067  uri */\n      dup5\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/nft.sol\":1069:1074  price */\n      dup4\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/nft.sol\":1076:1081  false */\n      0x00\n        /* \"contracts/nft.sol\":1036:1082  NFTItem(itemId, msg.sender, uri, price, false) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/nft.sol\":1019:1025  _items */\n      0x03\n        /* \"contracts/nft.sol\":1019:1033  _items[itemId] */\n      0x00\n        /* \"contracts/nft.sol\":1026:1032  itemId */\n      dup4\n        /* \"contracts/nft.sol\":1019:1033  _items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nft.sol\":1019:1082  _items[itemId] = NFTItem(itemId, msg.sender, uri, price, false) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/nft.sol\":1120:1130  msg.sender */\n      caller\n        /* \"contracts/nft.sol\":1100:1143  ItemCreated(itemId, msg.sender, uri, price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nft.sol\":1112:1118  itemId */\n      dup2\n        /* \"contracts/nft.sol\":1100:1143  ItemCreated(itemId, msg.sender, uri, price) */\n      0x1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a8\n        /* \"contracts/nft.sol\":1132:1135  uri */\n      dup6\n        /* \"contracts/nft.sol\":1137:1142  price */\n      dup6\n        /* \"contracts/nft.sol\":1100:1143  ItemCreated(itemId, msg.sender, uri, price) */\n      mload(0x40)\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nft.sol\":929:1151  {... */\n      pop\n        /* \"contracts/nft.sol\":858:1151  function createItem(string memory uri, uint256 price) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nft.sol\":1899:1999  function getItemsSold() public view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/nft.sol\":1944:1951  uint256 */\n      0x00\n        /* \"contracts/nft.sol\":1971:1991  _itemsSold.current() */\n      tag_69\n        /* \"contracts/nft.sol\":1971:1981  _itemsSold */\n      0x02\n        /* \"contracts/nft.sol\":1971:1989  _itemsSold.current */\n      tag_62\n        /* \"contracts/nft.sol\":1971:1991  _itemsSold.current() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/nft.sol\":1964:1991  return _itemsSold.current() */\n      swap1\n      pop\n        /* \"contracts/nft.sol\":1899:1999  function getItemsSold() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/nft.sol\":1159:1562  function buyItem(uint256 itemId) public payable {... */\n    tag_37:\n        /* \"contracts/nft.sol\":1218:1238  NFTItem storage item */\n      0x00\n        /* \"contracts/nft.sol\":1241:1247  _items */\n      0x03\n        /* \"contracts/nft.sol\":1241:1255  _items[itemId] */\n      0x00\n        /* \"contracts/nft.sol\":1248:1254  itemId */\n      dup4\n        /* \"contracts/nft.sol\":1241:1255  _items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/nft.sol\":1218:1255  NFTItem storage item = _items[itemId] */\n      swap1\n      pop\n        /* \"contracts/nft.sol\":1287:1292  false */\n      0x00\n        /* \"contracts/nft.sol\":1274:1292  item.sold == false */\n      iszero\n      iszero\n        /* \"contracts/nft.sol\":1274:1278  item */\n      dup2\n        /* \"contracts/nft.sol\":1274:1283  item.sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/nft.sol\":1274:1292  item.sold == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/nft.sol\":1266:1314  require(item.sold == false, \"Item already sold\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/nft.sol\":1346:1350  item */\n      dup1\n        /* \"contracts/nft.sol\":1346:1356  item.price */\n      0x03\n      add\n      sload\n        /* \"contracts/nft.sol\":1333:1342  msg.value */\n      callvalue\n        /* \"contracts/nft.sol\":1333:1356  msg.value >= item.price */\n      lt\n      iszero\n        /* \"contracts/nft.sol\":1325:1379  require(msg.value >= item.price, \"Insufficient funds\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/nft.sol\":1404:1408  true */\n      0x01\n        /* \"contracts/nft.sol\":1392:1396  item */\n      dup2\n        /* \"contracts/nft.sol\":1392:1401  item.sold */\n      0x04\n      add\n      0x00\n        /* \"contracts/nft.sol\":1392:1408  item.sold = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/nft.sol\":1419:1441  _itemsSold.increment() */\n      tag_77\n        /* \"contracts/nft.sol\":1419:1429  _itemsSold */\n      0x02\n        /* \"contracts/nft.sol\":1419:1439  _itemsSold.increment */\n      tag_60\n        /* \"contracts/nft.sol\":1419:1441  _itemsSold.increment() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/nft.sol\":1476:1486  msg.sender */\n      caller\n        /* \"contracts/nft.sol\":1459:1499  ItemSold(itemId, msg.sender, item.price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nft.sol\":1468:1474  itemId */\n      dup3\n        /* \"contracts/nft.sol\":1459:1499  ItemSold(itemId, msg.sender, item.price) */\n      0xa574c741071bb18f51fa88c17aeefec514bebf670ca22a3736fba6504ecbb763\n        /* \"contracts/nft.sol\":1488:1492  item */\n      dup4\n        /* \"contracts/nft.sol\":1488:1498  item.price */\n      0x03\n      add\n      sload\n        /* \"contracts/nft.sol\":1459:1499  ItemSold(itemId, msg.sender, item.price) */\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/nft.sol\":1520:1524  item */\n      dup1\n        /* \"contracts/nft.sol\":1520:1532  item.creator */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nft.sol\":1512:1542  payable(item.creator).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/nft.sol\":1512:1554  payable(item.creator).transfer(item.price) */\n      0x08fc\n        /* \"contracts/nft.sol\":1543:1547  item */\n      dup3\n        /* \"contracts/nft.sol\":1543:1553  item.price */\n      0x03\n      add\n      sload\n        /* \"contracts/nft.sol\":1512:1554  payable(item.creator).transfer(item.price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n        /* \"contracts/nft.sol\":1207:1562  {... */\n      pop\n        /* \"contracts/nft.sol\":1159:1562  function buyItem(uint256 itemId) public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_98:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_99:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_100:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_101:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_102:\n        /* \"#utility.yul\":490:514   */\n      tag_152\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_101\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_153:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_103:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_155\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_102\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_158\n      tag_99\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":766:885   */\n    tag_157:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_159\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_103\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_104:\n        /* \"#utility.yul\":1112:1136   */\n      tag_161\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_101\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1275   */\n    tag_105:\n        /* \"#utility.yul\":1186:1193   */\n      0x00\n        /* \"#utility.yul\":1226:1268   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1219:1224   */\n      dup3\n        /* \"#utility.yul\":1215:1269   */\n      and\n        /* \"#utility.yul\":1204:1269   */\n      swap1\n      pop\n        /* \"#utility.yul\":1149:1275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1377   */\n    tag_106:\n        /* \"#utility.yul\":1318:1325   */\n      0x00\n        /* \"#utility.yul\":1347:1371   */\n      tag_164\n        /* \"#utility.yul\":1365:1370   */\n      dup3\n        /* \"#utility.yul\":1347:1371   */\n      tag_105\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1336:1371   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1501   */\n    tag_107:\n        /* \"#utility.yul\":1470:1494   */\n      tag_166\n        /* \"#utility.yul\":1488:1493   */\n      dup2\n        /* \"#utility.yul\":1470:1494   */\n      tag_106\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1465:1468   */\n      dup3\n        /* \"#utility.yul\":1458:1495   */\n      mstore\n        /* \"#utility.yul\":1383:1501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1507:1606   */\n    tag_108:\n        /* \"#utility.yul\":1559:1565   */\n      0x00\n        /* \"#utility.yul\":1593:1598   */\n      dup2\n        /* \"#utility.yul\":1587:1599   */\n      mload\n        /* \"#utility.yul\":1577:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1507:1606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1612:1781   */\n    tag_109:\n        /* \"#utility.yul\":1696:1707   */\n      0x00\n        /* \"#utility.yul\":1730:1736   */\n      dup3\n        /* \"#utility.yul\":1725:1728   */\n      dup3\n        /* \"#utility.yul\":1718:1737   */\n      mstore\n        /* \"#utility.yul\":1770:1774   */\n      0x20\n        /* \"#utility.yul\":1765:1768   */\n      dup3\n        /* \"#utility.yul\":1761:1775   */\n      add\n        /* \"#utility.yul\":1746:1775   */\n      swap1\n      pop\n        /* \"#utility.yul\":1612:1781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:1926   */\n    tag_110:\n        /* \"#utility.yul\":1876:1882   */\n      dup3\n        /* \"#utility.yul\":1871:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1869   */\n      dup4\n        /* \"#utility.yul\":1860:1883   */\n      mcopy\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1908:1914   */\n      dup4\n        /* \"#utility.yul\":1903:1906   */\n      dup4\n        /* \"#utility.yul\":1899:1915   */\n      add\n        /* \"#utility.yul\":1892:1919   */\n      mstore\n        /* \"#utility.yul\":1787:1926   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1932:2034   */\n    tag_111:\n        /* \"#utility.yul\":1973:1979   */\n      0x00\n        /* \"#utility.yul\":2024:2026   */\n      0x1f\n        /* \"#utility.yul\":2020:2027   */\n      not\n        /* \"#utility.yul\":2015:2017   */\n      0x1f\n        /* \"#utility.yul\":2008:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2018   */\n      add\n        /* \"#utility.yul\":2000:2028   */\n      and\n        /* \"#utility.yul\":1990:2028   */\n      swap1\n      pop\n        /* \"#utility.yul\":1932:2034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2417   */\n    tag_112:\n        /* \"#utility.yul\":2128:2131   */\n      0x00\n        /* \"#utility.yul\":2156:2195   */\n      tag_172\n        /* \"#utility.yul\":2189:2194   */\n      dup3\n        /* \"#utility.yul\":2156:2195   */\n      tag_108\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2211:2282   */\n      tag_173\n        /* \"#utility.yul\":2275:2281   */\n      dup2\n        /* \"#utility.yul\":2270:2273   */\n      dup6\n        /* \"#utility.yul\":2211:2282   */\n      tag_109\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2204:2282   */\n      swap4\n      pop\n        /* \"#utility.yul\":2291:2356   */\n      tag_174\n        /* \"#utility.yul\":2349:2355   */\n      dup2\n        /* \"#utility.yul\":2344:2347   */\n      dup6\n        /* \"#utility.yul\":2337:2341   */\n      0x20\n        /* \"#utility.yul\":2330:2335   */\n      dup7\n        /* \"#utility.yul\":2326:2342   */\n      add\n        /* \"#utility.yul\":2291:2356   */\n      tag_110\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2381:2410   */\n      tag_175\n        /* \"#utility.yul\":2403:2409   */\n      dup2\n        /* \"#utility.yul\":2381:2410   */\n      tag_111\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2376:2379   */\n      dup5\n        /* \"#utility.yul\":2372:2411   */\n      add\n        /* \"#utility.yul\":2365:2411   */\n      swap2\n      pop\n        /* \"#utility.yul\":2132:2417   */\n      pop\n        /* \"#utility.yul\":2040:2417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2423:2513   */\n    tag_113:\n        /* \"#utility.yul\":2457:2464   */\n      0x00\n        /* \"#utility.yul\":2500:2505   */\n      dup2\n        /* \"#utility.yul\":2493:2506   */\n      iszero\n        /* \"#utility.yul\":2486:2507   */\n      iszero\n        /* \"#utility.yul\":2475:2507   */\n      swap1\n      pop\n        /* \"#utility.yul\":2423:2513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2628   */\n    tag_114:\n        /* \"#utility.yul\":2600:2621   */\n      tag_178\n        /* \"#utility.yul\":2615:2620   */\n      dup2\n        /* \"#utility.yul\":2600:2621   */\n      tag_113\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2595:2598   */\n      dup3\n        /* \"#utility.yul\":2588:2622   */\n      mstore\n        /* \"#utility.yul\":2519:2628   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:3377   */\n    tag_16:\n        /* \"#utility.yul\":2853:2857   */\n      0x00\n        /* \"#utility.yul\":2891:2894   */\n      0xa0\n        /* \"#utility.yul\":2880:2889   */\n      dup3\n        /* \"#utility.yul\":2876:2895   */\n      add\n        /* \"#utility.yul\":2868:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2905:2976   */\n      tag_180\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2962:2971   */\n      dup4\n        /* \"#utility.yul\":2958:2975   */\n      add\n        /* \"#utility.yul\":2949:2955   */\n      dup9\n        /* \"#utility.yul\":2905:2976   */\n      tag_104\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2986:3058   */\n      tag_181\n        /* \"#utility.yul\":3054:3056   */\n      0x20\n        /* \"#utility.yul\":3043:3052   */\n      dup4\n        /* \"#utility.yul\":3039:3057   */\n      add\n        /* \"#utility.yul\":3030:3036   */\n      dup8\n        /* \"#utility.yul\":2986:3058   */\n      tag_107\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3105:3114   */\n      dup2\n        /* \"#utility.yul\":3099:3103   */\n      dup2\n        /* \"#utility.yul\":3095:3115   */\n      sub\n        /* \"#utility.yul\":3090:3092   */\n      0x40\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3075:3093   */\n      add\n        /* \"#utility.yul\":3068:3116   */\n      mstore\n        /* \"#utility.yul\":3133:3211   */\n      tag_182\n        /* \"#utility.yul\":3206:3210   */\n      dup2\n        /* \"#utility.yul\":3197:3203   */\n      dup7\n        /* \"#utility.yul\":3133:3211   */\n      tag_112\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3125:3211   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3293   */\n      tag_183\n        /* \"#utility.yul\":3289:3291   */\n      0x60\n        /* \"#utility.yul\":3278:3287   */\n      dup4\n        /* \"#utility.yul\":3274:3292   */\n      add\n        /* \"#utility.yul\":3265:3271   */\n      dup6\n        /* \"#utility.yul\":3221:3293   */\n      tag_104\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3303:3370   */\n      tag_184\n        /* \"#utility.yul\":3365:3368   */\n      0x80\n        /* \"#utility.yul\":3354:3363   */\n      dup4\n        /* \"#utility.yul\":3350:3369   */\n      add\n        /* \"#utility.yul\":3341:3347   */\n      dup5\n        /* \"#utility.yul\":3303:3370   */\n      tag_114\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2634:3377   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3500   */\n    tag_115:\n        /* \"#utility.yul\":3492:3493   */\n      0x00\n        /* \"#utility.yul\":3489:3490   */\n      dup1\n        /* \"#utility.yul\":3482:3494   */\n      revert\n        /* \"#utility.yul\":3506:3623   */\n    tag_116:\n        /* \"#utility.yul\":3615:3616   */\n      0x00\n        /* \"#utility.yul\":3612:3613   */\n      dup1\n        /* \"#utility.yul\":3605:3617   */\n      revert\n        /* \"#utility.yul\":3629:3809   */\n    tag_117:\n        /* \"#utility.yul\":3677:3754   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3674:3675   */\n      0x00\n        /* \"#utility.yul\":3667:3755   */\n      mstore\n        /* \"#utility.yul\":3774:3778   */\n      0x41\n        /* \"#utility.yul\":3771:3772   */\n      0x04\n        /* \"#utility.yul\":3764:3779   */\n      mstore\n        /* \"#utility.yul\":3798:3802   */\n      0x24\n        /* \"#utility.yul\":3795:3796   */\n      0x00\n        /* \"#utility.yul\":3788:3803   */\n      revert\n        /* \"#utility.yul\":3815:4096   */\n    tag_118:\n        /* \"#utility.yul\":3898:3925   */\n      tag_189\n        /* \"#utility.yul\":3920:3924   */\n      dup3\n        /* \"#utility.yul\":3898:3925   */\n      tag_111\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3890:3896   */\n      dup2\n        /* \"#utility.yul\":3886:3926   */\n      add\n        /* \"#utility.yul\":4028:4034   */\n      dup2\n        /* \"#utility.yul\":4016:4026   */\n      dup2\n        /* \"#utility.yul\":4013:4035   */\n      lt\n        /* \"#utility.yul\":3992:4010   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3980:3990   */\n      dup3\n        /* \"#utility.yul\":3977:4011   */\n      gt\n        /* \"#utility.yul\":3974:4036   */\n      or\n        /* \"#utility.yul\":3971:4059   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":4039:4057   */\n      tag_191\n      tag_117\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3971:4059   */\n    tag_190:\n        /* \"#utility.yul\":4079:4089   */\n      dup1\n        /* \"#utility.yul\":4075:4077   */\n      0x40\n        /* \"#utility.yul\":4068:4090   */\n      mstore\n        /* \"#utility.yul\":3858:4096   */\n      pop\n        /* \"#utility.yul\":3815:4096   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4102:4231   */\n    tag_119:\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4163:4183   */\n      tag_193\n      tag_98\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4153:4183   */\n      swap1\n      pop\n        /* \"#utility.yul\":4192:4225   */\n      tag_194\n        /* \"#utility.yul\":4220:4224   */\n      dup3\n        /* \"#utility.yul\":4212:4218   */\n      dup3\n        /* \"#utility.yul\":4192:4225   */\n      tag_118\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4102:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4237:4545   */\n    tag_120:\n        /* \"#utility.yul\":4299:4303   */\n      0x00\n        /* \"#utility.yul\":4389:4407   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4381:4387   */\n      dup3\n        /* \"#utility.yul\":4378:4408   */\n      gt\n        /* \"#utility.yul\":4375:4431   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":4411:4429   */\n      tag_197\n      tag_117\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4375:4431   */\n    tag_196:\n        /* \"#utility.yul\":4449:4478   */\n      tag_198\n        /* \"#utility.yul\":4471:4477   */\n      dup3\n        /* \"#utility.yul\":4449:4478   */\n      tag_111\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4441:4478   */\n      swap1\n      pop\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4527:4531   */\n      dup2\n        /* \"#utility.yul\":4523:4538   */\n      add\n        /* \"#utility.yul\":4515:4538   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4551:4699   */\n    tag_121:\n        /* \"#utility.yul\":4649:4655   */\n      dup3\n        /* \"#utility.yul\":4644:4647   */\n      dup2\n        /* \"#utility.yul\":4639:4642   */\n      dup4\n        /* \"#utility.yul\":4626:4656   */\n      calldatacopy\n        /* \"#utility.yul\":4690:4691   */\n      0x00\n        /* \"#utility.yul\":4681:4687   */\n      dup4\n        /* \"#utility.yul\":4676:4679   */\n      dup4\n        /* \"#utility.yul\":4672:4688   */\n      add\n        /* \"#utility.yul\":4665:4692   */\n      mstore\n        /* \"#utility.yul\":4551:4699   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4705:5130   */\n    tag_122:\n        /* \"#utility.yul\":4783:4788   */\n      0x00\n        /* \"#utility.yul\":4808:4874   */\n      tag_201\n        /* \"#utility.yul\":4824:4873   */\n      tag_202\n        /* \"#utility.yul\":4866:4872   */\n      dup5\n        /* \"#utility.yul\":4824:4873   */\n      tag_120\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4808:4874   */\n      tag_119\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4799:4874   */\n      swap1\n      pop\n        /* \"#utility.yul\":4897:4903   */\n      dup3\n        /* \"#utility.yul\":4890:4895   */\n      dup2\n        /* \"#utility.yul\":4883:4904   */\n      mstore\n        /* \"#utility.yul\":4935:4939   */\n      0x20\n        /* \"#utility.yul\":4928:4933   */\n      dup2\n        /* \"#utility.yul\":4924:4940   */\n      add\n        /* \"#utility.yul\":4973:4976   */\n      dup5\n        /* \"#utility.yul\":4964:4970   */\n      dup5\n        /* \"#utility.yul\":4959:4962   */\n      dup5\n        /* \"#utility.yul\":4955:4971   */\n      add\n        /* \"#utility.yul\":4952:4977   */\n      gt\n        /* \"#utility.yul\":4949:5061   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":4980:5059   */\n      tag_204\n      tag_116\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4949:5061   */\n    tag_203:\n        /* \"#utility.yul\":5070:5124   */\n      tag_205\n        /* \"#utility.yul\":5117:5123   */\n      dup5\n        /* \"#utility.yul\":5112:5115   */\n      dup3\n        /* \"#utility.yul\":5107:5110   */\n      dup6\n        /* \"#utility.yul\":5070:5124   */\n      tag_121\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4789:5130   */\n      pop\n        /* \"#utility.yul\":4705:5130   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5150:5490   */\n    tag_123:\n        /* \"#utility.yul\":5206:5211   */\n      0x00\n        /* \"#utility.yul\":5255:5258   */\n      dup3\n        /* \"#utility.yul\":5248:5252   */\n      0x1f\n        /* \"#utility.yul\":5240:5246   */\n      dup4\n        /* \"#utility.yul\":5236:5253   */\n      add\n        /* \"#utility.yul\":5232:5259   */\n      slt\n        /* \"#utility.yul\":5222:5344   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":5263:5342   */\n      tag_208\n      tag_115\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5222:5344   */\n    tag_207:\n        /* \"#utility.yul\":5380:5386   */\n      dup2\n        /* \"#utility.yul\":5367:5387   */\n      calldataload\n        /* \"#utility.yul\":5405:5484   */\n      tag_209\n        /* \"#utility.yul\":5480:5483   */\n      dup5\n        /* \"#utility.yul\":5472:5478   */\n      dup3\n        /* \"#utility.yul\":5465:5469   */\n      0x20\n        /* \"#utility.yul\":5457:5463   */\n      dup7\n        /* \"#utility.yul\":5453:5470   */\n      add\n        /* \"#utility.yul\":5405:5484   */\n      tag_122\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5396:5484   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5490   */\n      pop\n        /* \"#utility.yul\":5150:5490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5496:6150   */\n    tag_23:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5582:5588   */\n      dup1\n        /* \"#utility.yul\":5631:5633   */\n      0x40\n        /* \"#utility.yul\":5619:5628   */\n      dup4\n        /* \"#utility.yul\":5610:5617   */\n      dup6\n        /* \"#utility.yul\":5606:5629   */\n      sub\n        /* \"#utility.yul\":5602:5634   */\n      slt\n        /* \"#utility.yul\":5599:5718   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":5637:5716   */\n      tag_212\n      tag_99\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5599:5718   */\n    tag_211:\n        /* \"#utility.yul\":5785:5786   */\n      0x00\n        /* \"#utility.yul\":5774:5783   */\n      dup4\n        /* \"#utility.yul\":5770:5787   */\n      add\n        /* \"#utility.yul\":5757:5788   */\n      calldataload\n        /* \"#utility.yul\":5815:5833   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5807:5813   */\n      dup2\n        /* \"#utility.yul\":5804:5834   */\n      gt\n        /* \"#utility.yul\":5801:5918   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":5837:5916   */\n      tag_214\n      tag_100\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5801:5918   */\n    tag_213:\n        /* \"#utility.yul\":5942:6005   */\n      tag_215\n        /* \"#utility.yul\":5997:6004   */\n      dup6\n        /* \"#utility.yul\":5988:5994   */\n      dup3\n        /* \"#utility.yul\":5977:5986   */\n      dup7\n        /* \"#utility.yul\":5973:5995   */\n      add\n        /* \"#utility.yul\":5942:6005   */\n      tag_123\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5932:6005   */\n      swap3\n      pop\n        /* \"#utility.yul\":5728:6015   */\n      pop\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6080:6133   */\n      tag_216\n        /* \"#utility.yul\":6125:6132   */\n      dup6\n        /* \"#utility.yul\":6116:6122   */\n      dup3\n        /* \"#utility.yul\":6105:6114   */\n      dup7\n        /* \"#utility.yul\":6101:6123   */\n      add\n        /* \"#utility.yul\":6080:6133   */\n      tag_103\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6070:6133   */\n      swap2\n      pop\n        /* \"#utility.yul\":6025:6143   */\n      pop\n        /* \"#utility.yul\":5496:6150   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6156:6378   */\n    tag_29:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6371   */\n      tag_218\n        /* \"#utility.yul\":6368:6369   */\n      0x00\n        /* \"#utility.yul\":6357:6366   */\n      dup4\n        /* \"#utility.yul\":6353:6370   */\n      add\n        /* \"#utility.yul\":6344:6350   */\n      dup5\n        /* \"#utility.yul\":6300:6371   */\n      tag_107\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6156:6378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6606   */\n    tag_34:\n        /* \"#utility.yul\":6477:6481   */\n      0x00\n        /* \"#utility.yul\":6515:6517   */\n      0x20\n        /* \"#utility.yul\":6504:6513   */\n      dup3\n        /* \"#utility.yul\":6500:6518   */\n      add\n        /* \"#utility.yul\":6492:6518   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6599   */\n      tag_220\n        /* \"#utility.yul\":6596:6597   */\n      0x00\n        /* \"#utility.yul\":6585:6594   */\n      dup4\n        /* \"#utility.yul\":6581:6598   */\n      add\n        /* \"#utility.yul\":6572:6578   */\n      dup5\n        /* \"#utility.yul\":6528:6599   */\n      tag_104\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6384:6606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6612:6734   */\n    tag_124:\n        /* \"#utility.yul\":6685:6709   */\n      tag_222\n        /* \"#utility.yul\":6703:6708   */\n      dup2\n        /* \"#utility.yul\":6685:6709   */\n      tag_106\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6678:6683   */\n      dup2\n        /* \"#utility.yul\":6675:6710   */\n      eq\n        /* \"#utility.yul\":6665:6728   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6724:6725   */\n      0x00\n        /* \"#utility.yul\":6721:6722   */\n      dup1\n        /* \"#utility.yul\":6714:6726   */\n      revert\n        /* \"#utility.yul\":6665:6728   */\n    tag_223:\n        /* \"#utility.yul\":6612:6734   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6740:6879   */\n    tag_125:\n        /* \"#utility.yul\":6786:6791   */\n      0x00\n        /* \"#utility.yul\":6824:6830   */\n      dup2\n        /* \"#utility.yul\":6811:6831   */\n      calldataload\n        /* \"#utility.yul\":6802:6831   */\n      swap1\n      pop\n        /* \"#utility.yul\":6840:6873   */\n      tag_225\n        /* \"#utility.yul\":6867:6872   */\n      dup2\n        /* \"#utility.yul\":6840:6873   */\n      tag_124\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6740:6879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6885:7214   */\n    tag_41:\n        /* \"#utility.yul\":6944:6950   */\n      0x00\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"#utility.yul\":6981:6990   */\n      dup3\n        /* \"#utility.yul\":6972:6979   */\n      dup5\n        /* \"#utility.yul\":6968:6991   */\n      sub\n        /* \"#utility.yul\":6964:6996   */\n      slt\n        /* \"#utility.yul\":6961:7080   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":6999:7078   */\n      tag_228\n      tag_99\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6961:7080   */\n    tag_227:\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7144:7197   */\n      tag_229\n        /* \"#utility.yul\":7189:7196   */\n      dup5\n        /* \"#utility.yul\":7180:7186   */\n      dup3\n        /* \"#utility.yul\":7169:7178   */\n      dup6\n        /* \"#utility.yul\":7165:7187   */\n      add\n        /* \"#utility.yul\":7144:7197   */\n      tag_125\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7134:7197   */\n      swap2\n      pop\n        /* \"#utility.yul\":7090:7207   */\n      pop\n        /* \"#utility.yul\":6885:7214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7220:7400   */\n    tag_126:\n        /* \"#utility.yul\":7268:7345   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7265:7266   */\n      0x00\n        /* \"#utility.yul\":7258:7346   */\n      mstore\n        /* \"#utility.yul\":7365:7369   */\n      0x22\n        /* \"#utility.yul\":7362:7363   */\n      0x04\n        /* \"#utility.yul\":7355:7370   */\n      mstore\n        /* \"#utility.yul\":7389:7393   */\n      0x24\n        /* \"#utility.yul\":7386:7387   */\n      0x00\n        /* \"#utility.yul\":7379:7394   */\n      revert\n        /* \"#utility.yul\":7406:7726   */\n    tag_45:\n        /* \"#utility.yul\":7450:7456   */\n      0x00\n        /* \"#utility.yul\":7487:7488   */\n      0x02\n        /* \"#utility.yul\":7481:7485   */\n      dup3\n        /* \"#utility.yul\":7477:7489   */\n      div\n        /* \"#utility.yul\":7467:7489   */\n      swap1\n      pop\n        /* \"#utility.yul\":7534:7535   */\n      0x01\n        /* \"#utility.yul\":7528:7532   */\n      dup3\n        /* \"#utility.yul\":7524:7536   */\n      and\n        /* \"#utility.yul\":7555:7573   */\n      dup1\n        /* \"#utility.yul\":7545:7626   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":7611:7615   */\n      0x7f\n        /* \"#utility.yul\":7603:7609   */\n      dup3\n        /* \"#utility.yul\":7599:7616   */\n      and\n        /* \"#utility.yul\":7589:7616   */\n      swap2\n      pop\n        /* \"#utility.yul\":7545:7626   */\n    tag_232:\n        /* \"#utility.yul\":7673:7675   */\n      0x20\n        /* \"#utility.yul\":7665:7671   */\n      dup3\n        /* \"#utility.yul\":7662:7676   */\n      lt\n        /* \"#utility.yul\":7642:7660   */\n      dup2\n        /* \"#utility.yul\":7639:7677   */\n      sub\n        /* \"#utility.yul\":7636:7720   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":7692:7710   */\n      tag_234\n      tag_126\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7636:7720   */\n    tag_233:\n        /* \"#utility.yul\":7457:7726   */\n      pop\n        /* \"#utility.yul\":7406:7726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7732:7873   */\n    tag_127:\n        /* \"#utility.yul\":7781:7785   */\n      0x00\n        /* \"#utility.yul\":7804:7807   */\n      dup2\n        /* \"#utility.yul\":7796:7807   */\n      swap1\n      pop\n        /* \"#utility.yul\":7827:7830   */\n      dup2\n        /* \"#utility.yul\":7824:7825   */\n      0x00\n        /* \"#utility.yul\":7817:7831   */\n      mstore\n        /* \"#utility.yul\":7861:7865   */\n      0x20\n        /* \"#utility.yul\":7858:7859   */\n      0x00\n        /* \"#utility.yul\":7848:7866   */\n      keccak256\n        /* \"#utility.yul\":7840:7866   */\n      swap1\n      pop\n        /* \"#utility.yul\":7732:7873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7879:7972   */\n    tag_128:\n        /* \"#utility.yul\":7916:7922   */\n      0x00\n        /* \"#utility.yul\":7963:7965   */\n      0x20\n        /* \"#utility.yul\":7958:7960   */\n      0x1f\n        /* \"#utility.yul\":7951:7956   */\n      dup4\n        /* \"#utility.yul\":7947:7961   */\n      add\n        /* \"#utility.yul\":7943:7966   */\n      div\n        /* \"#utility.yul\":7933:7966   */\n      swap1\n      pop\n        /* \"#utility.yul\":7879:7972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7978:8085   */\n    tag_129:\n        /* \"#utility.yul\":8022:8030   */\n      0x00\n        /* \"#utility.yul\":8072:8077   */\n      dup3\n        /* \"#utility.yul\":8066:8070   */\n      dup3\n        /* \"#utility.yul\":8062:8078   */\n      shl\n        /* \"#utility.yul\":8041:8078   */\n      swap1\n      pop\n        /* \"#utility.yul\":7978:8085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8091:8484   */\n    tag_130:\n        /* \"#utility.yul\":8160:8166   */\n      0x00\n        /* \"#utility.yul\":8210:8211   */\n      0x08\n        /* \"#utility.yul\":8198:8208   */\n      dup4\n        /* \"#utility.yul\":8194:8212   */\n      mul\n        /* \"#utility.yul\":8233:8330   */\n      tag_239\n        /* \"#utility.yul\":8263:8329   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8252:8261   */\n      dup3\n        /* \"#utility.yul\":8233:8330   */\n      tag_129\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8351:8390   */\n      tag_240\n        /* \"#utility.yul\":8381:8389   */\n      dup7\n        /* \"#utility.yul\":8370:8379   */\n      dup4\n        /* \"#utility.yul\":8351:8390   */\n      tag_129\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8339:8390   */\n      swap6\n      pop\n        /* \"#utility.yul\":8423:8427   */\n      dup1\n        /* \"#utility.yul\":8419:8428   */\n      not\n        /* \"#utility.yul\":8412:8417   */\n      dup5\n        /* \"#utility.yul\":8408:8429   */\n      and\n        /* \"#utility.yul\":8399:8429   */\n      swap4\n      pop\n        /* \"#utility.yul\":8472:8476   */\n      dup1\n        /* \"#utility.yul\":8462:8470   */\n      dup7\n        /* \"#utility.yul\":8458:8477   */\n      and\n        /* \"#utility.yul\":8451:8456   */\n      dup5\n        /* \"#utility.yul\":8448:8478   */\n      or\n        /* \"#utility.yul\":8438:8478   */\n      swap3\n      pop\n        /* \"#utility.yul\":8167:8484   */\n      pop\n      pop\n        /* \"#utility.yul\":8091:8484   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8490:8550   */\n    tag_131:\n        /* \"#utility.yul\":8518:8521   */\n      0x00\n        /* \"#utility.yul\":8539:8544   */\n      dup2\n        /* \"#utility.yul\":8532:8544   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8556:8698   */\n    tag_132:\n        /* \"#utility.yul\":8606:8615   */\n      0x00\n        /* \"#utility.yul\":8639:8692   */\n      tag_243\n        /* \"#utility.yul\":8657:8691   */\n      tag_244\n        /* \"#utility.yul\":8666:8690   */\n      tag_245\n        /* \"#utility.yul\":8684:8689   */\n      dup5\n        /* \"#utility.yul\":8666:8690   */\n      tag_101\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8657:8691   */\n      tag_131\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8639:8692   */\n      tag_101\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":8626:8692   */\n      swap1\n      pop\n        /* \"#utility.yul\":8556:8698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8704:8779   */\n    tag_133:\n        /* \"#utility.yul\":8747:8750   */\n      0x00\n        /* \"#utility.yul\":8768:8773   */\n      dup2\n        /* \"#utility.yul\":8761:8773   */\n      swap1\n      pop\n        /* \"#utility.yul\":8704:8779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8785:9054   */\n    tag_134:\n        /* \"#utility.yul\":8895:8934   */\n      tag_248\n        /* \"#utility.yul\":8926:8933   */\n      dup4\n        /* \"#utility.yul\":8895:8934   */\n      tag_132\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8956:9047   */\n      tag_249\n        /* \"#utility.yul\":9005:9046   */\n      tag_250\n        /* \"#utility.yul\":9029:9045   */\n      dup3\n        /* \"#utility.yul\":9005:9046   */\n      tag_133\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8997:9003   */\n      dup5\n        /* \"#utility.yul\":8990:8994   */\n      dup5\n        /* \"#utility.yul\":8984:8995   */\n      sload\n        /* \"#utility.yul\":8956:9047   */\n      tag_130\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8950:8954   */\n      dup3\n        /* \"#utility.yul\":8943:9048   */\n      sstore\n        /* \"#utility.yul\":8861:9054   */\n      pop\n        /* \"#utility.yul\":8785:9054   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9060:9133   */\n    tag_135:\n        /* \"#utility.yul\":9105:9108   */\n      0x00\n        /* \"#utility.yul\":9060:9133   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9139:9328   */\n    tag_136:\n        /* \"#utility.yul\":9216:9248   */\n      tag_253\n      tag_135\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9257:9322   */\n      tag_254\n        /* \"#utility.yul\":9315:9321   */\n      dup2\n        /* \"#utility.yul\":9307:9313   */\n      dup5\n        /* \"#utility.yul\":9301:9305   */\n      dup5\n        /* \"#utility.yul\":9257:9322   */\n      tag_134\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9192:9328   */\n      pop\n        /* \"#utility.yul\":9139:9328   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9334:9520   */\n    tag_137:\n        /* \"#utility.yul\":9394:9514   */\n    tag_256:\n        /* \"#utility.yul\":9411:9414   */\n      dup2\n        /* \"#utility.yul\":9404:9409   */\n      dup2\n        /* \"#utility.yul\":9401:9415   */\n      lt\n        /* \"#utility.yul\":9394:9514   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9465:9504   */\n      tag_259\n        /* \"#utility.yul\":9502:9503   */\n      0x00\n        /* \"#utility.yul\":9495:9500   */\n      dup3\n        /* \"#utility.yul\":9465:9504   */\n      tag_136\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9438:9439   */\n      0x01\n        /* \"#utility.yul\":9431:9436   */\n      dup2\n        /* \"#utility.yul\":9427:9440   */\n      add\n        /* \"#utility.yul\":9418:9440   */\n      swap1\n      pop\n        /* \"#utility.yul\":9394:9514   */\n      jump(tag_256)\n    tag_258:\n        /* \"#utility.yul\":9334:9520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9526:10069   */\n    tag_138:\n        /* \"#utility.yul\":9627:9629   */\n      0x1f\n        /* \"#utility.yul\":9622:9625   */\n      dup3\n        /* \"#utility.yul\":9619:9630   */\n      gt\n        /* \"#utility.yul\":9616:10062   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":9661:9699   */\n      tag_262\n        /* \"#utility.yul\":9693:9698   */\n      dup2\n        /* \"#utility.yul\":9661:9699   */\n      tag_127\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9745:9774   */\n      tag_263\n        /* \"#utility.yul\":9763:9773   */\n      dup5\n        /* \"#utility.yul\":9745:9774   */\n      tag_128\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9735:9743   */\n      dup2\n        /* \"#utility.yul\":9731:9775   */\n      add\n        /* \"#utility.yul\":9928:9930   */\n      0x20\n        /* \"#utility.yul\":9916:9926   */\n      dup6\n        /* \"#utility.yul\":9913:9931   */\n      lt\n        /* \"#utility.yul\":9910:9959   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9949:9957   */\n      dup2\n        /* \"#utility.yul\":9934:9957   */\n      swap1\n      pop\n        /* \"#utility.yul\":9910:9959   */\n    tag_264:\n        /* \"#utility.yul\":9972:10052   */\n      tag_265\n        /* \"#utility.yul\":10028:10050   */\n      tag_266\n        /* \"#utility.yul\":10046:10049   */\n      dup6\n        /* \"#utility.yul\":10028:10050   */\n      tag_128\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10018:10026   */\n      dup4\n        /* \"#utility.yul\":10014:10051   */\n      add\n        /* \"#utility.yul\":10001:10012   */\n      dup3\n        /* \"#utility.yul\":9972:10052   */\n      tag_137\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9631:10062   */\n      pop\n      pop\n        /* \"#utility.yul\":9616:10062   */\n    tag_261:\n        /* \"#utility.yul\":9526:10069   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10075:10192   */\n    tag_139:\n        /* \"#utility.yul\":10129:10137   */\n      0x00\n        /* \"#utility.yul\":10179:10184   */\n      dup3\n        /* \"#utility.yul\":10173:10177   */\n      dup3\n        /* \"#utility.yul\":10169:10185   */\n      shr\n        /* \"#utility.yul\":10148:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":10075:10192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10198:10367   */\n    tag_140:\n        /* \"#utility.yul\":10242:10248   */\n      0x00\n        /* \"#utility.yul\":10275:10326   */\n      tag_269\n        /* \"#utility.yul\":10323:10324   */\n      0x00\n        /* \"#utility.yul\":10319:10325   */\n      not\n        /* \"#utility.yul\":10311:10316   */\n      dup5\n        /* \"#utility.yul\":10308:10309   */\n      0x08\n        /* \"#utility.yul\":10304:10317   */\n      mul\n        /* \"#utility.yul\":10275:10326   */\n      tag_139\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10271:10327   */\n      not\n        /* \"#utility.yul\":10356:10360   */\n      dup1\n        /* \"#utility.yul\":10350:10354   */\n      dup4\n        /* \"#utility.yul\":10346:10361   */\n      and\n        /* \"#utility.yul\":10336:10361   */\n      swap2\n      pop\n        /* \"#utility.yul\":10249:10367   */\n      pop\n        /* \"#utility.yul\":10198:10367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10372:10667   */\n    tag_141:\n        /* \"#utility.yul\":10448:10452   */\n      0x00\n        /* \"#utility.yul\":10594:10623   */\n      tag_271\n        /* \"#utility.yul\":10619:10622   */\n      dup4\n        /* \"#utility.yul\":10613:10617   */\n      dup4\n        /* \"#utility.yul\":10594:10623   */\n      tag_140\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10586:10623   */\n      swap2\n      pop\n        /* \"#utility.yul\":10656:10659   */\n      dup3\n        /* \"#utility.yul\":10653:10654   */\n      0x02\n        /* \"#utility.yul\":10649:10660   */\n      mul\n        /* \"#utility.yul\":10643:10647   */\n      dup3\n        /* \"#utility.yul\":10640:10661   */\n      or\n        /* \"#utility.yul\":10632:10661   */\n      swap1\n      pop\n        /* \"#utility.yul\":10372:10667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10672:12067   */\n    tag_64:\n        /* \"#utility.yul\":10789:10826   */\n      tag_273\n        /* \"#utility.yul\":10822:10825   */\n      dup3\n        /* \"#utility.yul\":10789:10826   */\n      tag_108\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10891:10909   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10883:10889   */\n      dup2\n        /* \"#utility.yul\":10880:10910   */\n      gt\n        /* \"#utility.yul\":10877:10933   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10913:10931   */\n      tag_275\n      tag_117\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10877:10933   */\n    tag_274:\n        /* \"#utility.yul\":10957:10995   */\n      tag_276\n        /* \"#utility.yul\":10989:10993   */\n      dup3\n        /* \"#utility.yul\":10983:10994   */\n      sload\n        /* \"#utility.yul\":10957:10995   */\n      tag_45\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":11042:11109   */\n      tag_277\n        /* \"#utility.yul\":11102:11108   */\n      dup3\n        /* \"#utility.yul\":11094:11100   */\n      dup3\n        /* \"#utility.yul\":11088:11092   */\n      dup6\n        /* \"#utility.yul\":11042:11109   */\n      tag_138\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11136:11137   */\n      0x00\n        /* \"#utility.yul\":11160:11164   */\n      0x20\n        /* \"#utility.yul\":11147:11164   */\n      swap1\n      pop\n        /* \"#utility.yul\":11192:11194   */\n      0x1f\n        /* \"#utility.yul\":11184:11190   */\n      dup4\n        /* \"#utility.yul\":11181:11195   */\n      gt\n        /* \"#utility.yul\":11209:11210   */\n      0x01\n        /* \"#utility.yul\":11204:11822   */\n      dup2\n      eq\n      tag_279\n      jumpi\n        /* \"#utility.yul\":11866:11867   */\n      0x00\n        /* \"#utility.yul\":11883:11889   */\n      dup5\n        /* \"#utility.yul\":11880:11957   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":11932:11941   */\n      dup3\n        /* \"#utility.yul\":11927:11930   */\n      dup8\n        /* \"#utility.yul\":11923:11942   */\n      add\n        /* \"#utility.yul\":11917:11943   */\n      mload\n        /* \"#utility.yul\":11908:11943   */\n      swap1\n      pop\n        /* \"#utility.yul\":11880:11957   */\n    tag_280:\n        /* \"#utility.yul\":11983:12050   */\n      tag_281\n        /* \"#utility.yul\":12043:12049   */\n      dup6\n        /* \"#utility.yul\":12036:12041   */\n      dup3\n        /* \"#utility.yul\":11983:12050   */\n      tag_141\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11977:11981   */\n      dup7\n        /* \"#utility.yul\":11970:12051   */\n      sstore\n        /* \"#utility.yul\":11839:12061   */\n      pop\n        /* \"#utility.yul\":11174:12061   */\n      jump(tag_278)\n        /* \"#utility.yul\":11204:11822   */\n    tag_279:\n        /* \"#utility.yul\":11256:11260   */\n      0x1f\n        /* \"#utility.yul\":11252:11261   */\n      not\n        /* \"#utility.yul\":11244:11250   */\n      dup5\n        /* \"#utility.yul\":11240:11262   */\n      and\n        /* \"#utility.yul\":11290:11327   */\n      tag_282\n        /* \"#utility.yul\":11322:11326   */\n      dup7\n        /* \"#utility.yul\":11290:11327   */\n      tag_127\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11349:11350   */\n      0x00\n        /* \"#utility.yul\":11363:11571   */\n    tag_283:\n        /* \"#utility.yul\":11377:11384   */\n      dup3\n        /* \"#utility.yul\":11374:11375   */\n      dup2\n        /* \"#utility.yul\":11371:11385   */\n      lt\n        /* \"#utility.yul\":11363:11571   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":11456:11465   */\n      dup5\n        /* \"#utility.yul\":11451:11454   */\n      dup10\n        /* \"#utility.yul\":11447:11466   */\n      add\n        /* \"#utility.yul\":11441:11467   */\n      mload\n        /* \"#utility.yul\":11433:11439   */\n      dup3\n        /* \"#utility.yul\":11426:11468   */\n      sstore\n        /* \"#utility.yul\":11507:11508   */\n      0x01\n        /* \"#utility.yul\":11499:11505   */\n      dup3\n        /* \"#utility.yul\":11495:11509   */\n      add\n        /* \"#utility.yul\":11485:11509   */\n      swap2\n      pop\n        /* \"#utility.yul\":11554:11556   */\n      0x20\n        /* \"#utility.yul\":11543:11552   */\n      dup6\n        /* \"#utility.yul\":11539:11557   */\n      add\n        /* \"#utility.yul\":11526:11557   */\n      swap5\n      pop\n        /* \"#utility.yul\":11400:11404   */\n      0x20\n        /* \"#utility.yul\":11397:11398   */\n      dup2\n        /* \"#utility.yul\":11393:11405   */\n      add\n        /* \"#utility.yul\":11388:11405   */\n      swap1\n      pop\n        /* \"#utility.yul\":11363:11571   */\n      jump(tag_283)\n    tag_285:\n        /* \"#utility.yul\":11599:11605   */\n      dup7\n        /* \"#utility.yul\":11590:11597   */\n      dup4\n        /* \"#utility.yul\":11587:11606   */\n      lt\n        /* \"#utility.yul\":11584:11763   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":11657:11666   */\n      dup5\n        /* \"#utility.yul\":11652:11655   */\n      dup10\n        /* \"#utility.yul\":11648:11667   */\n      add\n        /* \"#utility.yul\":11642:11668   */\n      mload\n        /* \"#utility.yul\":11700:11748   */\n      tag_287\n        /* \"#utility.yul\":11742:11746   */\n      0x1f\n        /* \"#utility.yul\":11734:11740   */\n      dup10\n        /* \"#utility.yul\":11730:11747   */\n      and\n        /* \"#utility.yul\":11719:11728   */\n      dup3\n        /* \"#utility.yul\":11700:11748   */\n      tag_140\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11692:11698   */\n      dup4\n        /* \"#utility.yul\":11685:11749   */\n      sstore\n        /* \"#utility.yul\":11607:11763   */\n      pop\n        /* \"#utility.yul\":11584:11763   */\n    tag_286:\n        /* \"#utility.yul\":11809:11810   */\n      0x01\n        /* \"#utility.yul\":11805:11806   */\n      0x02\n        /* \"#utility.yul\":11797:11803   */\n      dup9\n        /* \"#utility.yul\":11793:11807   */\n      mul\n        /* \"#utility.yul\":11789:11811   */\n      add\n        /* \"#utility.yul\":11783:11787   */\n      dup9\n        /* \"#utility.yul\":11776:11812   */\n      sstore\n        /* \"#utility.yul\":11211:11822   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11174:12061   */\n    tag_278:\n      pop\n        /* \"#utility.yul\":10764:12067   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10672:12067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12073:12496   */\n    tag_66:\n        /* \"#utility.yul\":12214:12218   */\n      0x00\n        /* \"#utility.yul\":12252:12254   */\n      0x40\n        /* \"#utility.yul\":12241:12250   */\n      dup3\n        /* \"#utility.yul\":12237:12255   */\n      add\n        /* \"#utility.yul\":12229:12255   */\n      swap1\n      pop\n        /* \"#utility.yul\":12301:12310   */\n      dup2\n        /* \"#utility.yul\":12295:12299   */\n      dup2\n        /* \"#utility.yul\":12291:12311   */\n      sub\n        /* \"#utility.yul\":12287:12288   */\n      0x00\n        /* \"#utility.yul\":12276:12285   */\n      dup4\n        /* \"#utility.yul\":12272:12289   */\n      add\n        /* \"#utility.yul\":12265:12312   */\n      mstore\n        /* \"#utility.yul\":12329:12407   */\n      tag_289\n        /* \"#utility.yul\":12402:12406   */\n      dup2\n        /* \"#utility.yul\":12393:12399   */\n      dup6\n        /* \"#utility.yul\":12329:12407   */\n      tag_112\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":12321:12407   */\n      swap1\n      pop\n        /* \"#utility.yul\":12417:12489   */\n      tag_290\n        /* \"#utility.yul\":12485:12487   */\n      0x20\n        /* \"#utility.yul\":12474:12483   */\n      dup4\n        /* \"#utility.yul\":12470:12488   */\n      add\n        /* \"#utility.yul\":12461:12467   */\n      dup5\n        /* \"#utility.yul\":12417:12489   */\n      tag_104\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12073:12496   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12502:12669   */\n    tag_142:\n        /* \"#utility.yul\":12642:12661   */\n      0x4974656d20616c726561647920736f6c64000000000000000000000000000000\n        /* \"#utility.yul\":12638:12639   */\n      0x00\n        /* \"#utility.yul\":12630:12636   */\n      dup3\n        /* \"#utility.yul\":12626:12640   */\n      add\n        /* \"#utility.yul\":12619:12662   */\n      mstore\n        /* \"#utility.yul\":12502:12669   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12675:13041   */\n    tag_143:\n        /* \"#utility.yul\":12817:12820   */\n      0x00\n        /* \"#utility.yul\":12838:12905   */\n      tag_293\n        /* \"#utility.yul\":12902:12904   */\n      0x11\n        /* \"#utility.yul\":12897:12900   */\n      dup4\n        /* \"#utility.yul\":12838:12905   */\n      tag_109\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12831:12905   */\n      swap2\n      pop\n        /* \"#utility.yul\":12914:13007   */\n      tag_294\n        /* \"#utility.yul\":13003:13006   */\n      dup3\n        /* \"#utility.yul\":12914:13007   */\n      tag_142\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13032:13034   */\n      0x20\n        /* \"#utility.yul\":13027:13030   */\n      dup3\n        /* \"#utility.yul\":13023:13035   */\n      add\n        /* \"#utility.yul\":13016:13035   */\n      swap1\n      pop\n        /* \"#utility.yul\":12675:13041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13466   */\n    tag_73:\n        /* \"#utility.yul\":13213:13217   */\n      0x00\n        /* \"#utility.yul\":13251:13253   */\n      0x20\n        /* \"#utility.yul\":13240:13249   */\n      dup3\n        /* \"#utility.yul\":13236:13254   */\n      add\n        /* \"#utility.yul\":13228:13254   */\n      swap1\n      pop\n        /* \"#utility.yul\":13300:13309   */\n      dup2\n        /* \"#utility.yul\":13294:13298   */\n      dup2\n        /* \"#utility.yul\":13290:13310   */\n      sub\n        /* \"#utility.yul\":13286:13287   */\n      0x00\n        /* \"#utility.yul\":13275:13284   */\n      dup4\n        /* \"#utility.yul\":13271:13288   */\n      add\n        /* \"#utility.yul\":13264:13311   */\n      mstore\n        /* \"#utility.yul\":13328:13459   */\n      tag_296\n        /* \"#utility.yul\":13454:13458   */\n      dup2\n        /* \"#utility.yul\":13328:13459   */\n      tag_143\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13320:13459   */\n      swap1\n      pop\n        /* \"#utility.yul\":13047:13466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13472:13640   */\n    tag_144:\n        /* \"#utility.yul\":13612:13632   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":13608:13609   */\n      0x00\n        /* \"#utility.yul\":13600:13606   */\n      dup3\n        /* \"#utility.yul\":13596:13610   */\n      add\n        /* \"#utility.yul\":13589:13633   */\n      mstore\n        /* \"#utility.yul\":13472:13640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13646:14012   */\n    tag_145:\n        /* \"#utility.yul\":13788:13791   */\n      0x00\n        /* \"#utility.yul\":13809:13876   */\n      tag_299\n        /* \"#utility.yul\":13873:13875   */\n      0x12\n        /* \"#utility.yul\":13868:13871   */\n      dup4\n        /* \"#utility.yul\":13809:13876   */\n      tag_109\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13802:13876   */\n      swap2\n      pop\n        /* \"#utility.yul\":13885:13978   */\n      tag_300\n        /* \"#utility.yul\":13974:13977   */\n      dup3\n        /* \"#utility.yul\":13885:13978   */\n      tag_144\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":14003:14005   */\n      0x20\n        /* \"#utility.yul\":13998:14001   */\n      dup3\n        /* \"#utility.yul\":13994:14006   */\n      add\n        /* \"#utility.yul\":13987:14006   */\n      swap1\n      pop\n        /* \"#utility.yul\":13646:14012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14018:14437   */\n    tag_76:\n        /* \"#utility.yul\":14184:14188   */\n      0x00\n        /* \"#utility.yul\":14222:14224   */\n      0x20\n        /* \"#utility.yul\":14211:14220   */\n      dup3\n        /* \"#utility.yul\":14207:14225   */\n      add\n        /* \"#utility.yul\":14199:14225   */\n      swap1\n      pop\n        /* \"#utility.yul\":14271:14280   */\n      dup2\n        /* \"#utility.yul\":14265:14269   */\n      dup2\n        /* \"#utility.yul\":14261:14281   */\n      sub\n        /* \"#utility.yul\":14257:14258   */\n      0x00\n        /* \"#utility.yul\":14246:14255   */\n      dup4\n        /* \"#utility.yul\":14242:14259   */\n      add\n        /* \"#utility.yul\":14235:14282   */\n      mstore\n        /* \"#utility.yul\":14299:14430   */\n      tag_302\n        /* \"#utility.yul\":14425:14429   */\n      dup2\n        /* \"#utility.yul\":14299:14430   */\n      tag_145\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":14291:14430   */\n      swap1\n      pop\n        /* \"#utility.yul\":14018:14437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ee887731969483f8c7b195952cc4f9c8cae7c88f6b36ec5f78363a13d0aee32964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_5885": {
									"entryPoint": null,
									"id": 5885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:21",
										"nodeType": "YulBlock",
										"src": "0:590:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:21",
													"nodeType": "YulBlock",
													"src": "52:81:21",
													"statements": [
														{
															"nativeSrc": "62:65:21",
															"nodeType": "YulAssignment",
															"src": "62:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:21",
																		"nodeType": "YulLiteral",
																		"src": "84:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:21"
																},
																"nativeSrc": "73:54:21",
																"nodeType": "YulFunctionCall",
																"src": "73:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:21",
														"nodeType": "YulTypedName",
														"src": "34:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:21",
														"nodeType": "YulTypedName",
														"src": "44:7:21",
														"type": ""
													}
												],
												"src": "7:126:21"
											},
											{
												"body": {
													"nativeSrc": "184:51:21",
													"nodeType": "YulBlock",
													"src": "184:51:21",
													"statements": [
														{
															"nativeSrc": "194:35:21",
															"nodeType": "YulAssignment",
															"src": "194:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:21"
																},
																"nativeSrc": "205:24:21",
																"nodeType": "YulFunctionCall",
																"src": "205:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:21",
														"nodeType": "YulTypedName",
														"src": "166:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:21",
														"nodeType": "YulTypedName",
														"src": "176:7:21",
														"type": ""
													}
												],
												"src": "139:96:21"
											},
											{
												"body": {
													"nativeSrc": "306:53:21",
													"nodeType": "YulBlock",
													"src": "306:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:21"
																		},
																		"nativeSrc": "328:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:21"
																},
																"nativeSrc": "316:37:21",
																"nodeType": "YulFunctionCall",
																"src": "316:37:21"
															},
															"nativeSrc": "316:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:21",
														"nodeType": "YulTypedName",
														"src": "294:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:21",
														"nodeType": "YulTypedName",
														"src": "301:3:21",
														"type": ""
													}
												],
												"src": "241:118:21"
											},
											{
												"body": {
													"nativeSrc": "463:124:21",
													"nodeType": "YulBlock",
													"src": "463:124:21",
													"statements": [
														{
															"nativeSrc": "473:26:21",
															"nodeType": "YulAssignment",
															"src": "473:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:21",
																		"nodeType": "YulLiteral",
																		"src": "496:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:21"
																},
																"nativeSrc": "481:18:21",
																"nodeType": "YulFunctionCall",
																"src": "481:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:21",
																				"nodeType": "YulLiteral",
																				"src": "577:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:21"
																		},
																		"nativeSrc": "562:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:21"
																},
																"nativeSrc": "509:71:21",
																"nodeType": "YulFunctionCall",
																"src": "509:71:21"
															},
															"nativeSrc": "509:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:21",
														"nodeType": "YulTypedName",
														"src": "435:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:21",
														"nodeType": "YulTypedName",
														"src": "447:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:21",
														"nodeType": "YulTypedName",
														"src": "458:4:21",
														"type": ""
													}
												],
												"src": "365:222:21"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610f54806101bc5f395ff3fe60806040526004361061006f575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100f1578063c4b151411461011b578063e7fb74c714610145578063f2fde38b146101615761006f565b80633129e77314610073578063715018a6146100b35780638c551742146100c9575b5f80fd5b34801561007e575f80fd5b50610099600480360381019061009491906107ef565b610189565b6040516100aa9594939291906108f2565b60405180910390f35b3480156100be575f80fd5b506100c7610280565b005b3480156100d4575f80fd5b506100ef60048036038101906100ea9190610a76565b610293565b005b3480156100fc575f80fd5b506101056103e8565b6040516101129190610ad0565b60405180910390f35b348015610126575f80fd5b5061012f61040f565b60405161013c9190610ae9565b60405180910390f35b61015f600480360381019061015a91906107ef565b61041f565b005b34801561016c575f80fd5b5061018760048036038101906101829190610b2c565b6105b8565b005b5f8060605f805f60035f8881526020019081526020015f209050805f01549550806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508060020180546101de90610b84565b80601f016020809104026020016040519081016040528092919081815260200182805461020a90610b84565b80156102555780601f1061022c57610100808354040283529160200191610255565b820191905f5260205f20905b81548152906001019060200180831161023857829003601f168201915b5050505050935080600301549250806004015f9054906101000a900460ff1691505091939590929450565b61028861063c565b6102915f6106c3565b565b61029b61063c565b6102a56001610784565b5f6102b06001610798565b90506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f151581525060035f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816103659190610d51565b50606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a885856040516103db929190610e20565b60405180910390a3505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61041a6002610798565b905090565b5f60035f8381526020019081526020015f2090505f1515816004015f9054906101000a900460ff16151514610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048090610e98565b60405180910390fd5b80600301543410156104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c790610f00565b60405180910390fd5b6001816004015f6101000a81548160ff0219169083151502179055506104f66002610784565b3373ffffffffffffffffffffffffffffffffffffffff16827fa574c741071bb18f51fa88c17aeefec514bebf670ca22a3736fba6504ecbb76383600301546040516105419190610ae9565b60405180910390a3806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826003015490811502906040515f60405180830381858888f193505050501580156105b3573d5f803e3d5ffd5b505050565b6105c061063c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610630575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106279190610ad0565b60405180910390fd5b610639816106c3565b50565b6106446107a4565b73ffffffffffffffffffffffffffffffffffffffff166106626103e8565b73ffffffffffffffffffffffffffffffffffffffff16146106c1576106856107a4565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b89190610ad0565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6107ce816107bc565b81146107d8575f80fd5b50565b5f813590506107e9816107c5565b92915050565b5f60208284031215610804576108036107b4565b5b5f610811848285016107db565b91505092915050565b610823816107bc565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61085282610829565b9050919050565b61086281610848565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6108aa82610868565b6108b48185610872565b93506108c4818560208601610882565b6108cd81610890565b840191505092915050565b5f8115159050919050565b6108ec816108d8565b82525050565b5f60a0820190506109055f83018861081a565b6109126020830187610859565b818103604083015261092481866108a0565b9050610933606083018561081a565b61094060808301846108e3565b9695505050505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61098882610890565b810181811067ffffffffffffffff821117156109a7576109a6610952565b5b80604052505050565b5f6109b96107ab565b90506109c5828261097f565b919050565b5f67ffffffffffffffff8211156109e4576109e3610952565b5b6109ed82610890565b9050602081019050919050565b828183375f83830152505050565b5f610a1a610a15846109ca565b6109b0565b905082815260208101848484011115610a3657610a3561094e565b5b610a418482856109fa565b509392505050565b5f82601f830112610a5d57610a5c61094a565b5b8135610a6d848260208601610a08565b91505092915050565b5f8060408385031215610a8c57610a8b6107b4565b5b5f83013567ffffffffffffffff811115610aa957610aa86107b8565b5b610ab585828601610a49565b9250506020610ac6858286016107db565b9150509250929050565b5f602082019050610ae35f830184610859565b92915050565b5f602082019050610afc5f83018461081a565b92915050565b610b0b81610848565b8114610b15575f80fd5b50565b5f81359050610b2681610b02565b92915050565b5f60208284031215610b4157610b406107b4565b5b5f610b4e84828501610b18565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b9b57607f821691505b602082108103610bae57610bad610b57565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610c107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bd5565b610c1a8683610bd5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610c55610c50610c4b846107bc565b610c32565b6107bc565b9050919050565b5f819050919050565b610c6e83610c3b565b610c82610c7a82610c5c565b848454610be1565b825550505050565b5f90565b610c96610c8a565b610ca1818484610c65565b505050565b5b81811015610cc457610cb95f82610c8e565b600181019050610ca7565b5050565b601f821115610d0957610cda81610bb4565b610ce384610bc6565b81016020851015610cf2578190505b610d06610cfe85610bc6565b830182610ca6565b50505b505050565b5f82821c905092915050565b5f610d295f1984600802610d0e565b1980831691505092915050565b5f610d418383610d1a565b9150826002028217905092915050565b610d5a82610868565b67ffffffffffffffff811115610d7357610d72610952565b5b610d7d8254610b84565b610d88828285610cc8565b5f60209050601f831160018114610db9575f8415610da7578287015190505b610db18582610d36565b865550610e18565b601f198416610dc786610bb4565b5f5b82811015610dee57848901518255600182019150602085019450602081019050610dc9565b86831015610e0b5784890151610e07601f891682610d1a565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f830152610e3881856108a0565b9050610e47602083018461081a565b9392505050565b7f4974656d20616c726561647920736f6c640000000000000000000000000000005f82015250565b5f610e82601183610872565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610eea601283610872565b9150610ef582610eb6565b602082019050919050565b5f6020820190508181035f830152610f1781610ede565b905091905056fea2646970667358221220ee887731969483f8c7b195952cc4f9c8cae7c88f6b36ec5f78363a13d0aee32964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF54 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xC4B15141 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x161 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x3129E773 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8C551742 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x60 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1DE SWAP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20A SWAP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x255 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x255 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x238 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP1 PUSH1 0x3 ADD SLOAD SWAP3 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x291 PUSH0 PUSH2 0x6C3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x29B PUSH2 0x63C JUMP JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH2 0x784 JUMP JUMPDEST PUSH0 PUSH2 0x2B0 PUSH1 0x1 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x41A PUSH1 0x2 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x480 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x4F6 PUSH1 0x2 PUSH2 0x784 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA574C741071BB18F51FA88C17AEEFEC514BEBF670CA22A3736FBA6504ECBB763 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x3 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x63C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x630 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x6C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x644 PUSH2 0x7A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x3E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C1 JUMPI PUSH2 0x685 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CE DUP2 PUSH2 0x7BC JUMP JUMPDEST DUP2 EQ PUSH2 0x7D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E9 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x811 DUP5 DUP3 DUP6 ADD PUSH2 0x7DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP2 PUSH2 0x7BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x852 DUP3 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x862 DUP2 PUSH2 0x848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x8B4 DUP2 DUP6 PUSH2 0x872 JUMP JUMPDEST SWAP4 POP PUSH2 0x8C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x882 JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x890 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EC DUP2 PUSH2 0x8D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x905 PUSH0 DUP4 ADD DUP9 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x912 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x859 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x924 DUP2 DUP7 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x933 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x940 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8E3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x988 DUP3 PUSH2 0x890 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x952 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x9C5 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9E4 JUMPI PUSH2 0x9E3 PUSH2 0x952 JUMP JUMPDEST JUMPDEST PUSH2 0x9ED DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1A PUSH2 0xA15 DUP5 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x94E JUMP JUMPDEST JUMPDEST PUSH2 0xA41 DUP5 DUP3 DUP6 PUSH2 0x9FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x94A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xAA8 PUSH2 0x7B8 JUMP JUMPDEST JUMPDEST PUSH2 0xAB5 DUP6 DUP3 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC6 DUP6 DUP3 DUP7 ADD PUSH2 0x7DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFC PUSH0 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0x848 JUMP JUMPDEST DUP2 EQ PUSH2 0xB15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB40 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB4E DUP5 DUP3 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBAE JUMPI PUSH2 0xBAD PUSH2 0xB57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xC10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC1A DUP7 DUP4 PUSH2 0xBD5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC55 PUSH2 0xC50 PUSH2 0xC4B DUP5 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP4 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0xC82 PUSH2 0xC7A DUP3 PUSH2 0xC5C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xBE1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCA1 DUP2 DUP5 DUP5 PUSH2 0xC65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCB9 PUSH0 DUP3 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xCDA DUP2 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xCE3 DUP5 PUSH2 0xBC6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xCF2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xD06 PUSH2 0xCFE DUP6 PUSH2 0xBC6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xCA6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD29 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xD0E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD41 DUP4 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5A DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD73 JUMPI PUSH2 0xD72 PUSH2 0x952 JUMP JUMPDEST JUMPDEST PUSH2 0xD7D DUP3 SLOAD PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xD88 DUP3 DUP3 DUP6 PUSH2 0xCC8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xDB9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xDA7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xDB1 DUP6 DUP3 PUSH2 0xD36 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xDC7 DUP7 PUSH2 0xBB4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDC9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xE0B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xE07 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xD1A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE38 DUP2 DUP6 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xE47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D20616C726561647920736F6C64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x11 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEEA PUSH1 0x12 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF5 DUP3 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF17 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP9 PUSH24 0x31969483F8C7B195952CC4F9C8CAE7C88F6B36EC5F78363A SGT 0xD0 0xAE 0xE3 0x29 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "309:1738:20:-:0;;;2007:37;;;;;;;;;;2029:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;309:1738:20;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:21:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;309:1738:20:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1596,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1651": {
									"entryPoint": 1956,
									"id": 1651,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1731,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyItem_5819": {
									"entryPoint": 1055,
									"id": 5819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createItem_5760": {
									"entryPoint": 659,
									"id": 5760,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_1687": {
									"entryPoint": 1944,
									"id": 1687,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getItem_5867": {
									"entryPoint": 393,
									"id": 5867,
									"parameterSlots": 1,
									"returnSlots": 5
								},
								"@getItemsSold_5877": {
									"entryPoint": 1039,
									"id": 5877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1701": {
									"entryPoint": 1924,
									"id": 1701,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1000,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 640,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1464,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14440:21",
										"nodeType": "YulBlock",
										"src": "0:14440:21",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:21",
													"nodeType": "YulBlock",
													"src": "47:35:21",
													"statements": [
														{
															"nativeSrc": "57:19:21",
															"nodeType": "YulAssignment",
															"src": "57:19:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:21",
																		"nodeType": "YulLiteral",
																		"src": "73:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:21"
																},
																"nativeSrc": "67:9:21",
																"nodeType": "YulFunctionCall",
																"src": "67:9:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:21"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:21",
														"nodeType": "YulTypedName",
														"src": "40:6:21",
														"type": ""
													}
												],
												"src": "7:75:21"
											},
											{
												"body": {
													"nativeSrc": "177:28:21",
													"nodeType": "YulBlock",
													"src": "177:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:21",
																		"nodeType": "YulLiteral",
																		"src": "194:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:21",
																		"nodeType": "YulLiteral",
																		"src": "197:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:21"
																},
																"nativeSrc": "187:12:21",
																"nodeType": "YulFunctionCall",
																"src": "187:12:21"
															},
															"nativeSrc": "187:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:21"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:21"
											},
											{
												"body": {
													"nativeSrc": "300:28:21",
													"nodeType": "YulBlock",
													"src": "300:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:21",
																		"nodeType": "YulLiteral",
																		"src": "317:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:21",
																		"nodeType": "YulLiteral",
																		"src": "320:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:21"
																},
																"nativeSrc": "310:12:21",
																"nodeType": "YulFunctionCall",
																"src": "310:12:21"
															},
															"nativeSrc": "310:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:21"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:21"
											},
											{
												"body": {
													"nativeSrc": "379:32:21",
													"nodeType": "YulBlock",
													"src": "379:32:21",
													"statements": [
														{
															"nativeSrc": "389:16:21",
															"nodeType": "YulAssignment",
															"src": "389:16:21",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:21",
																"nodeType": "YulIdentifier",
																"src": "400:5:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:21",
														"nodeType": "YulTypedName",
														"src": "361:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:21",
														"nodeType": "YulTypedName",
														"src": "371:7:21",
														"type": ""
													}
												],
												"src": "334:77:21"
											},
											{
												"body": {
													"nativeSrc": "460:79:21",
													"nodeType": "YulBlock",
													"src": "460:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:21",
																"nodeType": "YulBlock",
																"src": "517:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:21",
																					"nodeType": "YulLiteral",
																					"src": "526:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:21",
																					"nodeType": "YulLiteral",
																					"src": "529:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:21"
																			},
																			"nativeSrc": "519:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:21"
																		},
																		"nativeSrc": "519:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:21"
																				},
																				"nativeSrc": "490:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:21"
																		},
																		"nativeSrc": "480:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:21"
																},
																"nativeSrc": "473:43:21",
																"nodeType": "YulFunctionCall",
																"src": "473:43:21"
															},
															"nativeSrc": "470:63:21",
															"nodeType": "YulIf",
															"src": "470:63:21"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:21",
														"nodeType": "YulTypedName",
														"src": "453:5:21",
														"type": ""
													}
												],
												"src": "417:122:21"
											},
											{
												"body": {
													"nativeSrc": "597:87:21",
													"nodeType": "YulBlock",
													"src": "597:87:21",
													"statements": [
														{
															"nativeSrc": "607:29:21",
															"nodeType": "YulAssignment",
															"src": "607:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:21"
																},
																"nativeSrc": "616:20:21",
																"nodeType": "YulFunctionCall",
																"src": "616:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:21"
																},
																"nativeSrc": "645:33:21",
																"nodeType": "YulFunctionCall",
																"src": "645:33:21"
															},
															"nativeSrc": "645:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:21"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:21",
														"nodeType": "YulTypedName",
														"src": "575:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:21",
														"nodeType": "YulTypedName",
														"src": "583:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:21",
														"nodeType": "YulTypedName",
														"src": "591:5:21",
														"type": ""
													}
												],
												"src": "545:139:21"
											},
											{
												"body": {
													"nativeSrc": "756:263:21",
													"nodeType": "YulBlock",
													"src": "756:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:21",
																"nodeType": "YulBlock",
																"src": "802:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:21"
																			},
																			"nativeSrc": "804:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:21"
																		},
																		"nativeSrc": "804:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:21"
																		},
																		"nativeSrc": "773:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:21",
																		"nodeType": "YulLiteral",
																		"src": "798:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:21"
																},
																"nativeSrc": "769:32:21",
																"nodeType": "YulFunctionCall",
																"src": "769:32:21"
															},
															"nativeSrc": "766:119:21",
															"nodeType": "YulIf",
															"src": "766:119:21"
														},
														{
															"nativeSrc": "895:117:21",
															"nodeType": "YulBlock",
															"src": "895:117:21",
															"statements": [
																{
																	"nativeSrc": "910:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:21",
																		"nodeType": "YulLiteral",
																		"src": "924:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:21",
																			"nodeType": "YulTypedName",
																			"src": "914:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:21",
																	"nodeType": "YulAssignment",
																	"src": "939:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:21"
																				},
																				"nativeSrc": "970:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:21"
																		},
																		"nativeSrc": "949:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:21",
														"nodeType": "YulTypedName",
														"src": "726:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:21",
														"nodeType": "YulTypedName",
														"src": "737:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:21",
														"nodeType": "YulTypedName",
														"src": "749:6:21",
														"type": ""
													}
												],
												"src": "690:329:21"
											},
											{
												"body": {
													"nativeSrc": "1090:53:21",
													"nodeType": "YulBlock",
													"src": "1090:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:21"
																		},
																		"nativeSrc": "1112:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:21"
																},
																"nativeSrc": "1100:37:21",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:21"
															},
															"nativeSrc": "1100:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:21"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:21",
														"nodeType": "YulTypedName",
														"src": "1078:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:21",
														"nodeType": "YulTypedName",
														"src": "1085:3:21",
														"type": ""
													}
												],
												"src": "1025:118:21"
											},
											{
												"body": {
													"nativeSrc": "1194:81:21",
													"nodeType": "YulBlock",
													"src": "1194:81:21",
													"statements": [
														{
															"nativeSrc": "1204:65:21",
															"nodeType": "YulAssignment",
															"src": "1204:65:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1219:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1219:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1226:42:21",
																		"nodeType": "YulLiteral",
																		"src": "1226:42:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1215:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:21"
																},
																"nativeSrc": "1215:54:21",
																"nodeType": "YulFunctionCall",
																"src": "1215:54:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1204:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1204:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1149:126:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1176:5:21",
														"nodeType": "YulTypedName",
														"src": "1176:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1186:7:21",
														"nodeType": "YulTypedName",
														"src": "1186:7:21",
														"type": ""
													}
												],
												"src": "1149:126:21"
											},
											{
												"body": {
													"nativeSrc": "1326:51:21",
													"nodeType": "YulBlock",
													"src": "1326:51:21",
													"statements": [
														{
															"nativeSrc": "1336:35:21",
															"nodeType": "YulAssignment",
															"src": "1336:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1365:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1365:5:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1347:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "1347:17:21"
																},
																"nativeSrc": "1347:24:21",
																"nodeType": "YulFunctionCall",
																"src": "1347:24:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1336:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "1336:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1281:96:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1308:5:21",
														"nodeType": "YulTypedName",
														"src": "1308:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1318:7:21",
														"nodeType": "YulTypedName",
														"src": "1318:7:21",
														"type": ""
													}
												],
												"src": "1281:96:21"
											},
											{
												"body": {
													"nativeSrc": "1448:53:21",
													"nodeType": "YulBlock",
													"src": "1448:53:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1465:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1465:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1488:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "1488:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1470:17:21",
																			"nodeType": "YulIdentifier",
																			"src": "1470:17:21"
																		},
																		"nativeSrc": "1470:24:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:24:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1458:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:21"
																},
																"nativeSrc": "1458:37:21",
																"nodeType": "YulFunctionCall",
																"src": "1458:37:21"
															},
															"nativeSrc": "1458:37:21",
															"nodeType": "YulExpressionStatement",
															"src": "1458:37:21"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1383:118:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1436:5:21",
														"nodeType": "YulTypedName",
														"src": "1436:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1443:3:21",
														"nodeType": "YulTypedName",
														"src": "1443:3:21",
														"type": ""
													}
												],
												"src": "1383:118:21"
											},
											{
												"body": {
													"nativeSrc": "1566:40:21",
													"nodeType": "YulBlock",
													"src": "1566:40:21",
													"statements": [
														{
															"nativeSrc": "1577:22:21",
															"nodeType": "YulAssignment",
															"src": "1577:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:21"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1587:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1587:5:21"
																},
																"nativeSrc": "1587:12:21",
																"nodeType": "YulFunctionCall",
																"src": "1587:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1577:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:21"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1507:99:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1549:5:21",
														"nodeType": "YulTypedName",
														"src": "1549:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1559:6:21",
														"nodeType": "YulTypedName",
														"src": "1559:6:21",
														"type": ""
													}
												],
												"src": "1507:99:21"
											},
											{
												"body": {
													"nativeSrc": "1708:73:21",
													"nodeType": "YulBlock",
													"src": "1708:73:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1725:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1725:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1730:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1730:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1718:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1718:6:21"
																},
																"nativeSrc": "1718:19:21",
																"nodeType": "YulFunctionCall",
																"src": "1718:19:21"
															},
															"nativeSrc": "1718:19:21",
															"nodeType": "YulExpressionStatement",
															"src": "1718:19:21"
														},
														{
															"nativeSrc": "1746:29:21",
															"nodeType": "YulAssignment",
															"src": "1746:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1765:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1765:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:4:21",
																		"nodeType": "YulLiteral",
																		"src": "1770:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1761:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:21"
																},
																"nativeSrc": "1761:14:21",
																"nodeType": "YulFunctionCall",
																"src": "1761:14:21"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1746:11:21",
																	"nodeType": "YulIdentifier",
																	"src": "1746:11:21"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1612:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1680:3:21",
														"nodeType": "YulTypedName",
														"src": "1680:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1685:6:21",
														"nodeType": "YulTypedName",
														"src": "1685:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1696:11:21",
														"nodeType": "YulTypedName",
														"src": "1696:11:21",
														"type": ""
													}
												],
												"src": "1612:169:21"
											},
											{
												"body": {
													"nativeSrc": "1849:77:21",
													"nodeType": "YulBlock",
													"src": "1849:77:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1866:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1866:3:21"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1871:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "1871:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1876:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "1876:6:21"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1860:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:21"
																},
																"nativeSrc": "1860:23:21",
																"nodeType": "YulFunctionCall",
																"src": "1860:23:21"
															},
															"nativeSrc": "1860:23:21",
															"nodeType": "YulExpressionStatement",
															"src": "1860:23:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1903:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "1903:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1908:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "1908:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1899:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "1899:3:21"
																		},
																		"nativeSrc": "1899:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "1899:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1917:1:21",
																		"nodeType": "YulLiteral",
																		"src": "1917:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1892:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:21"
																},
																"nativeSrc": "1892:27:21",
																"nodeType": "YulFunctionCall",
																"src": "1892:27:21"
															},
															"nativeSrc": "1892:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "1892:27:21"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1787:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1831:3:21",
														"nodeType": "YulTypedName",
														"src": "1831:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1836:3:21",
														"nodeType": "YulTypedName",
														"src": "1836:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1841:6:21",
														"nodeType": "YulTypedName",
														"src": "1841:6:21",
														"type": ""
													}
												],
												"src": "1787:139:21"
											},
											{
												"body": {
													"nativeSrc": "1980:54:21",
													"nodeType": "YulBlock",
													"src": "1980:54:21",
													"statements": [
														{
															"nativeSrc": "1990:38:21",
															"nodeType": "YulAssignment",
															"src": "1990:38:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2008:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2008:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2015:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2015:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2004:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:21"
																		},
																		"nativeSrc": "2004:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2004:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2024:2:21",
																				"nodeType": "YulLiteral",
																				"src": "2024:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2020:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:21"
																		},
																		"nativeSrc": "2020:7:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2020:7:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2000:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:21"
																},
																"nativeSrc": "2000:28:21",
																"nodeType": "YulFunctionCall",
																"src": "2000:28:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1990:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:21"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1932:102:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1963:5:21",
														"nodeType": "YulTypedName",
														"src": "1963:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1973:6:21",
														"nodeType": "YulTypedName",
														"src": "1973:6:21",
														"type": ""
													}
												],
												"src": "1932:102:21"
											},
											{
												"body": {
													"nativeSrc": "2132:285:21",
													"nodeType": "YulBlock",
													"src": "2132:285:21",
													"statements": [
														{
															"nativeSrc": "2142:53:21",
															"nodeType": "YulVariableDeclaration",
															"src": "2142:53:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2189:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "2189:5:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2156:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "2156:32:21"
																},
																"nativeSrc": "2156:39:21",
																"nodeType": "YulFunctionCall",
																"src": "2156:39:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2146:6:21",
																	"nodeType": "YulTypedName",
																	"src": "2146:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2204:78:21",
															"nodeType": "YulAssignment",
															"src": "2204:78:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2270:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2275:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2275:6:21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2211:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "2211:58:21"
																},
																"nativeSrc": "2211:71:21",
																"nodeType": "YulFunctionCall",
																"src": "2211:71:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2204:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2204:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2330:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2330:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2337:4:21",
																				"nodeType": "YulLiteral",
																				"src": "2337:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:21"
																		},
																		"nativeSrc": "2326:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:16:21"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2344:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2344:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2349:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2349:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2291:34:21",
																	"nodeType": "YulIdentifier",
																	"src": "2291:34:21"
																},
																"nativeSrc": "2291:65:21",
																"nodeType": "YulFunctionCall",
																"src": "2291:65:21"
															},
															"nativeSrc": "2291:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "2291:65:21"
														},
														{
															"nativeSrc": "2365:46:21",
															"nodeType": "YulAssignment",
															"src": "2365:46:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2376:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2376:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2403:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "2403:6:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2381:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "2381:21:21"
																		},
																		"nativeSrc": "2381:29:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2381:29:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2372:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:21"
																},
																"nativeSrc": "2372:39:21",
																"nodeType": "YulFunctionCall",
																"src": "2372:39:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2365:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2365:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2040:377:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2113:5:21",
														"nodeType": "YulTypedName",
														"src": "2113:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2120:3:21",
														"nodeType": "YulTypedName",
														"src": "2120:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2128:3:21",
														"nodeType": "YulTypedName",
														"src": "2128:3:21",
														"type": ""
													}
												],
												"src": "2040:377:21"
											},
											{
												"body": {
													"nativeSrc": "2465:48:21",
													"nodeType": "YulBlock",
													"src": "2465:48:21",
													"statements": [
														{
															"nativeSrc": "2475:32:21",
															"nodeType": "YulAssignment",
															"src": "2475:32:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2500:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2500:5:21"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2493:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "2493:6:21"
																		},
																		"nativeSrc": "2493:13:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:13:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2486:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2486:6:21"
																},
																"nativeSrc": "2486:21:21",
																"nodeType": "YulFunctionCall",
																"src": "2486:21:21"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2475:7:21",
																	"nodeType": "YulIdentifier",
																	"src": "2475:7:21"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2423:90:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2447:5:21",
														"nodeType": "YulTypedName",
														"src": "2447:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2457:7:21",
														"nodeType": "YulTypedName",
														"src": "2457:7:21",
														"type": ""
													}
												],
												"src": "2423:90:21"
											},
											{
												"body": {
													"nativeSrc": "2578:50:21",
													"nodeType": "YulBlock",
													"src": "2578:50:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2595:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "2595:3:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2615:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "2615:5:21"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2600:14:21",
																			"nodeType": "YulIdentifier",
																			"src": "2600:14:21"
																		},
																		"nativeSrc": "2600:21:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2600:21:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2588:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:21"
																},
																"nativeSrc": "2588:34:21",
																"nodeType": "YulFunctionCall",
																"src": "2588:34:21"
															},
															"nativeSrc": "2588:34:21",
															"nodeType": "YulExpressionStatement",
															"src": "2588:34:21"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2519:109:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2566:5:21",
														"nodeType": "YulTypedName",
														"src": "2566:5:21",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2573:3:21",
														"nodeType": "YulTypedName",
														"src": "2573:3:21",
														"type": ""
													}
												],
												"src": "2519:109:21"
											},
											{
												"body": {
													"nativeSrc": "2858:519:21",
													"nodeType": "YulBlock",
													"src": "2858:519:21",
													"statements": [
														{
															"nativeSrc": "2868:27:21",
															"nodeType": "YulAssignment",
															"src": "2868:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2880:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2891:3:21",
																		"nodeType": "YulLiteral",
																		"src": "2891:3:21",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2876:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:21"
																},
																"nativeSrc": "2876:19:21",
																"nodeType": "YulFunctionCall",
																"src": "2876:19:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2868:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "2868:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2949:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "2949:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2962:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "2962:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2973:1:21",
																				"nodeType": "YulLiteral",
																				"src": "2973:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2958:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "2958:3:21"
																		},
																		"nativeSrc": "2958:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "2958:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2905:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "2905:43:21"
																},
																"nativeSrc": "2905:71:21",
																"nodeType": "YulFunctionCall",
																"src": "2905:71:21"
															},
															"nativeSrc": "2905:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "2905:71:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3030:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3030:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3043:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3043:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3054:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3054:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3039:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3039:3:21"
																		},
																		"nativeSrc": "3039:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3039:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2986:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "2986:43:21"
																},
																"nativeSrc": "2986:72:21",
																"nodeType": "YulFunctionCall",
																"src": "2986:72:21"
															},
															"nativeSrc": "2986:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "2986:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3079:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3090:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3090:2:21",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3075:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:21"
																		},
																		"nativeSrc": "3075:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3075:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3099:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "3099:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3095:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:21"
																		},
																		"nativeSrc": "3095:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3068:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:21"
																},
																"nativeSrc": "3068:48:21",
																"nodeType": "YulFunctionCall",
																"src": "3068:48:21"
															},
															"nativeSrc": "3068:48:21",
															"nodeType": "YulExpressionStatement",
															"src": "3068:48:21"
														},
														{
															"nativeSrc": "3125:86:21",
															"nodeType": "YulAssignment",
															"src": "3125:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3197:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3197:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3206:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "3206:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3133:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "3133:63:21"
																},
																"nativeSrc": "3133:78:21",
																"nodeType": "YulFunctionCall",
																"src": "3133:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3125:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "3125:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3265:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3265:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3278:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3289:2:21",
																				"nodeType": "YulLiteral",
																				"src": "3289:2:21",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3274:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:21"
																		},
																		"nativeSrc": "3274:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3221:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "3221:43:21"
																},
																"nativeSrc": "3221:72:21",
																"nodeType": "YulFunctionCall",
																"src": "3221:72:21"
															},
															"nativeSrc": "3221:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "3221:72:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3341:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3341:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3354:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3365:3:21",
																				"nodeType": "YulLiteral",
																				"src": "3365:3:21",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:21"
																		},
																		"nativeSrc": "3350:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:19:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3303:37:21",
																	"nodeType": "YulIdentifier",
																	"src": "3303:37:21"
																},
																"nativeSrc": "3303:67:21",
																"nodeType": "YulFunctionCall",
																"src": "3303:67:21"
															},
															"nativeSrc": "3303:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "3303:67:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2634:743:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2798:9:21",
														"nodeType": "YulTypedName",
														"src": "2798:9:21",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2810:6:21",
														"nodeType": "YulTypedName",
														"src": "2810:6:21",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2818:6:21",
														"nodeType": "YulTypedName",
														"src": "2818:6:21",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2826:6:21",
														"nodeType": "YulTypedName",
														"src": "2826:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2834:6:21",
														"nodeType": "YulTypedName",
														"src": "2834:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2842:6:21",
														"nodeType": "YulTypedName",
														"src": "2842:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2853:4:21",
														"nodeType": "YulTypedName",
														"src": "2853:4:21",
														"type": ""
													}
												],
												"src": "2634:743:21"
											},
											{
												"body": {
													"nativeSrc": "3472:28:21",
													"nodeType": "YulBlock",
													"src": "3472:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3489:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3489:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3492:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3492:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3482:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3482:6:21"
																},
																"nativeSrc": "3482:12:21",
																"nodeType": "YulFunctionCall",
																"src": "3482:12:21"
															},
															"nativeSrc": "3482:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "3482:12:21"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3383:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "3383:117:21"
											},
											{
												"body": {
													"nativeSrc": "3595:28:21",
													"nodeType": "YulBlock",
													"src": "3595:28:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3612:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3615:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3605:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:21"
																},
																"nativeSrc": "3605:12:21",
																"nodeType": "YulFunctionCall",
																"src": "3605:12:21"
															},
															"nativeSrc": "3605:12:21",
															"nodeType": "YulExpressionStatement",
															"src": "3605:12:21"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3506:117:21",
												"nodeType": "YulFunctionDefinition",
												"src": "3506:117:21"
											},
											{
												"body": {
													"nativeSrc": "3657:152:21",
													"nodeType": "YulBlock",
													"src": "3657:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3674:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3674:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3677:77:21",
																		"nodeType": "YulLiteral",
																		"src": "3677:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3667:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:21"
																},
																"nativeSrc": "3667:88:21",
																"nodeType": "YulFunctionCall",
																"src": "3667:88:21"
															},
															"nativeSrc": "3667:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "3667:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3771:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3771:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3774:4:21",
																		"nodeType": "YulLiteral",
																		"src": "3774:4:21",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:21"
																},
																"nativeSrc": "3764:15:21",
																"nodeType": "YulFunctionCall",
																"src": "3764:15:21"
															},
															"nativeSrc": "3764:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "3764:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3795:1:21",
																		"nodeType": "YulLiteral",
																		"src": "3795:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3798:4:21",
																		"nodeType": "YulLiteral",
																		"src": "3798:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3788:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:21"
																},
																"nativeSrc": "3788:15:21",
																"nodeType": "YulFunctionCall",
																"src": "3788:15:21"
															},
															"nativeSrc": "3788:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "3788:15:21"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3629:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "3629:180:21"
											},
											{
												"body": {
													"nativeSrc": "3858:238:21",
													"nodeType": "YulBlock",
													"src": "3858:238:21",
													"statements": [
														{
															"nativeSrc": "3868:58:21",
															"nodeType": "YulVariableDeclaration",
															"src": "3868:58:21",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3890:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "3890:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3920:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "3920:4:21"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3898:21:21",
																			"nodeType": "YulIdentifier",
																			"src": "3898:21:21"
																		},
																		"nativeSrc": "3898:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:27:21"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3886:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "3886:3:21"
																},
																"nativeSrc": "3886:40:21",
																"nodeType": "YulFunctionCall",
																"src": "3886:40:21"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3872:10:21",
																	"nodeType": "YulTypedName",
																	"src": "3872:10:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4037:22:21",
																"nodeType": "YulBlock",
																"src": "4037:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4039:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "4039:16:21"
																			},
																			"nativeSrc": "4039:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4039:18:21"
																		},
																		"nativeSrc": "4039:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4039:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3980:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "3980:10:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3992:18:21",
																				"nodeType": "YulLiteral",
																				"src": "3992:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3977:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "3977:2:21"
																		},
																		"nativeSrc": "3977:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:34:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4016:10:21",
																				"nodeType": "YulIdentifier",
																				"src": "4016:10:21"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4028:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4028:6:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4013:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "4013:2:21"
																		},
																		"nativeSrc": "4013:22:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4013:22:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3974:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "3974:2:21"
																},
																"nativeSrc": "3974:62:21",
																"nodeType": "YulFunctionCall",
																"src": "3974:62:21"
															},
															"nativeSrc": "3971:88:21",
															"nodeType": "YulIf",
															"src": "3971:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4075:2:21",
																		"nodeType": "YulLiteral",
																		"src": "4075:2:21",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4079:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "4079:10:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4068:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:21"
																},
																"nativeSrc": "4068:22:21",
																"nodeType": "YulFunctionCall",
																"src": "4068:22:21"
															},
															"nativeSrc": "4068:22:21",
															"nodeType": "YulExpressionStatement",
															"src": "4068:22:21"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3815:281:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3844:6:21",
														"nodeType": "YulTypedName",
														"src": "3844:6:21",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3852:4:21",
														"nodeType": "YulTypedName",
														"src": "3852:4:21",
														"type": ""
													}
												],
												"src": "3815:281:21"
											},
											{
												"body": {
													"nativeSrc": "4143:88:21",
													"nodeType": "YulBlock",
													"src": "4143:88:21",
													"statements": [
														{
															"nativeSrc": "4153:30:21",
															"nodeType": "YulAssignment",
															"src": "4153:30:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4163:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "4163:18:21"
																},
																"nativeSrc": "4163:20:21",
																"nodeType": "YulFunctionCall",
																"src": "4163:20:21"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4153:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4153:6:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4212:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4212:6:21"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4220:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "4220:4:21"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4192:19:21",
																	"nodeType": "YulIdentifier",
																	"src": "4192:19:21"
																},
																"nativeSrc": "4192:33:21",
																"nodeType": "YulFunctionCall",
																"src": "4192:33:21"
															},
															"nativeSrc": "4192:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "4192:33:21"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4102:129:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4127:4:21",
														"nodeType": "YulTypedName",
														"src": "4127:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4136:6:21",
														"nodeType": "YulTypedName",
														"src": "4136:6:21",
														"type": ""
													}
												],
												"src": "4102:129:21"
											},
											{
												"body": {
													"nativeSrc": "4304:241:21",
													"nodeType": "YulBlock",
													"src": "4304:241:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "4409:22:21",
																"nodeType": "YulBlock",
																"src": "4409:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4411:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "4411:16:21"
																			},
																			"nativeSrc": "4411:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4411:18:21"
																		},
																		"nativeSrc": "4411:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4411:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4381:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4381:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:18:21",
																		"nodeType": "YulLiteral",
																		"src": "4389:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4378:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "4378:2:21"
																},
																"nativeSrc": "4378:30:21",
																"nodeType": "YulFunctionCall",
																"src": "4378:30:21"
															},
															"nativeSrc": "4375:56:21",
															"nodeType": "YulIf",
															"src": "4375:56:21"
														},
														{
															"nativeSrc": "4441:37:21",
															"nodeType": "YulAssignment",
															"src": "4441:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4471:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4471:6:21"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4449:21:21",
																	"nodeType": "YulIdentifier",
																	"src": "4449:21:21"
																},
																"nativeSrc": "4449:29:21",
																"nodeType": "YulFunctionCall",
																"src": "4449:29:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4441:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4441:4:21"
																}
															]
														},
														{
															"nativeSrc": "4515:23:21",
															"nodeType": "YulAssignment",
															"src": "4515:23:21",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4527:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "4527:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4533:4:21",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4523:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:21"
																},
																"nativeSrc": "4523:15:21",
																"nodeType": "YulFunctionCall",
																"src": "4523:15:21"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4515:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "4515:4:21"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4237:308:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4288:6:21",
														"nodeType": "YulTypedName",
														"src": "4288:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4299:4:21",
														"nodeType": "YulTypedName",
														"src": "4299:4:21",
														"type": ""
													}
												],
												"src": "4237:308:21"
											},
											{
												"body": {
													"nativeSrc": "4615:84:21",
													"nodeType": "YulBlock",
													"src": "4615:84:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4639:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "4639:3:21"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4644:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "4644:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4649:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4649:6:21"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4626:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "4626:12:21"
																},
																"nativeSrc": "4626:30:21",
																"nodeType": "YulFunctionCall",
																"src": "4626:30:21"
															},
															"nativeSrc": "4626:30:21",
															"nodeType": "YulExpressionStatement",
															"src": "4626:30:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4676:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4681:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4681:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4672:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:21"
																		},
																		"nativeSrc": "4672:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:16:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:1:21",
																		"nodeType": "YulLiteral",
																		"src": "4690:1:21",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4665:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:21"
																},
																"nativeSrc": "4665:27:21",
																"nodeType": "YulFunctionCall",
																"src": "4665:27:21"
															},
															"nativeSrc": "4665:27:21",
															"nodeType": "YulExpressionStatement",
															"src": "4665:27:21"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4551:148:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4597:3:21",
														"nodeType": "YulTypedName",
														"src": "4597:3:21",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4602:3:21",
														"nodeType": "YulTypedName",
														"src": "4602:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4607:6:21",
														"nodeType": "YulTypedName",
														"src": "4607:6:21",
														"type": ""
													}
												],
												"src": "4551:148:21"
											},
											{
												"body": {
													"nativeSrc": "4789:341:21",
													"nodeType": "YulBlock",
													"src": "4789:341:21",
													"statements": [
														{
															"nativeSrc": "4799:75:21",
															"nodeType": "YulAssignment",
															"src": "4799:75:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4866:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4866:6:21"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4824:41:21",
																			"nodeType": "YulIdentifier",
																			"src": "4824:41:21"
																		},
																		"nativeSrc": "4824:49:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:49:21"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4808:15:21",
																	"nodeType": "YulIdentifier",
																	"src": "4808:15:21"
																},
																"nativeSrc": "4808:66:21",
																"nodeType": "YulFunctionCall",
																"src": "4808:66:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4799:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "4799:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4890:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "4890:5:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4897:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "4897:6:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4883:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:21"
																},
																"nativeSrc": "4883:21:21",
																"nodeType": "YulFunctionCall",
																"src": "4883:21:21"
															},
															"nativeSrc": "4883:21:21",
															"nodeType": "YulExpressionStatement",
															"src": "4883:21:21"
														},
														{
															"nativeSrc": "4913:27:21",
															"nodeType": "YulVariableDeclaration",
															"src": "4913:27:21",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4928:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "4928:5:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4935:4:21",
																		"nodeType": "YulLiteral",
																		"src": "4935:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4924:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:21"
																},
																"nativeSrc": "4924:16:21",
																"nodeType": "YulFunctionCall",
																"src": "4924:16:21"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4917:3:21",
																	"nodeType": "YulTypedName",
																	"src": "4917:3:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4978:83:21",
																"nodeType": "YulBlock",
																"src": "4978:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4980:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "4980:77:21"
																			},
																			"nativeSrc": "4980:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "4980:79:21"
																		},
																		"nativeSrc": "4980:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "4980:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4959:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "4959:3:21"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4964:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "4964:6:21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4955:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "4955:3:21"
																		},
																		"nativeSrc": "4955:16:21",
																		"nodeType": "YulFunctionCall",
																		"src": "4955:16:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4973:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "4973:3:21"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4952:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "4952:2:21"
																},
																"nativeSrc": "4952:25:21",
																"nodeType": "YulFunctionCall",
																"src": "4952:25:21"
															},
															"nativeSrc": "4949:112:21",
															"nodeType": "YulIf",
															"src": "4949:112:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5107:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5107:3:21"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5112:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5112:3:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5117:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5117:6:21"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5070:36:21",
																	"nodeType": "YulIdentifier",
																	"src": "5070:36:21"
																},
																"nativeSrc": "5070:54:21",
																"nodeType": "YulFunctionCall",
																"src": "5070:54:21"
															},
															"nativeSrc": "5070:54:21",
															"nodeType": "YulExpressionStatement",
															"src": "5070:54:21"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4705:425:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4762:3:21",
														"nodeType": "YulTypedName",
														"src": "4762:3:21",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4767:6:21",
														"nodeType": "YulTypedName",
														"src": "4767:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4775:3:21",
														"nodeType": "YulTypedName",
														"src": "4775:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4783:5:21",
														"nodeType": "YulTypedName",
														"src": "4783:5:21",
														"type": ""
													}
												],
												"src": "4705:425:21"
											},
											{
												"body": {
													"nativeSrc": "5212:278:21",
													"nodeType": "YulBlock",
													"src": "5212:278:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5261:83:21",
																"nodeType": "YulBlock",
																"src": "5261:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5263:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "5263:77:21"
																			},
																			"nativeSrc": "5263:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5263:79:21"
																		},
																		"nativeSrc": "5263:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5263:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5248:4:21",
																						"nodeType": "YulLiteral",
																						"src": "5248:4:21",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5236:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5236:3:21"
																				},
																				"nativeSrc": "5236:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5236:17:21"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5255:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "5255:3:21"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5232:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5232:3:21"
																		},
																		"nativeSrc": "5232:27:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5232:27:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5225:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:21"
																},
																"nativeSrc": "5225:35:21",
																"nodeType": "YulFunctionCall",
																"src": "5225:35:21"
															},
															"nativeSrc": "5222:122:21",
															"nodeType": "YulIf",
															"src": "5222:122:21"
														},
														{
															"nativeSrc": "5353:34:21",
															"nodeType": "YulVariableDeclaration",
															"src": "5353:34:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5380:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5380:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5367:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "5367:12:21"
																},
																"nativeSrc": "5367:20:21",
																"nodeType": "YulFunctionCall",
																"src": "5367:20:21"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5357:6:21",
																	"nodeType": "YulTypedName",
																	"src": "5357:6:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5396:88:21",
															"nodeType": "YulAssignment",
															"src": "5396:88:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5457:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5457:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5465:4:21",
																				"nodeType": "YulLiteral",
																				"src": "5465:4:21",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5453:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5453:3:21"
																		},
																		"nativeSrc": "5453:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5453:17:21"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5472:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "5472:6:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5480:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "5480:3:21"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5405:47:21",
																	"nodeType": "YulIdentifier",
																	"src": "5405:47:21"
																},
																"nativeSrc": "5405:79:21",
																"nodeType": "YulFunctionCall",
																"src": "5405:79:21"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5396:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "5396:5:21"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5150:340:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5190:6:21",
														"nodeType": "YulTypedName",
														"src": "5190:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5198:3:21",
														"nodeType": "YulTypedName",
														"src": "5198:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5206:5:21",
														"nodeType": "YulTypedName",
														"src": "5206:5:21",
														"type": ""
													}
												],
												"src": "5150:340:21"
											},
											{
												"body": {
													"nativeSrc": "5589:561:21",
													"nodeType": "YulBlock",
													"src": "5589:561:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "5635:83:21",
																"nodeType": "YulBlock",
																"src": "5635:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5637:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "5637:77:21"
																			},
																			"nativeSrc": "5637:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "5637:79:21"
																		},
																		"nativeSrc": "5637:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "5637:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5610:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5610:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5619:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "5619:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5606:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:21"
																		},
																		"nativeSrc": "5606:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5606:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5631:2:21",
																		"nodeType": "YulLiteral",
																		"src": "5631:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5602:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:21"
																},
																"nativeSrc": "5602:32:21",
																"nodeType": "YulFunctionCall",
																"src": "5602:32:21"
															},
															"nativeSrc": "5599:119:21",
															"nodeType": "YulIf",
															"src": "5599:119:21"
														},
														{
															"nativeSrc": "5728:287:21",
															"nodeType": "YulBlock",
															"src": "5728:287:21",
															"statements": [
																{
																	"nativeSrc": "5743:45:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5743:45:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5774:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5774:9:21"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5785:1:21",
																						"nodeType": "YulLiteral",
																						"src": "5785:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5770:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5770:3:21"
																				},
																				"nativeSrc": "5770:17:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5770:17:21"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5757:12:21",
																			"nodeType": "YulIdentifier",
																			"src": "5757:12:21"
																		},
																		"nativeSrc": "5757:31:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5757:31:21"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5747:6:21",
																			"nodeType": "YulTypedName",
																			"src": "5747:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5835:83:21",
																		"nodeType": "YulBlock",
																		"src": "5835:83:21",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5837:77:21",
																						"nodeType": "YulIdentifier",
																						"src": "5837:77:21"
																					},
																					"nativeSrc": "5837:79:21",
																					"nodeType": "YulFunctionCall",
																					"src": "5837:79:21"
																				},
																				"nativeSrc": "5837:79:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "5837:79:21"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5807:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "5807:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5815:18:21",
																				"nodeType": "YulLiteral",
																				"src": "5815:18:21",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5804:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "5804:2:21"
																		},
																		"nativeSrc": "5804:30:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5804:30:21"
																	},
																	"nativeSrc": "5801:117:21",
																	"nodeType": "YulIf",
																	"src": "5801:117:21"
																},
																{
																	"nativeSrc": "5932:73:21",
																	"nodeType": "YulAssignment",
																	"src": "5932:73:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5977:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "5977:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5988:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "5988:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5973:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "5973:3:21"
																				},
																				"nativeSrc": "5973:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "5973:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5997:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "5997:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5942:30:21",
																			"nodeType": "YulIdentifier",
																			"src": "5942:30:21"
																		},
																		"nativeSrc": "5942:63:21",
																		"nodeType": "YulFunctionCall",
																		"src": "5942:63:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5932:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "5932:6:21"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6025:118:21",
															"nodeType": "YulBlock",
															"src": "6025:118:21",
															"statements": [
																{
																	"nativeSrc": "6040:16:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6040:16:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6054:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:21",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6044:6:21",
																			"nodeType": "YulTypedName",
																			"src": "6044:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6070:63:21",
																	"nodeType": "YulAssignment",
																	"src": "6070:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6105:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "6105:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6116:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "6116:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6101:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "6101:3:21"
																				},
																				"nativeSrc": "6101:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6101:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6125:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6125:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6080:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "6080:20:21"
																		},
																		"nativeSrc": "6080:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6080:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6070:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "6070:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nativeSrc": "5496:654:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:21",
														"nodeType": "YulTypedName",
														"src": "5551:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:21",
														"nodeType": "YulTypedName",
														"src": "5562:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:21",
														"nodeType": "YulTypedName",
														"src": "5574:6:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5582:6:21",
														"nodeType": "YulTypedName",
														"src": "5582:6:21",
														"type": ""
													}
												],
												"src": "5496:654:21"
											},
											{
												"body": {
													"nativeSrc": "6254:124:21",
													"nodeType": "YulBlock",
													"src": "6254:124:21",
													"statements": [
														{
															"nativeSrc": "6264:26:21",
															"nodeType": "YulAssignment",
															"src": "6264:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6276:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6272:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:21"
																},
																"nativeSrc": "6272:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6272:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6264:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6344:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6357:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6357:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6368:1:21",
																				"nodeType": "YulLiteral",
																				"src": "6368:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6353:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6353:3:21"
																		},
																		"nativeSrc": "6353:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6353:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6300:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6300:43:21"
																},
																"nativeSrc": "6300:71:21",
																"nodeType": "YulFunctionCall",
																"src": "6300:71:21"
															},
															"nativeSrc": "6300:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "6300:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6156:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6226:9:21",
														"nodeType": "YulTypedName",
														"src": "6226:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6238:6:21",
														"nodeType": "YulTypedName",
														"src": "6238:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6249:4:21",
														"nodeType": "YulTypedName",
														"src": "6249:4:21",
														"type": ""
													}
												],
												"src": "6156:222:21"
											},
											{
												"body": {
													"nativeSrc": "6482:124:21",
													"nodeType": "YulBlock",
													"src": "6482:124:21",
													"statements": [
														{
															"nativeSrc": "6492:26:21",
															"nodeType": "YulAssignment",
															"src": "6492:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6504:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "6504:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6515:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6500:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:21"
																},
																"nativeSrc": "6500:18:21",
																"nodeType": "YulFunctionCall",
																"src": "6500:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6492:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "6492:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6572:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6572:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6585:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6596:1:21",
																				"nodeType": "YulLiteral",
																				"src": "6596:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6581:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:21"
																		},
																		"nativeSrc": "6581:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6581:17:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6528:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "6528:43:21"
																},
																"nativeSrc": "6528:71:21",
																"nodeType": "YulFunctionCall",
																"src": "6528:71:21"
															},
															"nativeSrc": "6528:71:21",
															"nodeType": "YulExpressionStatement",
															"src": "6528:71:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6384:222:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6454:9:21",
														"nodeType": "YulTypedName",
														"src": "6454:9:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6466:6:21",
														"nodeType": "YulTypedName",
														"src": "6466:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6477:4:21",
														"nodeType": "YulTypedName",
														"src": "6477:4:21",
														"type": ""
													}
												],
												"src": "6384:222:21"
											},
											{
												"body": {
													"nativeSrc": "6655:79:21",
													"nodeType": "YulBlock",
													"src": "6655:79:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6712:16:21",
																"nodeType": "YulBlock",
																"src": "6712:16:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6721:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6721:1:21",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6724:1:21",
																					"nodeType": "YulLiteral",
																					"src": "6724:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6714:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "6714:6:21"
																			},
																			"nativeSrc": "6714:12:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6714:12:21"
																		},
																		"nativeSrc": "6714:12:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6714:12:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6678:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "6678:5:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6703:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "6703:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6685:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "6685:17:21"
																				},
																				"nativeSrc": "6685:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "6685:24:21"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6675:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "6675:2:21"
																		},
																		"nativeSrc": "6675:35:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:35:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6668:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:21"
																},
																"nativeSrc": "6668:43:21",
																"nodeType": "YulFunctionCall",
																"src": "6668:43:21"
															},
															"nativeSrc": "6665:63:21",
															"nodeType": "YulIf",
															"src": "6665:63:21"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6612:122:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6648:5:21",
														"nodeType": "YulTypedName",
														"src": "6648:5:21",
														"type": ""
													}
												],
												"src": "6612:122:21"
											},
											{
												"body": {
													"nativeSrc": "6792:87:21",
													"nodeType": "YulBlock",
													"src": "6792:87:21",
													"statements": [
														{
															"nativeSrc": "6802:29:21",
															"nodeType": "YulAssignment",
															"src": "6802:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6824:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "6824:6:21"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6811:12:21",
																	"nodeType": "YulIdentifier",
																	"src": "6811:12:21"
																},
																"nativeSrc": "6811:20:21",
																"nodeType": "YulFunctionCall",
																"src": "6811:20:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6802:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "6802:5:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6867:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "6867:5:21"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6840:26:21",
																	"nodeType": "YulIdentifier",
																	"src": "6840:26:21"
																},
																"nativeSrc": "6840:33:21",
																"nodeType": "YulFunctionCall",
																"src": "6840:33:21"
															},
															"nativeSrc": "6840:33:21",
															"nodeType": "YulExpressionStatement",
															"src": "6840:33:21"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6740:139:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6770:6:21",
														"nodeType": "YulTypedName",
														"src": "6770:6:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6778:3:21",
														"nodeType": "YulTypedName",
														"src": "6778:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6786:5:21",
														"nodeType": "YulTypedName",
														"src": "6786:5:21",
														"type": ""
													}
												],
												"src": "6740:139:21"
											},
											{
												"body": {
													"nativeSrc": "6951:263:21",
													"nodeType": "YulBlock",
													"src": "6951:263:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "6997:83:21",
																"nodeType": "YulBlock",
																"src": "6997:83:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6999:77:21",
																				"nodeType": "YulIdentifier",
																				"src": "6999:77:21"
																			},
																			"nativeSrc": "6999:79:21",
																			"nodeType": "YulFunctionCall",
																			"src": "6999:79:21"
																		},
																		"nativeSrc": "6999:79:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "6999:79:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6972:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "6972:7:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6981:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6968:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "6968:3:21"
																		},
																		"nativeSrc": "6968:23:21",
																		"nodeType": "YulFunctionCall",
																		"src": "6968:23:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6993:2:21",
																		"nodeType": "YulLiteral",
																		"src": "6993:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6964:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:21"
																},
																"nativeSrc": "6964:32:21",
																"nodeType": "YulFunctionCall",
																"src": "6964:32:21"
															},
															"nativeSrc": "6961:119:21",
															"nodeType": "YulIf",
															"src": "6961:119:21"
														},
														{
															"nativeSrc": "7090:117:21",
															"nodeType": "YulBlock",
															"src": "7090:117:21",
															"statements": [
																{
																	"nativeSrc": "7105:15:21",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7105:15:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7119:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7119:1:21",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7109:6:21",
																			"nodeType": "YulTypedName",
																			"src": "7109:6:21",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7134:63:21",
																	"nodeType": "YulAssignment",
																	"src": "7134:63:21",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7169:9:21",
																						"nodeType": "YulIdentifier",
																						"src": "7169:9:21"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7180:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "7180:6:21"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7165:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "7165:3:21"
																				},
																				"nativeSrc": "7165:22:21",
																				"nodeType": "YulFunctionCall",
																				"src": "7165:22:21"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7189:7:21",
																				"nodeType": "YulIdentifier",
																				"src": "7189:7:21"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7144:20:21",
																			"nodeType": "YulIdentifier",
																			"src": "7144:20:21"
																		},
																		"nativeSrc": "7144:53:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7144:53:21"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7134:6:21",
																			"nodeType": "YulIdentifier",
																			"src": "7134:6:21"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6885:329:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6921:9:21",
														"nodeType": "YulTypedName",
														"src": "6921:9:21",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6932:7:21",
														"nodeType": "YulTypedName",
														"src": "6932:7:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6944:6:21",
														"nodeType": "YulTypedName",
														"src": "6944:6:21",
														"type": ""
													}
												],
												"src": "6885:329:21"
											},
											{
												"body": {
													"nativeSrc": "7248:152:21",
													"nodeType": "YulBlock",
													"src": "7248:152:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7265:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7265:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:77:21",
																		"nodeType": "YulLiteral",
																		"src": "7268:77:21",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7258:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7258:6:21"
																},
																"nativeSrc": "7258:88:21",
																"nodeType": "YulFunctionCall",
																"src": "7258:88:21"
															},
															"nativeSrc": "7258:88:21",
															"nodeType": "YulExpressionStatement",
															"src": "7258:88:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7362:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7362:1:21",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7365:4:21",
																		"nodeType": "YulLiteral",
																		"src": "7365:4:21",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7355:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:21"
																},
																"nativeSrc": "7355:15:21",
																"nodeType": "YulFunctionCall",
																"src": "7355:15:21"
															},
															"nativeSrc": "7355:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "7355:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7386:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7386:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7389:4:21",
																		"nodeType": "YulLiteral",
																		"src": "7389:4:21",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7379:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:21"
																},
																"nativeSrc": "7379:15:21",
																"nodeType": "YulFunctionCall",
																"src": "7379:15:21"
															},
															"nativeSrc": "7379:15:21",
															"nodeType": "YulExpressionStatement",
															"src": "7379:15:21"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7220:180:21",
												"nodeType": "YulFunctionDefinition",
												"src": "7220:180:21"
											},
											{
												"body": {
													"nativeSrc": "7457:269:21",
													"nodeType": "YulBlock",
													"src": "7457:269:21",
													"statements": [
														{
															"nativeSrc": "7467:22:21",
															"nodeType": "YulAssignment",
															"src": "7467:22:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7481:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "7481:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7487:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7487:1:21",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7477:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:21"
																},
																"nativeSrc": "7477:12:21",
																"nodeType": "YulFunctionCall",
																"src": "7477:12:21"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7467:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:21"
																}
															]
														},
														{
															"nativeSrc": "7498:38:21",
															"nodeType": "YulVariableDeclaration",
															"src": "7498:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7528:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "7528:4:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7534:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7524:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:21"
																},
																"nativeSrc": "7524:12:21",
																"nodeType": "YulFunctionCall",
																"src": "7524:12:21"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7502:18:21",
																	"nodeType": "YulTypedName",
																	"src": "7502:18:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7575:51:21",
																"nodeType": "YulBlock",
																"src": "7575:51:21",
																"statements": [
																	{
																		"nativeSrc": "7589:27:21",
																		"nodeType": "YulAssignment",
																		"src": "7589:27:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7603:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "7603:6:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7611:4:21",
																					"nodeType": "YulLiteral",
																					"src": "7611:4:21",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7599:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "7599:3:21"
																			},
																			"nativeSrc": "7599:17:21",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:17:21"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7589:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "7589:6:21"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7555:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "7555:18:21"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7548:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:21"
																},
																"nativeSrc": "7548:26:21",
																"nodeType": "YulFunctionCall",
																"src": "7548:26:21"
															},
															"nativeSrc": "7545:81:21",
															"nodeType": "YulIf",
															"src": "7545:81:21"
														},
														{
															"body": {
																"nativeSrc": "7678:42:21",
																"nodeType": "YulBlock",
																"src": "7678:42:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7692:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "7692:16:21"
																			},
																			"nativeSrc": "7692:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "7692:18:21"
																		},
																		"nativeSrc": "7692:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "7692:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7642:18:21",
																		"nodeType": "YulIdentifier",
																		"src": "7642:18:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7665:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "7665:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7673:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7673:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7662:2:21",
																			"nodeType": "YulIdentifier",
																			"src": "7662:2:21"
																		},
																		"nativeSrc": "7662:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7662:14:21"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7639:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "7639:2:21"
																},
																"nativeSrc": "7639:38:21",
																"nodeType": "YulFunctionCall",
																"src": "7639:38:21"
															},
															"nativeSrc": "7636:84:21",
															"nodeType": "YulIf",
															"src": "7636:84:21"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7406:320:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7441:4:21",
														"nodeType": "YulTypedName",
														"src": "7441:4:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7450:6:21",
														"nodeType": "YulTypedName",
														"src": "7450:6:21",
														"type": ""
													}
												],
												"src": "7406:320:21"
											},
											{
												"body": {
													"nativeSrc": "7786:87:21",
													"nodeType": "YulBlock",
													"src": "7786:87:21",
													"statements": [
														{
															"nativeSrc": "7796:11:21",
															"nodeType": "YulAssignment",
															"src": "7796:11:21",
															"value": {
																"name": "ptr",
																"nativeSrc": "7804:3:21",
																"nodeType": "YulIdentifier",
																"src": "7804:3:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7796:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7796:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7824:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7824:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "7827:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "7827:3:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7817:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:21"
																},
																"nativeSrc": "7817:14:21",
																"nodeType": "YulFunctionCall",
																"src": "7817:14:21"
															},
															"nativeSrc": "7817:14:21",
															"nodeType": "YulExpressionStatement",
															"src": "7817:14:21"
														},
														{
															"nativeSrc": "7840:26:21",
															"nodeType": "YulAssignment",
															"src": "7840:26:21",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7858:1:21",
																		"nodeType": "YulLiteral",
																		"src": "7858:1:21",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7861:4:21",
																		"nodeType": "YulLiteral",
																		"src": "7861:4:21",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7848:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "7848:9:21"
																},
																"nativeSrc": "7848:18:21",
																"nodeType": "YulFunctionCall",
																"src": "7848:18:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7840:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "7840:4:21"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "7732:141:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7773:3:21",
														"nodeType": "YulTypedName",
														"src": "7773:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7781:4:21",
														"nodeType": "YulTypedName",
														"src": "7781:4:21",
														"type": ""
													}
												],
												"src": "7732:141:21"
											},
											{
												"body": {
													"nativeSrc": "7923:49:21",
													"nodeType": "YulBlock",
													"src": "7923:49:21",
													"statements": [
														{
															"nativeSrc": "7933:33:21",
															"nodeType": "YulAssignment",
															"src": "7933:33:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7951:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "7951:5:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7958:2:21",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:21",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7947:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "7947:3:21"
																		},
																		"nativeSrc": "7947:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "7947:14:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7963:2:21",
																		"nodeType": "YulLiteral",
																		"src": "7963:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7943:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:21"
																},
																"nativeSrc": "7943:23:21",
																"nodeType": "YulFunctionCall",
																"src": "7943:23:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7933:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:21"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "7879:93:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7906:5:21",
														"nodeType": "YulTypedName",
														"src": "7906:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7916:6:21",
														"nodeType": "YulTypedName",
														"src": "7916:6:21",
														"type": ""
													}
												],
												"src": "7879:93:21"
											},
											{
												"body": {
													"nativeSrc": "8031:54:21",
													"nodeType": "YulBlock",
													"src": "8031:54:21",
													"statements": [
														{
															"nativeSrc": "8041:37:21",
															"nodeType": "YulAssignment",
															"src": "8041:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8066:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "8066:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8072:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8072:5:21"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "8062:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:21"
																},
																"nativeSrc": "8062:16:21",
																"nodeType": "YulFunctionCall",
																"src": "8062:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8041:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "8041:8:21"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "7978:107:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8006:4:21",
														"nodeType": "YulTypedName",
														"src": "8006:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8012:5:21",
														"nodeType": "YulTypedName",
														"src": "8012:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8022:8:21",
														"nodeType": "YulTypedName",
														"src": "8022:8:21",
														"type": ""
													}
												],
												"src": "7978:107:21"
											},
											{
												"body": {
													"nativeSrc": "8167:317:21",
													"nodeType": "YulBlock",
													"src": "8167:317:21",
													"statements": [
														{
															"nativeSrc": "8177:35:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8177:35:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "8198:10:21",
																		"nodeType": "YulIdentifier",
																		"src": "8198:10:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8210:1:21",
																		"nodeType": "YulLiteral",
																		"src": "8210:1:21",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8194:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8194:3:21"
																},
																"nativeSrc": "8194:18:21",
																"nodeType": "YulFunctionCall",
																"src": "8194:18:21"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "8181:9:21",
																	"nodeType": "YulTypedName",
																	"src": "8181:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8221:109:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8221:109:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "8252:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8252:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8263:66:21",
																		"nodeType": "YulLiteral",
																		"src": "8263:66:21",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "8233:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "8233:18:21"
																},
																"nativeSrc": "8233:97:21",
																"nodeType": "YulFunctionCall",
																"src": "8233:97:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8225:4:21",
																	"nodeType": "YulTypedName",
																	"src": "8225:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8339:51:21",
															"nodeType": "YulAssignment",
															"src": "8339:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "8370:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "8370:9:21"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "8381:8:21",
																		"nodeType": "YulIdentifier",
																		"src": "8381:8:21"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "8351:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "8351:18:21"
																},
																"nativeSrc": "8351:39:21",
																"nodeType": "YulFunctionCall",
																"src": "8351:39:21"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "8339:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "8339:8:21"
																}
															]
														},
														{
															"nativeSrc": "8399:30:21",
															"nodeType": "YulAssignment",
															"src": "8399:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8412:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8412:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "8423:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "8423:4:21"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8419:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:21"
																		},
																		"nativeSrc": "8419:9:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8419:9:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8408:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8408:3:21"
																},
																"nativeSrc": "8408:21:21",
																"nodeType": "YulFunctionCall",
																"src": "8408:21:21"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8399:5:21",
																	"nodeType": "YulIdentifier",
																	"src": "8399:5:21"
																}
															]
														},
														{
															"nativeSrc": "8438:40:21",
															"nodeType": "YulAssignment",
															"src": "8438:40:21",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8451:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "8451:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "8462:8:21",
																				"nodeType": "YulIdentifier",
																				"src": "8462:8:21"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "8472:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "8472:4:21"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8458:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "8458:3:21"
																		},
																		"nativeSrc": "8458:19:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8458:19:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8448:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "8448:2:21"
																},
																"nativeSrc": "8448:30:21",
																"nodeType": "YulFunctionCall",
																"src": "8448:30:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8438:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:21"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "8091:393:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8128:5:21",
														"nodeType": "YulTypedName",
														"src": "8128:5:21",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "8135:10:21",
														"nodeType": "YulTypedName",
														"src": "8135:10:21",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "8147:8:21",
														"nodeType": "YulTypedName",
														"src": "8147:8:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8160:6:21",
														"nodeType": "YulTypedName",
														"src": "8160:6:21",
														"type": ""
													}
												],
												"src": "8091:393:21"
											},
											{
												"body": {
													"nativeSrc": "8522:28:21",
													"nodeType": "YulBlock",
													"src": "8522:28:21",
													"statements": [
														{
															"nativeSrc": "8532:12:21",
															"nodeType": "YulAssignment",
															"src": "8532:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "8539:5:21",
																"nodeType": "YulIdentifier",
																"src": "8539:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8532:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:21"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8490:60:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8508:5:21",
														"nodeType": "YulTypedName",
														"src": "8508:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8518:3:21",
														"nodeType": "YulTypedName",
														"src": "8518:3:21",
														"type": ""
													}
												],
												"src": "8490:60:21"
											},
											{
												"body": {
													"nativeSrc": "8616:82:21",
													"nodeType": "YulBlock",
													"src": "8616:82:21",
													"statements": [
														{
															"nativeSrc": "8626:66:21",
															"nodeType": "YulAssignment",
															"src": "8626:66:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8684:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "8684:5:21"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "8666:17:21",
																					"nodeType": "YulIdentifier",
																					"src": "8666:17:21"
																				},
																				"nativeSrc": "8666:24:21",
																				"nodeType": "YulFunctionCall",
																				"src": "8666:24:21"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8657:8:21",
																			"nodeType": "YulIdentifier",
																			"src": "8657:8:21"
																		},
																		"nativeSrc": "8657:34:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:34:21"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8639:17:21",
																	"nodeType": "YulIdentifier",
																	"src": "8639:17:21"
																},
																"nativeSrc": "8639:53:21",
																"nodeType": "YulFunctionCall",
																"src": "8639:53:21"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8626:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "8626:9:21"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "8556:142:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8596:5:21",
														"nodeType": "YulTypedName",
														"src": "8596:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8606:9:21",
														"nodeType": "YulTypedName",
														"src": "8606:9:21",
														"type": ""
													}
												],
												"src": "8556:142:21"
											},
											{
												"body": {
													"nativeSrc": "8751:28:21",
													"nodeType": "YulBlock",
													"src": "8751:28:21",
													"statements": [
														{
															"nativeSrc": "8761:12:21",
															"nodeType": "YulAssignment",
															"src": "8761:12:21",
															"value": {
																"name": "value",
																"nativeSrc": "8768:5:21",
																"nodeType": "YulIdentifier",
																"src": "8768:5:21"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8761:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "8761:3:21"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "8704:75:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8737:5:21",
														"nodeType": "YulTypedName",
														"src": "8737:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8747:3:21",
														"nodeType": "YulTypedName",
														"src": "8747:3:21",
														"type": ""
													}
												],
												"src": "8704:75:21"
											},
											{
												"body": {
													"nativeSrc": "8861:193:21",
													"nodeType": "YulBlock",
													"src": "8861:193:21",
													"statements": [
														{
															"nativeSrc": "8871:63:21",
															"nodeType": "YulVariableDeclaration",
															"src": "8871:63:21",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "8926:7:21",
																		"nodeType": "YulIdentifier",
																		"src": "8926:7:21"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "8895:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "8895:30:21"
																},
																"nativeSrc": "8895:39:21",
																"nodeType": "YulFunctionCall",
																"src": "8895:39:21"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "8875:16:21",
																	"nodeType": "YulTypedName",
																	"src": "8875:16:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8950:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "8950:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "8990:4:21",
																						"nodeType": "YulIdentifier",
																						"src": "8990:4:21"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "8984:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "8984:5:21"
																				},
																				"nativeSrc": "8984:11:21",
																				"nodeType": "YulFunctionCall",
																				"src": "8984:11:21"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8997:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "8997:6:21"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "9029:16:21",
																						"nodeType": "YulIdentifier",
																						"src": "9029:16:21"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "9005:23:21",
																					"nodeType": "YulIdentifier",
																					"src": "9005:23:21"
																				},
																				"nativeSrc": "9005:41:21",
																				"nodeType": "YulFunctionCall",
																				"src": "9005:41:21"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "8956:27:21",
																			"nodeType": "YulIdentifier",
																			"src": "8956:27:21"
																		},
																		"nativeSrc": "8956:91:21",
																		"nodeType": "YulFunctionCall",
																		"src": "8956:91:21"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "8943:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:21"
																},
																"nativeSrc": "8943:105:21",
																"nodeType": "YulFunctionCall",
																"src": "8943:105:21"
															},
															"nativeSrc": "8943:105:21",
															"nodeType": "YulExpressionStatement",
															"src": "8943:105:21"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "8785:269:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8838:4:21",
														"nodeType": "YulTypedName",
														"src": "8838:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "8844:6:21",
														"nodeType": "YulTypedName",
														"src": "8844:6:21",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "8852:7:21",
														"nodeType": "YulTypedName",
														"src": "8852:7:21",
														"type": ""
													}
												],
												"src": "8785:269:21"
											},
											{
												"body": {
													"nativeSrc": "9109:24:21",
													"nodeType": "YulBlock",
													"src": "9109:24:21",
													"statements": [
														{
															"nativeSrc": "9119:8:21",
															"nodeType": "YulAssignment",
															"src": "9119:8:21",
															"value": {
																"kind": "number",
																"nativeSrc": "9126:1:21",
																"nodeType": "YulLiteral",
																"src": "9126:1:21",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9119:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:21"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "9060:73:21",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9105:3:21",
														"nodeType": "YulTypedName",
														"src": "9105:3:21",
														"type": ""
													}
												],
												"src": "9060:73:21"
											},
											{
												"body": {
													"nativeSrc": "9192:136:21",
													"nodeType": "YulBlock",
													"src": "9192:136:21",
													"statements": [
														{
															"nativeSrc": "9202:46:21",
															"nodeType": "YulVariableDeclaration",
															"src": "9202:46:21",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "9216:30:21",
																	"nodeType": "YulIdentifier",
																	"src": "9216:30:21"
																},
																"nativeSrc": "9216:32:21",
																"nodeType": "YulFunctionCall",
																"src": "9216:32:21"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "9206:6:21",
																	"nodeType": "YulTypedName",
																	"src": "9206:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9301:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "9301:4:21"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "9307:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9307:6:21"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "9315:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "9315:6:21"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "9257:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "9257:43:21"
																},
																"nativeSrc": "9257:65:21",
																"nodeType": "YulFunctionCall",
																"src": "9257:65:21"
															},
															"nativeSrc": "9257:65:21",
															"nodeType": "YulExpressionStatement",
															"src": "9257:65:21"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "9139:189:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "9178:4:21",
														"nodeType": "YulTypedName",
														"src": "9178:4:21",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "9184:6:21",
														"nodeType": "YulTypedName",
														"src": "9184:6:21",
														"type": ""
													}
												],
												"src": "9139:189:21"
											},
											{
												"body": {
													"nativeSrc": "9384:136:21",
													"nodeType": "YulBlock",
													"src": "9384:136:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "9451:63:21",
																"nodeType": "YulBlock",
																"src": "9451:63:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9495:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "9495:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9502:1:21",
																					"nodeType": "YulLiteral",
																					"src": "9502:1:21",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "9465:29:21",
																				"nodeType": "YulIdentifier",
																				"src": "9465:29:21"
																			},
																			"nativeSrc": "9465:39:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9465:39:21"
																		},
																		"nativeSrc": "9465:39:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "9465:39:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "9404:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "9404:5:21"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9411:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9411:3:21"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9401:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9401:2:21"
																},
																"nativeSrc": "9401:14:21",
																"nodeType": "YulFunctionCall",
																"src": "9401:14:21"
															},
															"nativeSrc": "9394:120:21",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9416:26:21",
																"nodeType": "YulBlock",
																"src": "9416:26:21",
																"statements": [
																	{
																		"nativeSrc": "9418:22:21",
																		"nodeType": "YulAssignment",
																		"src": "9418:22:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9431:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "9431:5:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9438:1:21",
																					"nodeType": "YulLiteral",
																					"src": "9438:1:21",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9427:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9427:3:21"
																			},
																			"nativeSrc": "9427:13:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9427:13:21"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "9418:5:21",
																				"nodeType": "YulIdentifier",
																				"src": "9418:5:21"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9398:2:21",
																"nodeType": "YulBlock",
																"src": "9398:2:21",
																"statements": []
															},
															"src": "9394:120:21"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "9334:186:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "9372:5:21",
														"nodeType": "YulTypedName",
														"src": "9372:5:21",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9379:3:21",
														"nodeType": "YulTypedName",
														"src": "9379:3:21",
														"type": ""
													}
												],
												"src": "9334:186:21"
											},
											{
												"body": {
													"nativeSrc": "9605:464:21",
													"nodeType": "YulBlock",
													"src": "9605:464:21",
													"statements": [
														{
															"body": {
																"nativeSrc": "9631:431:21",
																"nodeType": "YulBlock",
																"src": "9631:431:21",
																"statements": [
																	{
																		"nativeSrc": "9645:54:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9645:54:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "9693:5:21",
																					"nodeType": "YulIdentifier",
																					"src": "9693:5:21"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "9661:31:21",
																				"nodeType": "YulIdentifier",
																				"src": "9661:31:21"
																			},
																			"nativeSrc": "9661:38:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9661:38:21"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "9649:8:21",
																				"nodeType": "YulTypedName",
																				"src": "9649:8:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9712:63:21",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9712:63:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "9735:8:21",
																					"nodeType": "YulIdentifier",
																					"src": "9735:8:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "9763:10:21",
																							"nodeType": "YulIdentifier",
																							"src": "9763:10:21"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "9745:17:21",
																						"nodeType": "YulIdentifier",
																						"src": "9745:17:21"
																					},
																					"nativeSrc": "9745:29:21",
																					"nodeType": "YulFunctionCall",
																					"src": "9745:29:21"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9731:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "9731:3:21"
																			},
																			"nativeSrc": "9731:44:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9731:44:21"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9716:11:21",
																				"nodeType": "YulTypedName",
																				"src": "9716:11:21",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9932:27:21",
																			"nodeType": "YulBlock",
																			"src": "9932:27:21",
																			"statements": [
																				{
																					"nativeSrc": "9934:23:21",
																					"nodeType": "YulAssignment",
																					"src": "9934:23:21",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "9949:8:21",
																						"nodeType": "YulIdentifier",
																						"src": "9949:8:21"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9934:11:21",
																							"nodeType": "YulIdentifier",
																							"src": "9934:11:21"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9916:10:21",
																					"nodeType": "YulIdentifier",
																					"src": "9916:10:21"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9928:2:21",
																					"nodeType": "YulLiteral",
																					"src": "9928:2:21",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9913:2:21",
																				"nodeType": "YulIdentifier",
																				"src": "9913:2:21"
																			},
																			"nativeSrc": "9913:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9913:18:21"
																		},
																		"nativeSrc": "9910:49:21",
																		"nodeType": "YulIf",
																		"src": "9910:49:21"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "10001:11:21",
																					"nodeType": "YulIdentifier",
																					"src": "10001:11:21"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "10018:8:21",
																							"nodeType": "YulIdentifier",
																							"src": "10018:8:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "10046:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "10046:3:21"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "10028:17:21",
																								"nodeType": "YulIdentifier",
																								"src": "10028:17:21"
																							},
																							"nativeSrc": "10028:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "10028:22:21"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10014:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "10014:3:21"
																					},
																					"nativeSrc": "10014:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "10014:37:21"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "9972:28:21",
																				"nodeType": "YulIdentifier",
																				"src": "9972:28:21"
																			},
																			"nativeSrc": "9972:80:21",
																			"nodeType": "YulFunctionCall",
																			"src": "9972:80:21"
																		},
																		"nativeSrc": "9972:80:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:80:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9622:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9627:2:21",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9619:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "9619:2:21"
																},
																"nativeSrc": "9619:11:21",
																"nodeType": "YulFunctionCall",
																"src": "9619:11:21"
															},
															"nativeSrc": "9616:446:21",
															"nodeType": "YulIf",
															"src": "9616:446:21"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "9526:543:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9581:5:21",
														"nodeType": "YulTypedName",
														"src": "9581:5:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9588:3:21",
														"nodeType": "YulTypedName",
														"src": "9588:3:21",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "9593:10:21",
														"nodeType": "YulTypedName",
														"src": "9593:10:21",
														"type": ""
													}
												],
												"src": "9526:543:21"
											},
											{
												"body": {
													"nativeSrc": "10138:54:21",
													"nodeType": "YulBlock",
													"src": "10138:54:21",
													"statements": [
														{
															"nativeSrc": "10148:37:21",
															"nodeType": "YulAssignment",
															"src": "10148:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "10173:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10173:4:21"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10179:5:21",
																		"nodeType": "YulIdentifier",
																		"src": "10179:5:21"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "10169:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10169:3:21"
																},
																"nativeSrc": "10169:16:21",
																"nodeType": "YulFunctionCall",
																"src": "10169:16:21"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10148:8:21",
																	"nodeType": "YulIdentifier",
																	"src": "10148:8:21"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "10075:117:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "10113:4:21",
														"nodeType": "YulTypedName",
														"src": "10113:4:21",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "10119:5:21",
														"nodeType": "YulTypedName",
														"src": "10119:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10129:8:21",
														"nodeType": "YulTypedName",
														"src": "10129:8:21",
														"type": ""
													}
												],
												"src": "10075:117:21"
											},
											{
												"body": {
													"nativeSrc": "10249:118:21",
													"nodeType": "YulBlock",
													"src": "10249:118:21",
													"statements": [
														{
															"nativeSrc": "10259:68:21",
															"nodeType": "YulVariableDeclaration",
															"src": "10259:68:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10308:1:21",
																						"nodeType": "YulLiteral",
																						"src": "10308:1:21",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "10311:5:21",
																						"nodeType": "YulIdentifier",
																						"src": "10311:5:21"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10304:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "10304:3:21"
																				},
																				"nativeSrc": "10304:13:21",
																				"nodeType": "YulFunctionCall",
																				"src": "10304:13:21"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10323:1:21",
																						"nodeType": "YulLiteral",
																						"src": "10323:1:21",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10319:3:21",
																					"nodeType": "YulIdentifier",
																					"src": "10319:3:21"
																				},
																				"nativeSrc": "10319:6:21",
																				"nodeType": "YulFunctionCall",
																				"src": "10319:6:21"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "10275:28:21",
																			"nodeType": "YulIdentifier",
																			"src": "10275:28:21"
																		},
																		"nativeSrc": "10275:51:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10275:51:21"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "10271:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10271:3:21"
																},
																"nativeSrc": "10271:56:21",
																"nodeType": "YulFunctionCall",
																"src": "10271:56:21"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10263:4:21",
																	"nodeType": "YulTypedName",
																	"src": "10263:4:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10336:25:21",
															"nodeType": "YulAssignment",
															"src": "10336:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10350:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10350:4:21"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "10356:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10356:4:21"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10346:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:21"
																},
																"nativeSrc": "10346:15:21",
																"nodeType": "YulFunctionCall",
																"src": "10346:15:21"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10336:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "10336:6:21"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "10198:169:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10226:4:21",
														"nodeType": "YulTypedName",
														"src": "10226:4:21",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "10232:5:21",
														"nodeType": "YulTypedName",
														"src": "10232:5:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10242:6:21",
														"nodeType": "YulTypedName",
														"src": "10242:6:21",
														"type": ""
													}
												],
												"src": "10198:169:21"
											},
											{
												"body": {
													"nativeSrc": "10453:214:21",
													"nodeType": "YulBlock",
													"src": "10453:214:21",
													"statements": [
														{
															"nativeSrc": "10586:37:21",
															"nodeType": "YulAssignment",
															"src": "10586:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10613:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10613:4:21"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "10619:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "10619:3:21"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "10594:18:21",
																	"nodeType": "YulIdentifier",
																	"src": "10594:18:21"
																},
																"nativeSrc": "10594:29:21",
																"nodeType": "YulFunctionCall",
																"src": "10594:29:21"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10586:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10586:4:21"
																}
															]
														},
														{
															"nativeSrc": "10632:29:21",
															"nodeType": "YulAssignment",
															"src": "10632:29:21",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10643:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "10643:4:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10653:1:21",
																				"nodeType": "YulLiteral",
																				"src": "10653:1:21",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10656:3:21",
																				"nodeType": "YulIdentifier",
																				"src": "10656:3:21"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10649:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:21"
																		},
																		"nativeSrc": "10649:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:11:21"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10640:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "10640:2:21"
																},
																"nativeSrc": "10640:21:21",
																"nodeType": "YulFunctionCall",
																"src": "10640:21:21"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "10632:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "10632:4:21"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "10372:295:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10434:4:21",
														"nodeType": "YulTypedName",
														"src": "10434:4:21",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10440:3:21",
														"nodeType": "YulTypedName",
														"src": "10440:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "10448:4:21",
														"nodeType": "YulTypedName",
														"src": "10448:4:21",
														"type": ""
													}
												],
												"src": "10372:295:21"
											},
											{
												"body": {
													"nativeSrc": "10764:1303:21",
													"nodeType": "YulBlock",
													"src": "10764:1303:21",
													"statements": [
														{
															"nativeSrc": "10775:51:21",
															"nodeType": "YulVariableDeclaration",
															"src": "10775:51:21",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10822:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "10822:3:21"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10789:32:21",
																	"nodeType": "YulIdentifier",
																	"src": "10789:32:21"
																},
																"nativeSrc": "10789:37:21",
																"nodeType": "YulFunctionCall",
																"src": "10789:37:21"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "10779:6:21",
																	"nodeType": "YulTypedName",
																	"src": "10779:6:21",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10911:22:21",
																"nodeType": "YulBlock",
																"src": "10911:22:21",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10913:16:21",
																				"nodeType": "YulIdentifier",
																				"src": "10913:16:21"
																			},
																			"nativeSrc": "10913:18:21",
																			"nodeType": "YulFunctionCall",
																			"src": "10913:18:21"
																		},
																		"nativeSrc": "10913:18:21",
																		"nodeType": "YulExpressionStatement",
																		"src": "10913:18:21"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10883:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "10883:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10891:18:21",
																		"nodeType": "YulLiteral",
																		"src": "10891:18:21",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10880:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "10880:2:21"
																},
																"nativeSrc": "10880:30:21",
																"nodeType": "YulFunctionCall",
																"src": "10880:30:21"
															},
															"nativeSrc": "10877:56:21",
															"nodeType": "YulIf",
															"src": "10877:56:21"
														},
														{
															"nativeSrc": "10943:52:21",
															"nodeType": "YulVariableDeclaration",
															"src": "10943:52:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "10989:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "10989:4:21"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "10983:5:21",
																			"nodeType": "YulIdentifier",
																			"src": "10983:5:21"
																		},
																		"nativeSrc": "10983:11:21",
																		"nodeType": "YulFunctionCall",
																		"src": "10983:11:21"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10957:25:21",
																	"nodeType": "YulIdentifier",
																	"src": "10957:25:21"
																},
																"nativeSrc": "10957:38:21",
																"nodeType": "YulFunctionCall",
																"src": "10957:38:21"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "10947:6:21",
																	"nodeType": "YulTypedName",
																	"src": "10947:6:21",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11088:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "11088:4:21"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "11094:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "11094:6:21"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "11102:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "11102:6:21"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "11042:45:21",
																	"nodeType": "YulIdentifier",
																	"src": "11042:45:21"
																},
																"nativeSrc": "11042:67:21",
																"nodeType": "YulFunctionCall",
																"src": "11042:67:21"
															},
															"nativeSrc": "11042:67:21",
															"nodeType": "YulExpressionStatement",
															"src": "11042:67:21"
														},
														{
															"nativeSrc": "11119:18:21",
															"nodeType": "YulVariableDeclaration",
															"src": "11119:18:21",
															"value": {
																"kind": "number",
																"nativeSrc": "11136:1:21",
																"nodeType": "YulLiteral",
																"src": "11136:1:21",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11123:9:21",
																	"nodeType": "YulTypedName",
																	"src": "11123:9:21",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11147:17:21",
															"nodeType": "YulAssignment",
															"src": "11147:17:21",
															"value": {
																"kind": "number",
																"nativeSrc": "11160:4:21",
																"nodeType": "YulLiteral",
																"src": "11160:4:21",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11147:9:21",
																	"nodeType": "YulIdentifier",
																	"src": "11147:9:21"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11211:611:21",
																		"nodeType": "YulBlock",
																		"src": "11211:611:21",
																		"statements": [
																			{
																				"nativeSrc": "11225:37:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11225:37:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "11244:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "11244:6:21"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11256:4:21",
																									"nodeType": "YulLiteral",
																									"src": "11256:4:21",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "11252:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "11252:3:21"
																							},
																							"nativeSrc": "11252:9:21",
																							"nodeType": "YulFunctionCall",
																							"src": "11252:9:21"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11240:3:21",
																						"nodeType": "YulIdentifier",
																						"src": "11240:3:21"
																					},
																					"nativeSrc": "11240:22:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11240:22:21"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "11229:7:21",
																						"nodeType": "YulTypedName",
																						"src": "11229:7:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11276:51:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11276:51:21",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11322:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "11322:4:21"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "11290:31:21",
																						"nodeType": "YulIdentifier",
																						"src": "11290:31:21"
																					},
																					"nativeSrc": "11290:37:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11290:37:21"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "11280:6:21",
																						"nodeType": "YulTypedName",
																						"src": "11280:6:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11340:10:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11340:10:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11349:1:21",
																					"nodeType": "YulLiteral",
																					"src": "11349:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11344:1:21",
																						"nodeType": "YulTypedName",
																						"src": "11344:1:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11408:163:21",
																					"nodeType": "YulBlock",
																					"src": "11408:163:21",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11433:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "11433:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "11451:3:21",
																														"nodeType": "YulIdentifier",
																														"src": "11451:3:21"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "11456:9:21",
																														"nodeType": "YulIdentifier",
																														"src": "11456:9:21"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "11447:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "11447:3:21"
																												},
																												"nativeSrc": "11447:19:21",
																												"nodeType": "YulFunctionCall",
																												"src": "11447:19:21"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "11441:5:21",
																											"nodeType": "YulIdentifier",
																											"src": "11441:5:21"
																										},
																										"nativeSrc": "11441:26:21",
																										"nodeType": "YulFunctionCall",
																										"src": "11441:26:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11426:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "11426:6:21"
																								},
																								"nativeSrc": "11426:42:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11426:42:21"
																							},
																							"nativeSrc": "11426:42:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "11426:42:21"
																						},
																						{
																							"nativeSrc": "11485:24:21",
																							"nodeType": "YulAssignment",
																							"src": "11485:24:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11499:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "11499:6:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11507:1:21",
																										"nodeType": "YulLiteral",
																										"src": "11507:1:21",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11495:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "11495:3:21"
																								},
																								"nativeSrc": "11495:14:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11495:14:21"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "11485:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "11485:6:21"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11526:31:21",
																							"nodeType": "YulAssignment",
																							"src": "11526:31:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "11543:9:21",
																										"nodeType": "YulIdentifier",
																										"src": "11543:9:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11554:2:21",
																										"nodeType": "YulLiteral",
																										"src": "11554:2:21",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11539:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "11539:3:21"
																								},
																								"nativeSrc": "11539:18:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11539:18:21"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "11526:9:21",
																									"nodeType": "YulIdentifier",
																									"src": "11526:9:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11374:1:21",
																							"nodeType": "YulIdentifier",
																							"src": "11374:1:21"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11377:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "11377:7:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11371:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "11371:2:21"
																					},
																					"nativeSrc": "11371:14:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11371:14:21"
																				},
																				"nativeSrc": "11363:208:21",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11386:21:21",
																					"nodeType": "YulBlock",
																					"src": "11386:21:21",
																					"statements": [
																						{
																							"nativeSrc": "11388:17:21",
																							"nodeType": "YulAssignment",
																							"src": "11388:17:21",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11397:1:21",
																										"nodeType": "YulIdentifier",
																										"src": "11397:1:21"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11400:4:21",
																										"nodeType": "YulLiteral",
																										"src": "11400:4:21",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11393:3:21",
																									"nodeType": "YulIdentifier",
																									"src": "11393:3:21"
																								},
																								"nativeSrc": "11393:12:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11393:12:21"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11388:1:21",
																									"nodeType": "YulIdentifier",
																									"src": "11388:1:21"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11367:3:21",
																					"nodeType": "YulBlock",
																					"src": "11367:3:21",
																					"statements": []
																				},
																				"src": "11363:208:21"
																			},
																			{
																				"body": {
																					"nativeSrc": "11607:156:21",
																					"nodeType": "YulBlock",
																					"src": "11607:156:21",
																					"statements": [
																						{
																							"nativeSrc": "11625:43:21",
																							"nodeType": "YulVariableDeclaration",
																							"src": "11625:43:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11652:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "11652:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11657:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "11657:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11648:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "11648:3:21"
																										},
																										"nativeSrc": "11648:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "11648:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11642:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "11642:5:21"
																								},
																								"nativeSrc": "11642:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11642:26:21"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "11629:9:21",
																									"nodeType": "YulTypedName",
																									"src": "11629:9:21",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11692:6:21",
																										"nodeType": "YulIdentifier",
																										"src": "11692:6:21"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "11719:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "11719:9:21"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "11734:6:21",
																														"nodeType": "YulIdentifier",
																														"src": "11734:6:21"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "11742:4:21",
																														"nodeType": "YulLiteral",
																														"src": "11742:4:21",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "11730:3:21",
																													"nodeType": "YulIdentifier",
																													"src": "11730:3:21"
																												},
																												"nativeSrc": "11730:17:21",
																												"nodeType": "YulFunctionCall",
																												"src": "11730:17:21"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "11700:18:21",
																											"nodeType": "YulIdentifier",
																											"src": "11700:18:21"
																										},
																										"nativeSrc": "11700:48:21",
																										"nodeType": "YulFunctionCall",
																										"src": "11700:48:21"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11685:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "11685:6:21"
																								},
																								"nativeSrc": "11685:64:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11685:64:21"
																							},
																							"nativeSrc": "11685:64:21",
																							"nodeType": "YulExpressionStatement",
																							"src": "11685:64:21"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11590:7:21",
																							"nodeType": "YulIdentifier",
																							"src": "11590:7:21"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "11599:6:21",
																							"nodeType": "YulIdentifier",
																							"src": "11599:6:21"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11587:2:21",
																						"nodeType": "YulIdentifier",
																						"src": "11587:2:21"
																					},
																					"nativeSrc": "11587:19:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11587:19:21"
																				},
																				"nativeSrc": "11584:179:21",
																				"nodeType": "YulIf",
																				"src": "11584:179:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11783:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "11783:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "11797:6:21",
																											"nodeType": "YulIdentifier",
																											"src": "11797:6:21"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "11805:1:21",
																											"nodeType": "YulLiteral",
																											"src": "11805:1:21",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "11793:3:21",
																										"nodeType": "YulIdentifier",
																										"src": "11793:3:21"
																									},
																									"nativeSrc": "11793:14:21",
																									"nodeType": "YulFunctionCall",
																									"src": "11793:14:21"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11809:1:21",
																									"nodeType": "YulLiteral",
																									"src": "11809:1:21",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11789:3:21",
																								"nodeType": "YulIdentifier",
																								"src": "11789:3:21"
																							},
																							"nativeSrc": "11789:22:21",
																							"nodeType": "YulFunctionCall",
																							"src": "11789:22:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11776:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11776:6:21"
																					},
																					"nativeSrc": "11776:36:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11776:36:21"
																				},
																				"nativeSrc": "11776:36:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "11776:36:21"
																			}
																		]
																	},
																	"nativeSrc": "11204:618:21",
																	"nodeType": "YulCase",
																	"src": "11204:618:21",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11209:1:21",
																		"nodeType": "YulLiteral",
																		"src": "11209:1:21",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11839:222:21",
																		"nodeType": "YulBlock",
																		"src": "11839:222:21",
																		"statements": [
																			{
																				"nativeSrc": "11853:14:21",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11853:14:21",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11866:1:21",
																					"nodeType": "YulLiteral",
																					"src": "11866:1:21",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "11857:5:21",
																						"nodeType": "YulTypedName",
																						"src": "11857:5:21",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11890:67:21",
																					"nodeType": "YulBlock",
																					"src": "11890:67:21",
																					"statements": [
																						{
																							"nativeSrc": "11908:35:21",
																							"nodeType": "YulAssignment",
																							"src": "11908:35:21",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11927:3:21",
																												"nodeType": "YulIdentifier",
																												"src": "11927:3:21"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11932:9:21",
																												"nodeType": "YulIdentifier",
																												"src": "11932:9:21"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11923:3:21",
																											"nodeType": "YulIdentifier",
																											"src": "11923:3:21"
																										},
																										"nativeSrc": "11923:19:21",
																										"nodeType": "YulFunctionCall",
																										"src": "11923:19:21"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11917:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "11917:5:21"
																								},
																								"nativeSrc": "11917:26:21",
																								"nodeType": "YulFunctionCall",
																								"src": "11917:26:21"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "11908:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "11908:5:21"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "11883:6:21",
																					"nodeType": "YulIdentifier",
																					"src": "11883:6:21"
																				},
																				"nativeSrc": "11880:77:21",
																				"nodeType": "YulIf",
																				"src": "11880:77:21"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11977:4:21",
																							"nodeType": "YulIdentifier",
																							"src": "11977:4:21"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "12036:5:21",
																									"nodeType": "YulIdentifier",
																									"src": "12036:5:21"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "12043:6:21",
																									"nodeType": "YulIdentifier",
																									"src": "12043:6:21"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "11983:52:21",
																								"nodeType": "YulIdentifier",
																								"src": "11983:52:21"
																							},
																							"nativeSrc": "11983:67:21",
																							"nodeType": "YulFunctionCall",
																							"src": "11983:67:21"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11970:6:21",
																						"nodeType": "YulIdentifier",
																						"src": "11970:6:21"
																					},
																					"nativeSrc": "11970:81:21",
																					"nodeType": "YulFunctionCall",
																					"src": "11970:81:21"
																				},
																				"nativeSrc": "11970:81:21",
																				"nodeType": "YulExpressionStatement",
																				"src": "11970:81:21"
																			}
																		]
																	},
																	"nativeSrc": "11831:230:21",
																	"nodeType": "YulCase",
																	"src": "11831:230:21",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11184:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "11184:6:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11192:2:21",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:21",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11181:2:21",
																	"nodeType": "YulIdentifier",
																	"src": "11181:2:21"
																},
																"nativeSrc": "11181:14:21",
																"nodeType": "YulFunctionCall",
																"src": "11181:14:21"
															},
															"nativeSrc": "11174:887:21",
															"nodeType": "YulSwitch",
															"src": "11174:887:21"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "10672:1395:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10753:4:21",
														"nodeType": "YulTypedName",
														"src": "10753:4:21",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "10759:3:21",
														"nodeType": "YulTypedName",
														"src": "10759:3:21",
														"type": ""
													}
												],
												"src": "10672:1395:21"
											},
											{
												"body": {
													"nativeSrc": "12219:277:21",
													"nodeType": "YulBlock",
													"src": "12219:277:21",
													"statements": [
														{
															"nativeSrc": "12229:26:21",
															"nodeType": "YulAssignment",
															"src": "12229:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12241:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "12241:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12252:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12252:2:21",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12237:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12237:3:21"
																},
																"nativeSrc": "12237:18:21",
																"nodeType": "YulFunctionCall",
																"src": "12237:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12229:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12229:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12276:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12276:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12287:1:21",
																				"nodeType": "YulLiteral",
																				"src": "12287:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12272:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:21"
																		},
																		"nativeSrc": "12272:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12272:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12295:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "12295:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12301:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12301:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12291:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12291:3:21"
																		},
																		"nativeSrc": "12291:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12291:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12265:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:21"
																},
																"nativeSrc": "12265:47:21",
																"nodeType": "YulFunctionCall",
																"src": "12265:47:21"
															},
															"nativeSrc": "12265:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "12265:47:21"
														},
														{
															"nativeSrc": "12321:86:21",
															"nodeType": "YulAssignment",
															"src": "12321:86:21",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12393:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "12393:6:21"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12402:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "12402:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12329:63:21",
																	"nodeType": "YulIdentifier",
																	"src": "12329:63:21"
																},
																"nativeSrc": "12329:78:21",
																"nodeType": "YulFunctionCall",
																"src": "12329:78:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12321:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "12321:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12461:6:21",
																		"nodeType": "YulIdentifier",
																		"src": "12461:6:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12474:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "12474:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12485:2:21",
																				"nodeType": "YulLiteral",
																				"src": "12485:2:21",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12470:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12470:3:21"
																		},
																		"nativeSrc": "12470:18:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12470:18:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12417:43:21",
																	"nodeType": "YulIdentifier",
																	"src": "12417:43:21"
																},
																"nativeSrc": "12417:72:21",
																"nodeType": "YulFunctionCall",
																"src": "12417:72:21"
															},
															"nativeSrc": "12417:72:21",
															"nodeType": "YulExpressionStatement",
															"src": "12417:72:21"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "12073:423:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12183:9:21",
														"nodeType": "YulTypedName",
														"src": "12183:9:21",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12195:6:21",
														"nodeType": "YulTypedName",
														"src": "12195:6:21",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12203:6:21",
														"nodeType": "YulTypedName",
														"src": "12203:6:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12214:4:21",
														"nodeType": "YulTypedName",
														"src": "12214:4:21",
														"type": ""
													}
												],
												"src": "12073:423:21"
											},
											{
												"body": {
													"nativeSrc": "12608:61:21",
													"nodeType": "YulBlock",
													"src": "12608:61:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12630:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "12630:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12638:1:21",
																				"nodeType": "YulLiteral",
																				"src": "12638:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12626:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:21"
																		},
																		"nativeSrc": "12626:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "12626:14:21"
																	},
																	{
																		"hexValue": "4974656d20616c726561647920736f6c64",
																		"kind": "string",
																		"nativeSrc": "12642:19:21",
																		"nodeType": "YulLiteral",
																		"src": "12642:19:21",
																		"type": "",
																		"value": "Item already sold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12619:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "12619:6:21"
																},
																"nativeSrc": "12619:43:21",
																"nodeType": "YulFunctionCall",
																"src": "12619:43:21"
															},
															"nativeSrc": "12619:43:21",
															"nodeType": "YulExpressionStatement",
															"src": "12619:43:21"
														}
													]
												},
												"name": "store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
												"nativeSrc": "12502:167:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12600:6:21",
														"nodeType": "YulTypedName",
														"src": "12600:6:21",
														"type": ""
													}
												],
												"src": "12502:167:21"
											},
											{
												"body": {
													"nativeSrc": "12821:220:21",
													"nodeType": "YulBlock",
													"src": "12821:220:21",
													"statements": [
														{
															"nativeSrc": "12831:74:21",
															"nodeType": "YulAssignment",
															"src": "12831:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12897:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "12897:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12902:2:21",
																		"nodeType": "YulLiteral",
																		"src": "12902:2:21",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12838:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "12838:58:21"
																},
																"nativeSrc": "12838:67:21",
																"nodeType": "YulFunctionCall",
																"src": "12838:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12831:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "12831:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13003:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "13003:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
																	"nativeSrc": "12914:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "12914:88:21"
																},
																"nativeSrc": "12914:93:21",
																"nodeType": "YulFunctionCall",
																"src": "12914:93:21"
															},
															"nativeSrc": "12914:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "12914:93:21"
														},
														{
															"nativeSrc": "13016:19:21",
															"nodeType": "YulAssignment",
															"src": "13016:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13027:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "13027:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13032:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13032:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13023:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:21"
																},
																"nativeSrc": "13023:12:21",
																"nodeType": "YulFunctionCall",
																"src": "13023:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13016:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13016:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12675:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12809:3:21",
														"nodeType": "YulTypedName",
														"src": "12809:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12817:3:21",
														"nodeType": "YulTypedName",
														"src": "12817:3:21",
														"type": ""
													}
												],
												"src": "12675:366:21"
											},
											{
												"body": {
													"nativeSrc": "13218:248:21",
													"nodeType": "YulBlock",
													"src": "13218:248:21",
													"statements": [
														{
															"nativeSrc": "13228:26:21",
															"nodeType": "YulAssignment",
															"src": "13228:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13240:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "13240:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13251:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13251:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13236:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13236:3:21"
																},
																"nativeSrc": "13236:18:21",
																"nodeType": "YulFunctionCall",
																"src": "13236:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13228:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13228:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13275:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13275:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13286:1:21",
																				"nodeType": "YulLiteral",
																				"src": "13286:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13271:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13271:3:21"
																		},
																		"nativeSrc": "13271:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13271:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13294:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "13294:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13300:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "13300:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13290:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13290:3:21"
																		},
																		"nativeSrc": "13290:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13290:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13264:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13264:6:21"
																},
																"nativeSrc": "13264:47:21",
																"nodeType": "YulFunctionCall",
																"src": "13264:47:21"
															},
															"nativeSrc": "13264:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "13264:47:21"
														},
														{
															"nativeSrc": "13320:139:21",
															"nodeType": "YulAssignment",
															"src": "13320:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13454:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "13454:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13328:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "13328:124:21"
																},
																"nativeSrc": "13328:131:21",
																"nodeType": "YulFunctionCall",
																"src": "13328:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13320:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "13320:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13047:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13198:9:21",
														"nodeType": "YulTypedName",
														"src": "13198:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13213:4:21",
														"nodeType": "YulTypedName",
														"src": "13213:4:21",
														"type": ""
													}
												],
												"src": "13047:419:21"
											},
											{
												"body": {
													"nativeSrc": "13578:62:21",
													"nodeType": "YulBlock",
													"src": "13578:62:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13600:6:21",
																				"nodeType": "YulIdentifier",
																				"src": "13600:6:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13608:1:21",
																				"nodeType": "YulLiteral",
																				"src": "13608:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13596:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "13596:3:21"
																		},
																		"nativeSrc": "13596:14:21",
																		"nodeType": "YulFunctionCall",
																		"src": "13596:14:21"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "13612:20:21",
																		"nodeType": "YulLiteral",
																		"src": "13612:20:21",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13589:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "13589:6:21"
																},
																"nativeSrc": "13589:44:21",
																"nodeType": "YulFunctionCall",
																"src": "13589:44:21"
															},
															"nativeSrc": "13589:44:21",
															"nodeType": "YulExpressionStatement",
															"src": "13589:44:21"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "13472:168:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13570:6:21",
														"nodeType": "YulTypedName",
														"src": "13570:6:21",
														"type": ""
													}
												],
												"src": "13472:168:21"
											},
											{
												"body": {
													"nativeSrc": "13792:220:21",
													"nodeType": "YulBlock",
													"src": "13792:220:21",
													"statements": [
														{
															"nativeSrc": "13802:74:21",
															"nodeType": "YulAssignment",
															"src": "13802:74:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13868:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "13868:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13873:2:21",
																		"nodeType": "YulLiteral",
																		"src": "13873:2:21",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13809:58:21",
																	"nodeType": "YulIdentifier",
																	"src": "13809:58:21"
																},
																"nativeSrc": "13809:67:21",
																"nodeType": "YulFunctionCall",
																"src": "13809:67:21"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13802:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13974:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "13974:3:21"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "13885:88:21",
																	"nodeType": "YulIdentifier",
																	"src": "13885:88:21"
																},
																"nativeSrc": "13885:93:21",
																"nodeType": "YulFunctionCall",
																"src": "13885:93:21"
															},
															"nativeSrc": "13885:93:21",
															"nodeType": "YulExpressionStatement",
															"src": "13885:93:21"
														},
														{
															"nativeSrc": "13987:19:21",
															"nodeType": "YulAssignment",
															"src": "13987:19:21",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13998:3:21",
																		"nodeType": "YulIdentifier",
																		"src": "13998:3:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14003:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14003:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13994:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13994:3:21"
																},
																"nativeSrc": "13994:12:21",
																"nodeType": "YulFunctionCall",
																"src": "13994:12:21"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13987:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "13987:3:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13646:366:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13780:3:21",
														"nodeType": "YulTypedName",
														"src": "13780:3:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13788:3:21",
														"nodeType": "YulTypedName",
														"src": "13788:3:21",
														"type": ""
													}
												],
												"src": "13646:366:21"
											},
											{
												"body": {
													"nativeSrc": "14189:248:21",
													"nodeType": "YulBlock",
													"src": "14189:248:21",
													"statements": [
														{
															"nativeSrc": "14199:26:21",
															"nodeType": "YulAssignment",
															"src": "14199:26:21",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14211:9:21",
																		"nodeType": "YulIdentifier",
																		"src": "14211:9:21"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14222:2:21",
																		"nodeType": "YulLiteral",
																		"src": "14222:2:21",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14207:3:21",
																	"nodeType": "YulIdentifier",
																	"src": "14207:3:21"
																},
																"nativeSrc": "14207:18:21",
																"nodeType": "YulFunctionCall",
																"src": "14207:18:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14199:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14199:4:21"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14246:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14246:9:21"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14257:1:21",
																				"nodeType": "YulLiteral",
																				"src": "14257:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14242:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14242:3:21"
																		},
																		"nativeSrc": "14242:17:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14242:17:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14265:4:21",
																				"nodeType": "YulIdentifier",
																				"src": "14265:4:21"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14271:9:21",
																				"nodeType": "YulIdentifier",
																				"src": "14271:9:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14261:3:21",
																			"nodeType": "YulIdentifier",
																			"src": "14261:3:21"
																		},
																		"nativeSrc": "14261:20:21",
																		"nodeType": "YulFunctionCall",
																		"src": "14261:20:21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14235:6:21",
																	"nodeType": "YulIdentifier",
																	"src": "14235:6:21"
																},
																"nativeSrc": "14235:47:21",
																"nodeType": "YulFunctionCall",
																"src": "14235:47:21"
															},
															"nativeSrc": "14235:47:21",
															"nodeType": "YulExpressionStatement",
															"src": "14235:47:21"
														},
														{
															"nativeSrc": "14291:139:21",
															"nodeType": "YulAssignment",
															"src": "14291:139:21",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14425:4:21",
																		"nodeType": "YulIdentifier",
																		"src": "14425:4:21"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14299:124:21",
																	"nodeType": "YulIdentifier",
																	"src": "14299:124:21"
																},
																"nativeSrc": "14299:131:21",
																"nodeType": "YulFunctionCall",
																"src": "14299:131:21"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14291:4:21",
																	"nodeType": "YulIdentifier",
																	"src": "14291:4:21"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14018:419:21",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14169:9:21",
														"nodeType": "YulTypedName",
														"src": "14169:9:21",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14184:4:21",
														"nodeType": "YulTypedName",
														"src": "14184:4:21",
														"type": ""
													}
												],
												"src": "14018:419:21"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item already sold\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 21,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100f1578063c4b151411461011b578063e7fb74c714610145578063f2fde38b146101615761006f565b80633129e77314610073578063715018a6146100b35780638c551742146100c9575b5f80fd5b34801561007e575f80fd5b50610099600480360381019061009491906107ef565b610189565b6040516100aa9594939291906108f2565b60405180910390f35b3480156100be575f80fd5b506100c7610280565b005b3480156100d4575f80fd5b506100ef60048036038101906100ea9190610a76565b610293565b005b3480156100fc575f80fd5b506101056103e8565b6040516101129190610ad0565b60405180910390f35b348015610126575f80fd5b5061012f61040f565b60405161013c9190610ae9565b60405180910390f35b61015f600480360381019061015a91906107ef565b61041f565b005b34801561016c575f80fd5b5061018760048036038101906101829190610b2c565b6105b8565b005b5f8060605f805f60035f8881526020019081526020015f209050805f01549550806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694508060020180546101de90610b84565b80601f016020809104026020016040519081016040528092919081815260200182805461020a90610b84565b80156102555780601f1061022c57610100808354040283529160200191610255565b820191905f5260205f20905b81548152906001019060200180831161023857829003601f168201915b5050505050935080600301549250806004015f9054906101000a900460ff1691505091939590929450565b61028861063c565b6102915f6106c3565b565b61029b61063c565b6102a56001610784565b5f6102b06001610798565b90506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020015f151581525060035f8381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816103659190610d51565b50606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16817f1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a885856040516103db929190610e20565b60405180910390a3505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61041a6002610798565b905090565b5f60035f8381526020019081526020015f2090505f1515816004015f9054906101000a900460ff16151514610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048090610e98565b60405180910390fd5b80600301543410156104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c790610f00565b60405180910390fd5b6001816004015f6101000a81548160ff0219169083151502179055506104f66002610784565b3373ffffffffffffffffffffffffffffffffffffffff16827fa574c741071bb18f51fa88c17aeefec514bebf670ca22a3736fba6504ecbb76383600301546040516105419190610ae9565b60405180910390a3806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826003015490811502906040515f60405180830381858888f193505050501580156105b3573d5f803e3d5ffd5b505050565b6105c061063c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610630575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106279190610ad0565b60405180910390fd5b610639816106c3565b50565b6106446107a4565b73ffffffffffffffffffffffffffffffffffffffff166106626103e8565b73ffffffffffffffffffffffffffffffffffffffff16146106c1576106856107a4565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106b89190610ad0565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6107ce816107bc565b81146107d8575f80fd5b50565b5f813590506107e9816107c5565b92915050565b5f60208284031215610804576108036107b4565b5b5f610811848285016107db565b91505092915050565b610823816107bc565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61085282610829565b9050919050565b61086281610848565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6108aa82610868565b6108b48185610872565b93506108c4818560208601610882565b6108cd81610890565b840191505092915050565b5f8115159050919050565b6108ec816108d8565b82525050565b5f60a0820190506109055f83018861081a565b6109126020830187610859565b818103604083015261092481866108a0565b9050610933606083018561081a565b61094060808301846108e3565b9695505050505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61098882610890565b810181811067ffffffffffffffff821117156109a7576109a6610952565b5b80604052505050565b5f6109b96107ab565b90506109c5828261097f565b919050565b5f67ffffffffffffffff8211156109e4576109e3610952565b5b6109ed82610890565b9050602081019050919050565b828183375f83830152505050565b5f610a1a610a15846109ca565b6109b0565b905082815260208101848484011115610a3657610a3561094e565b5b610a418482856109fa565b509392505050565b5f82601f830112610a5d57610a5c61094a565b5b8135610a6d848260208601610a08565b91505092915050565b5f8060408385031215610a8c57610a8b6107b4565b5b5f83013567ffffffffffffffff811115610aa957610aa86107b8565b5b610ab585828601610a49565b9250506020610ac6858286016107db565b9150509250929050565b5f602082019050610ae35f830184610859565b92915050565b5f602082019050610afc5f83018461081a565b92915050565b610b0b81610848565b8114610b15575f80fd5b50565b5f81359050610b2681610b02565b92915050565b5f60208284031215610b4157610b406107b4565b5b5f610b4e84828501610b18565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b9b57607f821691505b602082108103610bae57610bad610b57565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610c107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bd5565b610c1a8683610bd5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610c55610c50610c4b846107bc565b610c32565b6107bc565b9050919050565b5f819050919050565b610c6e83610c3b565b610c82610c7a82610c5c565b848454610be1565b825550505050565b5f90565b610c96610c8a565b610ca1818484610c65565b505050565b5b81811015610cc457610cb95f82610c8e565b600181019050610ca7565b5050565b601f821115610d0957610cda81610bb4565b610ce384610bc6565b81016020851015610cf2578190505b610d06610cfe85610bc6565b830182610ca6565b50505b505050565b5f82821c905092915050565b5f610d295f1984600802610d0e565b1980831691505092915050565b5f610d418383610d1a565b9150826002028217905092915050565b610d5a82610868565b67ffffffffffffffff811115610d7357610d72610952565b5b610d7d8254610b84565b610d88828285610cc8565b5f60209050601f831160018114610db9575f8415610da7578287015190505b610db18582610d36565b865550610e18565b601f198416610dc786610bb4565b5f5b82811015610dee57848901518255600182019150602085019450602081019050610dc9565b86831015610e0b5784890151610e07601f891682610d1a565b8355505b6001600288020188555050505b505050505050565b5f6040820190508181035f830152610e3881856108a0565b9050610e47602083018461081a565b9392505050565b7f4974656d20616c726561647920736f6c640000000000000000000000000000005f82015250565b5f610e82601183610872565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f610eea601283610872565b9150610ef582610eb6565b602082019050919050565b5f6020820190508181035f830152610f1781610ede565b905091905056fea2646970667358221220ee887731969483f8c7b195952cc4f9c8cae7c88f6b36ec5f78363a13d0aee32964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xC4B15141 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x161 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x3129E773 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8C551742 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC7 PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x60 PUSH0 DUP1 PUSH0 PUSH1 0x3 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1DE SWAP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20A SWAP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x255 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x255 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x238 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP1 PUSH1 0x3 ADD SLOAD SWAP3 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x291 PUSH0 PUSH2 0x6C3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x29B PUSH2 0x63C JUMP JUMPDEST PUSH2 0x2A5 PUSH1 0x1 PUSH2 0x784 JUMP JUMPDEST PUSH0 PUSH2 0x2B0 PUSH1 0x1 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP3 SWAP2 SWAP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x41A PUSH1 0x2 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 ISZERO ISZERO DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x480 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP1 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x4F6 PUSH1 0x2 PUSH2 0x784 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xA574C741071BB18F51FA88C17AEEFEC514BEBF670CA22A3736FBA6504ECBB763 DUP4 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x541 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0x3 ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x63C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x630 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x627 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP2 PUSH2 0x6C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x644 PUSH2 0x7A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x662 PUSH2 0x3E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C1 JUMPI PUSH2 0x685 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7CE DUP2 PUSH2 0x7BC JUMP JUMPDEST DUP2 EQ PUSH2 0x7D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E9 DUP2 PUSH2 0x7C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x811 DUP5 DUP3 DUP6 ADD PUSH2 0x7DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x823 DUP2 PUSH2 0x7BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x852 DUP3 PUSH2 0x829 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x862 DUP2 PUSH2 0x848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x8B4 DUP2 DUP6 PUSH2 0x872 JUMP JUMPDEST SWAP4 POP PUSH2 0x8C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x882 JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x890 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EC DUP2 PUSH2 0x8D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x905 PUSH0 DUP4 ADD DUP9 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x912 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x859 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x924 DUP2 DUP7 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x933 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x940 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8E3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x988 DUP3 PUSH2 0x890 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH2 0x9A6 PUSH2 0x952 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9B9 PUSH2 0x7AB JUMP JUMPDEST SWAP1 POP PUSH2 0x9C5 DUP3 DUP3 PUSH2 0x97F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9E4 JUMPI PUSH2 0x9E3 PUSH2 0x952 JUMP JUMPDEST JUMPDEST PUSH2 0x9ED DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1A PUSH2 0xA15 DUP5 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x94E JUMP JUMPDEST JUMPDEST PUSH2 0xA41 DUP5 DUP3 DUP6 PUSH2 0x9FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA5D JUMPI PUSH2 0xA5C PUSH2 0x94A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA6D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xA08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA9 JUMPI PUSH2 0xAA8 PUSH2 0x7B8 JUMP JUMPDEST JUMPDEST PUSH2 0xAB5 DUP6 DUP3 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAC6 DUP6 DUP3 DUP7 ADD PUSH2 0x7DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFC PUSH0 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB0B DUP2 PUSH2 0x848 JUMP JUMPDEST DUP2 EQ PUSH2 0xB15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB26 DUP2 PUSH2 0xB02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB41 JUMPI PUSH2 0xB40 PUSH2 0x7B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB4E DUP5 DUP3 DUP6 ADD PUSH2 0xB18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBAE JUMPI PUSH2 0xBAD PUSH2 0xB57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xC10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0xC1A DUP7 DUP4 PUSH2 0xBD5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC55 PUSH2 0xC50 PUSH2 0xC4B DUP5 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP4 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0xC82 PUSH2 0xC7A DUP3 PUSH2 0xC5C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xBE1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xC96 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0xCA1 DUP2 DUP5 DUP5 PUSH2 0xC65 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH2 0xCB9 PUSH0 DUP3 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD09 JUMPI PUSH2 0xCDA DUP2 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0xCE3 DUP5 PUSH2 0xBC6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xCF2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xD06 PUSH2 0xCFE DUP6 PUSH2 0xBC6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xCA6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD29 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xD0E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD41 DUP4 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5A DUP3 PUSH2 0x868 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD73 JUMPI PUSH2 0xD72 PUSH2 0x952 JUMP JUMPDEST JUMPDEST PUSH2 0xD7D DUP3 SLOAD PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xD88 DUP3 DUP3 DUP6 PUSH2 0xCC8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xDB9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xDA7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xDB1 DUP6 DUP3 PUSH2 0xD36 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xDC7 DUP7 PUSH2 0xBB4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDEE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDC9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xE0B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xE07 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xD1A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE38 DUP2 DUP6 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 POP PUSH2 0xE47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D20616C726561647920736F6C64000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x11 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEEA PUSH1 0x12 DUP4 PUSH2 0x872 JUMP JUMPDEST SWAP2 POP PUSH2 0xEF5 DUP3 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF17 DUP2 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE DUP9 PUSH24 0x31969483F8C7B195952CC4F9C8CAE7C88F6B36EC5F78363A SGT 0xD0 0xAE 0xE3 0x29 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "309:1738:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:321;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;858:293:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1899:100:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1159:403;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:321:20;1624:10;1636:15;1653:17;1672:13;1687:9;1709:20;1732:6;:14;1739:6;1732:14;;;;;;;;;;;1709:37;;1762:4;:7;;;1757:12;;1790:4;:12;;;;;;;;;;;;1780:22;;1819:4;:8;;1813:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:4;:10;;;1838:18;;1874:4;:9;;;;;;;;;;;;1867:16;;1698:193;1570:321;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;858:293:20:-;1531:13:0;:11;:13::i;:::-;940:20:20::1;:8;:18;:20::i;:::-;971:14;988:18;:8;:16;:18::i;:::-;971:35;;1036:46;;;;;;;;1044:6;1036:46;;;;1052:10;1036:46;;;;;;1064:3;1036:46;;;;1069:5;1036:46;;;;1076:5;1036:46;;;;::::0;1019:6:::1;:14;1026:6;1019:14;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:10;1100:43;;1112:6;1100:43;1132:3;1137:5;1100:43;;;;;;;:::i;:::-;;;;;;;;929:222;858:293:::0;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1899:100:20:-;1944:7;1971:20;:10;:18;:20::i;:::-;1964:27;;1899:100;:::o;1159:403::-;1218:20;1241:6;:14;1248:6;1241:14;;;;;;;;;;;1218:37;;1287:5;1274:18;;:4;:9;;;;;;;;;;;;:18;;;1266:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1346:4;:10;;;1333:9;:23;;1325:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1404:4;1392;:9;;;:16;;;;;;;;;;;;;;;;;;1419:22;:10;:20;:22::i;:::-;1476:10;1459:40;;1468:6;1459:40;1488:4;:10;;;1459:40;;;;;;:::i;:::-;;;;;;;;1520:4;:12;;;;;;;;;;;;1512:30;;:42;1543:4;:10;;;1512:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1207:355;1159:403;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:126::-;1186:7;1226:42;1219:5;1215:54;1204:65;;1149:126;;;:::o;1281:96::-;1318:7;1347:24;1365:5;1347:24;:::i;:::-;1336:35;;1281:96;;;:::o;1383:118::-;1470:24;1488:5;1470:24;:::i;:::-;1465:3;1458:37;1383:118;;:::o;1507:99::-;1559:6;1593:5;1587:12;1577:22;;1507:99;;;:::o;1612:169::-;1696:11;1730:6;1725:3;1718:19;1770:4;1765:3;1761:14;1746:29;;1612:169;;;;:::o;1787:139::-;1876:6;1871:3;1866;1860:23;1917:1;1908:6;1903:3;1899:16;1892:27;1787:139;;;:::o;1932:102::-;1973:6;2024:2;2020:7;2015:2;2008:5;2004:14;2000:28;1990:38;;1932:102;;;:::o;2040:377::-;2128:3;2156:39;2189:5;2156:39;:::i;:::-;2211:71;2275:6;2270:3;2211:71;:::i;:::-;2204:78;;2291:65;2349:6;2344:3;2337:4;2330:5;2326:16;2291:65;:::i;:::-;2381:29;2403:6;2381:29;:::i;:::-;2376:3;2372:39;2365:46;;2132:285;2040:377;;;;:::o;2423:90::-;2457:7;2500:5;2493:13;2486:21;2475:32;;2423:90;;;:::o;2519:109::-;2600:21;2615:5;2600:21;:::i;:::-;2595:3;2588:34;2519:109;;:::o;2634:743::-;2853:4;2891:3;2880:9;2876:19;2868:27;;2905:71;2973:1;2962:9;2958:17;2949:6;2905:71;:::i;:::-;2986:72;3054:2;3043:9;3039:18;3030:6;2986:72;:::i;:::-;3105:9;3099:4;3095:20;3090:2;3079:9;3075:18;3068:48;3133:78;3206:4;3197:6;3133:78;:::i;:::-;3125:86;;3221:72;3289:2;3278:9;3274:18;3265:6;3221:72;:::i;:::-;3303:67;3365:3;3354:9;3350:19;3341:6;3303:67;:::i;:::-;2634:743;;;;;;;;:::o;3383:117::-;3492:1;3489;3482:12;3506:117;3615:1;3612;3605:12;3629:180;3677:77;3674:1;3667:88;3774:4;3771:1;3764:15;3798:4;3795:1;3788:15;3815:281;3898:27;3920:4;3898:27;:::i;:::-;3890:6;3886:40;4028:6;4016:10;4013:22;3992:18;3980:10;3977:34;3974:62;3971:88;;;4039:18;;:::i;:::-;3971:88;4079:10;4075:2;4068:22;3858:238;3815:281;;:::o;4102:129::-;4136:6;4163:20;;:::i;:::-;4153:30;;4192:33;4220:4;4212:6;4192:33;:::i;:::-;4102:129;;;:::o;4237:308::-;4299:4;4389:18;4381:6;4378:30;4375:56;;;4411:18;;:::i;:::-;4375:56;4449:29;4471:6;4449:29;:::i;:::-;4441:37;;4533:4;4527;4523:15;4515:23;;4237:308;;;:::o;4551:148::-;4649:6;4644:3;4639;4626:30;4690:1;4681:6;4676:3;4672:16;4665:27;4551:148;;;:::o;4705:425::-;4783:5;4808:66;4824:49;4866:6;4824:49;:::i;:::-;4808:66;:::i;:::-;4799:75;;4897:6;4890:5;4883:21;4935:4;4928:5;4924:16;4973:3;4964:6;4959:3;4955:16;4952:25;4949:112;;;4980:79;;:::i;:::-;4949:112;5070:54;5117:6;5112:3;5107;5070:54;:::i;:::-;4789:341;4705:425;;;;;:::o;5150:340::-;5206:5;5255:3;5248:4;5240:6;5236:17;5232:27;5222:122;;5263:79;;:::i;:::-;5222:122;5380:6;5367:20;5405:79;5480:3;5472:6;5465:4;5457:6;5453:17;5405:79;:::i;:::-;5396:88;;5212:278;5150:340;;;;:::o;5496:654::-;5574:6;5582;5631:2;5619:9;5610:7;5606:23;5602:32;5599:119;;;5637:79;;:::i;:::-;5599:119;5785:1;5774:9;5770:17;5757:31;5815:18;5807:6;5804:30;5801:117;;;5837:79;;:::i;:::-;5801:117;5942:63;5997:7;5988:6;5977:9;5973:22;5942:63;:::i;:::-;5932:73;;5728:287;6054:2;6080:53;6125:7;6116:6;6105:9;6101:22;6080:53;:::i;:::-;6070:63;;6025:118;5496:654;;;;;:::o;6156:222::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6300:71;6368:1;6357:9;6353:17;6344:6;6300:71;:::i;:::-;6156:222;;;;:::o;6384:::-;6477:4;6515:2;6504:9;6500:18;6492:26;;6528:71;6596:1;6585:9;6581:17;6572:6;6528:71;:::i;:::-;6384:222;;;;:::o;6612:122::-;6685:24;6703:5;6685:24;:::i;:::-;6678:5;6675:35;6665:63;;6724:1;6721;6714:12;6665:63;6612:122;:::o;6740:139::-;6786:5;6824:6;6811:20;6802:29;;6840:33;6867:5;6840:33;:::i;:::-;6740:139;;;;:::o;6885:329::-;6944:6;6993:2;6981:9;6972:7;6968:23;6964:32;6961:119;;;6999:79;;:::i;:::-;6961:119;7119:1;7144:53;7189:7;7180:6;7169:9;7165:22;7144:53;:::i;:::-;7134:63;;7090:117;6885:329;;;;:::o;7220:180::-;7268:77;7265:1;7258:88;7365:4;7362:1;7355:15;7389:4;7386:1;7379:15;7406:320;7450:6;7487:1;7481:4;7477:12;7467:22;;7534:1;7528:4;7524:12;7555:18;7545:81;;7611:4;7603:6;7599:17;7589:27;;7545:81;7673:2;7665:6;7662:14;7642:18;7639:38;7636:84;;7692:18;;:::i;:::-;7636:84;7457:269;7406:320;;;:::o;7732:141::-;7781:4;7804:3;7796:11;;7827:3;7824:1;7817:14;7861:4;7858:1;7848:18;7840:26;;7732:141;;;:::o;7879:93::-;7916:6;7963:2;7958;7951:5;7947:14;7943:23;7933:33;;7879:93;;;:::o;7978:107::-;8022:8;8072:5;8066:4;8062:16;8041:37;;7978:107;;;;:::o;8091:393::-;8160:6;8210:1;8198:10;8194:18;8233:97;8263:66;8252:9;8233:97;:::i;:::-;8351:39;8381:8;8370:9;8351:39;:::i;:::-;8339:51;;8423:4;8419:9;8412:5;8408:21;8399:30;;8472:4;8462:8;8458:19;8451:5;8448:30;8438:40;;8167:317;;8091:393;;;;;:::o;8490:60::-;8518:3;8539:5;8532:12;;8490:60;;;:::o;8556:142::-;8606:9;8639:53;8657:34;8666:24;8684:5;8666:24;:::i;:::-;8657:34;:::i;:::-;8639:53;:::i;:::-;8626:66;;8556:142;;;:::o;8704:75::-;8747:3;8768:5;8761:12;;8704:75;;;:::o;8785:269::-;8895:39;8926:7;8895:39;:::i;:::-;8956:91;9005:41;9029:16;9005:41;:::i;:::-;8997:6;8990:4;8984:11;8956:91;:::i;:::-;8950:4;8943:105;8861:193;8785:269;;;:::o;9060:73::-;9105:3;9060:73;:::o;9139:189::-;9216:32;;:::i;:::-;9257:65;9315:6;9307;9301:4;9257:65;:::i;:::-;9192:136;9139:189;;:::o;9334:186::-;9394:120;9411:3;9404:5;9401:14;9394:120;;;9465:39;9502:1;9495:5;9465:39;:::i;:::-;9438:1;9431:5;9427:13;9418:22;;9394:120;;;9334:186;;:::o;9526:543::-;9627:2;9622:3;9619:11;9616:446;;;9661:38;9693:5;9661:38;:::i;:::-;9745:29;9763:10;9745:29;:::i;:::-;9735:8;9731:44;9928:2;9916:10;9913:18;9910:49;;;9949:8;9934:23;;9910:49;9972:80;10028:22;10046:3;10028:22;:::i;:::-;10018:8;10014:37;10001:11;9972:80;:::i;:::-;9631:431;;9616:446;9526:543;;;:::o;10075:117::-;10129:8;10179:5;10173:4;10169:16;10148:37;;10075:117;;;;:::o;10198:169::-;10242:6;10275:51;10323:1;10319:6;10311:5;10308:1;10304:13;10275:51;:::i;:::-;10271:56;10356:4;10350;10346:15;10336:25;;10249:118;10198:169;;;;:::o;10372:295::-;10448:4;10594:29;10619:3;10613:4;10594:29;:::i;:::-;10586:37;;10656:3;10653:1;10649:11;10643:4;10640:21;10632:29;;10372:295;;;;:::o;10672:1395::-;10789:37;10822:3;10789:37;:::i;:::-;10891:18;10883:6;10880:30;10877:56;;;10913:18;;:::i;:::-;10877:56;10957:38;10989:4;10983:11;10957:38;:::i;:::-;11042:67;11102:6;11094;11088:4;11042:67;:::i;:::-;11136:1;11160:4;11147:17;;11192:2;11184:6;11181:14;11209:1;11204:618;;;;11866:1;11883:6;11880:77;;;11932:9;11927:3;11923:19;11917:26;11908:35;;11880:77;11983:67;12043:6;12036:5;11983:67;:::i;:::-;11977:4;11970:81;11839:222;11174:887;;11204:618;11256:4;11252:9;11244:6;11240:22;11290:37;11322:4;11290:37;:::i;:::-;11349:1;11363:208;11377:7;11374:1;11371:14;11363:208;;;11456:9;11451:3;11447:19;11441:26;11433:6;11426:42;11507:1;11499:6;11495:14;11485:24;;11554:2;11543:9;11539:18;11526:31;;11400:4;11397:1;11393:12;11388:17;;11363:208;;;11599:6;11590:7;11587:19;11584:179;;;11657:9;11652:3;11648:19;11642:26;11700:48;11742:4;11734:6;11730:17;11719:9;11700:48;:::i;:::-;11692:6;11685:64;11607:156;11584:179;11809:1;11805;11797:6;11793:14;11789:22;11783:4;11776:36;11211:611;;;11174:887;;10764:1303;;;10672:1395;;:::o;12073:423::-;12214:4;12252:2;12241:9;12237:18;12229:26;;12301:9;12295:4;12291:20;12287:1;12276:9;12272:17;12265:47;12329:78;12402:4;12393:6;12329:78;:::i;:::-;12321:86;;12417:72;12485:2;12474:9;12470:18;12461:6;12417:72;:::i;:::-;12073:423;;;;;:::o;12502:167::-;12642:19;12638:1;12630:6;12626:14;12619:43;12502:167;:::o;12675:366::-;12817:3;12838:67;12902:2;12897:3;12838:67;:::i;:::-;12831:74;;12914:93;13003:3;12914:93;:::i;:::-;13032:2;13027:3;13023:12;13016:19;;12675:366;;;:::o;13047:419::-;13213:4;13251:2;13240:9;13236:18;13228:26;;13300:9;13294:4;13290:20;13286:1;13275:9;13271:17;13264:47;13328:131;13454:4;13328:131;:::i;:::-;13320:139;;13047:419;;;:::o;13472:168::-;13612:20;13608:1;13600:6;13596:14;13589:44;13472:168;:::o;13646:366::-;13788:3;13809:67;13873:2;13868:3;13809:67;:::i;:::-;13802:74;;13885:93;13974:3;13885:93;:::i;:::-;14003:2;13998:3;13994:12;13987:19;;13646:366;;;:::o;14018:419::-;14184:4;14222:2;14211:9;14207:18;14199:26;;14271:9;14265:4;14261:20;14257:1;14246:9;14242:17;14235:47;14299:131;14425:4;14299:131;:::i;:::-;14291:139;;14018:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "784800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyItem(uint256)": "infinite",
								"createItem(string,uint256)": "infinite",
								"getItem(uint256)": "infinite",
								"getItemsSold()": "2501",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "CALLVALUE",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2007,
									"end": 2044,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2029,
									"end": 2039,
									"name": "CALLER",
									"source": 20
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 21,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 21
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 21,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 21,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 21,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 21,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 21
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 21
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 21
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 21
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 21,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 21
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 21
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "tag",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 2047,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee887731969483f8c7b195952cc4f9c8cae7c88f6b36ec5f78363a13d0aee32964736f6c634300081a0033",
									".code": [
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "SHR",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "C4B15141"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "E7FB74C7"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "F2FDE38B"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "tag",
											"source": 20,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "3129E773"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "715018A6"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "8C551742"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "tag",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 309,
											"end": 2047,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "10"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 1570,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "12"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1570,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "16"
										},
										{
											"begin": 1570,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "15"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 858,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 858,
											"end": 1151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "tag",
											"source": 20,
											"value": "6"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "tag",
											"source": 20,
											"value": "30"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 1899,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "tag",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 1899,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "RETURN",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "tag",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "CALLDATASIZE",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "13"
										},
										{
											"begin": 1159,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 1159,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "STOP",
											"source": 20
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1653,
											"end": 1670,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 1672,
											"end": 1685,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1709,
											"end": 1729,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1746,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1762,
											"end": 1766,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1762,
											"end": 1769,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1802,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1780,
											"end": 1802,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1780,
											"end": 1802,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1819,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1819,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 1813,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 1813,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "tag",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "tag",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "tag",
											"source": 20,
											"value": "47"
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1813,
											"end": 1827,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1846,
											"end": 1856,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1846,
											"end": 1856,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1846,
											"end": 1856,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1698,
											"end": 1891,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1570,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "tag",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 940,
											"end": 948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 940,
											"end": 960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 940,
											"end": 960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 940,
											"end": 960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 971,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 988,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 988,
											"end": 1004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 988,
											"end": 1006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 988,
											"end": 1006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 971,
											"end": 1006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 971,
											"end": 1006,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1044,
											"end": 1050,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1052,
											"end": 1062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1064,
											"end": 1067,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1069,
											"end": 1074,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1076,
											"end": 1081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1036,
											"end": 1082,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1033,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 1019,
											"end": 1082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1019,
											"end": 1082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1120,
											"end": 1130,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1112,
											"end": 1118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "1603F20F721362B0691BB408EDB3CF01409CD56DA9EDD4627B178750B7DD49A8"
										},
										{
											"begin": 1132,
											"end": 1135,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1137,
											"end": 1142,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1100,
											"end": 1143,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 929,
											"end": 1151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 858,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "tag",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1944,
											"end": 1951,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1964,
											"end": 1991,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1964,
											"end": 1991,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1899,
											"end": 1999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1218,
											"end": 1238,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "KECCAK256",
											"source": 20
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1218,
											"end": 1255,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1287,
											"end": 1292,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 1266,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 1266,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1350,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1356,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1346,
											"end": 1356,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1346,
											"end": 1356,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "CALLVALUE",
											"source": 20
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1333,
											"end": 1356,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH",
											"source": 20,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 1325,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "tag",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "tag",
											"source": 20,
											"value": "74"
										},
										{
											"begin": 1325,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1404,
											"end": 1408,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1396,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "SSTORE",
											"source": 20
										},
										{
											"begin": 1392,
											"end": 1408,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1419,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 1419,
											"end": 1429,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 1419,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 1419,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1419,
											"end": 1441,
											"name": "tag",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 1419,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH",
											"source": 20,
											"value": "A574C741071BB18F51FA88C17AEEFEC514BEBF670CA22A3736FBA6504ECBB763"
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 1459,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "tag",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "LOG3",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1524,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "PUSH",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "EXP",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1542,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "8FC"
										},
										{
											"begin": 1543,
											"end": 1547,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "PUSH",
											"source": 20,
											"value": "3"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "SLOAD",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "MUL",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "CALL",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "RETURNDATACOPY",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "RETURNDATASIZE",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "tag",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1512,
											"end": 1554,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1207,
											"end": 1562,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1159,
											"end": 1562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 21,
											"value": "102"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 21,
											"value": "152"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 21,
											"value": "153"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "102"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 21,
											"value": "155"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 21,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 21,
											"value": "158"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 21,
											"value": "157"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 21,
											"value": "159"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 21,
											"value": "161"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "tag",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1268,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1215,
											"end": 1269,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1204,
											"end": 1269,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1275,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1149,
											"end": 1275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "tag",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "105"
										},
										{
											"begin": 1347,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 21,
											"value": "164"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1336,
											"end": 1371,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1281,
											"end": 1377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1281,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "tag",
											"source": 21,
											"value": "107"
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 1488,
											"end": 1493,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 1470,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "tag",
											"source": 21,
											"value": "166"
										},
										{
											"begin": 1470,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1465,
											"end": 1468,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1458,
											"end": 1495,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1383,
											"end": 1501,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1383,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1606,
											"name": "tag",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 1507,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 1577,
											"end": 1599,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1577,
											"end": 1599,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1606,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1606,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1606,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1507,
											"end": 1606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "tag",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1696,
											"end": 1707,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1736,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1725,
											"end": 1728,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1768,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1761,
											"end": 1775,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1746,
											"end": 1775,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1746,
											"end": 1775,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1612,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1926,
											"name": "tag",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 1787,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 1871,
											"end": 1874,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "MCOPY",
											"source": 21
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1903,
											"end": 1906,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 1899,
											"end": 1915,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 1892,
											"end": 1919,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1926,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1787,
											"end": 1926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 1932,
											"end": 2034,
											"name": "tag",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 1932,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2027,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 2015,
											"end": 2017,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2004,
											"end": 2018,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2000,
											"end": 2028,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 1990,
											"end": 2028,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1990,
											"end": 2028,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1932,
											"end": 2034,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 1932,
											"end": 2034,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 1932,
											"end": 2034,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 1932,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "tag",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2128,
											"end": 2131,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 2189,
											"end": 2194,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2156,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 2156,
											"end": 2195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2156,
											"end": 2195,
											"name": "tag",
											"source": 21,
											"value": "172"
										},
										{
											"begin": 2156,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2211,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2270,
											"end": 2273,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2211,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 2211,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2211,
											"end": 2282,
											"name": "tag",
											"source": 21,
											"value": "173"
										},
										{
											"begin": 2211,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2204,
											"end": 2282,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 2204,
											"end": 2282,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2291,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2344,
											"end": 2347,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 2337,
											"end": 2341,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 2326,
											"end": 2342,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2291,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "110"
										},
										{
											"begin": 2291,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2291,
											"end": 2356,
											"name": "tag",
											"source": 21,
											"value": "174"
										},
										{
											"begin": 2291,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 2381,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "tag",
											"source": 21,
											"value": "175"
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2376,
											"end": 2379,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 2372,
											"end": 2411,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2365,
											"end": 2411,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2132,
											"end": 2417,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2040,
											"end": 2417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2423,
											"end": 2513,
											"name": "tag",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 2423,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2493,
											"end": 2506,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2486,
											"end": 2507,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 2475,
											"end": 2507,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2475,
											"end": 2507,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2423,
											"end": 2513,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 2423,
											"end": 2513,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2423,
											"end": 2513,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2423,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2519,
											"end": 2628,
											"name": "tag",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 2519,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2600,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 2615,
											"end": 2620,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 2600,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "113"
										},
										{
											"begin": 2600,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2600,
											"end": 2621,
											"name": "tag",
											"source": 21,
											"value": "178"
										},
										{
											"begin": 2600,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2595,
											"end": 2598,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 2519,
											"end": 2628,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2519,
											"end": 2628,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2519,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "tag",
											"source": 21,
											"value": "16"
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2853,
											"end": 2857,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2894,
											"name": "PUSH",
											"source": 21,
											"value": "A0"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 2876,
											"end": 2895,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2868,
											"end": 2895,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 2868,
											"end": 2895,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2905,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 2958,
											"end": 2975,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 2905,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 2905,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2905,
											"end": 2976,
											"name": "tag",
											"source": 21,
											"value": "180"
										},
										{
											"begin": 2905,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 3054,
											"end": 3056,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 3043,
											"end": 3052,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "107"
										},
										{
											"begin": 2986,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 2986,
											"end": 3058,
											"name": "tag",
											"source": 21,
											"value": "181"
										},
										{
											"begin": 2986,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3095,
											"end": 3115,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 3090,
											"end": 3092,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3068,
											"end": 3116,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3133,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 3206,
											"end": 3210,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 3133,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 3133,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3133,
											"end": 3211,
											"name": "tag",
											"source": 21,
											"value": "182"
										},
										{
											"begin": 3133,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3125,
											"end": 3211,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 3125,
											"end": 3211,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3221,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 3289,
											"end": 3291,
											"name": "PUSH",
											"source": 21,
											"value": "60"
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 3221,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 3221,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3221,
											"end": 3293,
											"name": "tag",
											"source": 21,
											"value": "183"
										},
										{
											"begin": 3221,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3303,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 3365,
											"end": 3368,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 3350,
											"end": 3369,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 3303,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "114"
										},
										{
											"begin": 3303,
											"end": 3370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3303,
											"end": 3370,
											"name": "tag",
											"source": 21,
											"value": "184"
										},
										{
											"begin": 3303,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "SWAP7",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 2634,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3383,
											"end": 3500,
											"name": "tag",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 3383,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3490,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3482,
											"end": 3494,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3506,
											"end": 3623,
											"name": "tag",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 3506,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 3605,
											"end": 3617,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3629,
											"end": 3809,
											"name": "tag",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 3629,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3677,
											"end": 3754,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3755,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "PUSH",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3779,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3803,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "tag",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "189"
										},
										{
											"begin": 3920,
											"end": 3924,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 3898,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "tag",
											"source": 21,
											"value": "189"
										},
										{
											"begin": 3898,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 3886,
											"end": 3926,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4016,
											"end": 4026,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4013,
											"end": 4035,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 3990,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 3977,
											"end": 4011,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 3974,
											"end": 4036,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 4039,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "tag",
											"source": 21,
											"value": "191"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "tag",
											"source": 21,
											"value": "190"
										},
										{
											"begin": 3971,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 4075,
											"end": 4077,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 3858,
											"end": 4096,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3815,
											"end": 4096,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 3815,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "tag",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "98"
										},
										{
											"begin": 4163,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "tag",
											"source": 21,
											"value": "193"
										},
										{
											"begin": 4163,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4153,
											"end": 4183,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "118"
										},
										{
											"begin": 4192,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "tag",
											"source": 21,
											"value": "194"
										},
										{
											"begin": 4192,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4231,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4102,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "tag",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4387,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4378,
											"end": 4408,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "196"
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "197"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 4411,
											"end": 4429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "tag",
											"source": 21,
											"value": "197"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "tag",
											"source": 21,
											"value": "196"
										},
										{
											"begin": 4375,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "198"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "111"
										},
										{
											"begin": 4449,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "tag",
											"source": 21,
											"value": "198"
										},
										{
											"begin": 4449,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4441,
											"end": 4478,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4441,
											"end": 4478,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4523,
											"end": 4538,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4515,
											"end": 4538,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4545,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4237,
											"end": 4545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4699,
											"name": "tag",
											"source": 21,
											"value": "121"
										},
										{
											"begin": 4551,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4649,
											"end": 4655,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4644,
											"end": 4647,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4639,
											"end": 4642,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4626,
											"end": 4656,
											"name": "CALLDATACOPY",
											"source": 21
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 4672,
											"end": 4688,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4665,
											"end": 4692,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4699,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4551,
											"end": 4699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "tag",
											"source": 21,
											"value": "122"
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4783,
											"end": 4788,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 4824,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4824,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "120"
										},
										{
											"begin": 4824,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4824,
											"end": 4873,
											"name": "tag",
											"source": 21,
											"value": "202"
										},
										{
											"begin": 4824,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4808,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "119"
										},
										{
											"begin": 4808,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4808,
											"end": 4874,
											"name": "tag",
											"source": 21,
											"value": "201"
										},
										{
											"begin": 4808,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4799,
											"end": 4874,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 4799,
											"end": 4874,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4883,
											"end": 4904,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 4924,
											"end": 4940,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4973,
											"end": 4976,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4959,
											"end": 4962,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 4952,
											"end": 4977,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 4949,
											"end": 5061,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 4949,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "203"
										},
										{
											"begin": 4949,
											"end": 5061,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "204"
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "116"
										},
										{
											"begin": 4980,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "tag",
											"source": 21,
											"value": "204"
										},
										{
											"begin": 4980,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4949,
											"end": 5061,
											"name": "tag",
											"source": 21,
											"value": "203"
										},
										{
											"begin": 4949,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "205"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5107,
											"end": 5110,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "121"
										},
										{
											"begin": 5070,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "tag",
											"source": 21,
											"value": "205"
										},
										{
											"begin": 5070,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 4789,
											"end": 5130,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 4705,
											"end": 5130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "tag",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5206,
											"end": 5211,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5258,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5236,
											"end": 5253,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5232,
											"end": 5259,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "207"
										},
										{
											"begin": 5222,
											"end": 5344,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "208"
										},
										{
											"begin": 5263,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "115"
										},
										{
											"begin": 5263,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5263,
											"end": 5342,
											"name": "tag",
											"source": 21,
											"value": "208"
										},
										{
											"begin": 5263,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5222,
											"end": 5344,
											"name": "tag",
											"source": 21,
											"value": "207"
										},
										{
											"begin": 5222,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5405,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "209"
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5453,
											"end": 5470,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5405,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "122"
										},
										{
											"begin": 5405,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5405,
											"end": 5484,
											"name": "tag",
											"source": 21,
											"value": "209"
										},
										{
											"begin": 5405,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5396,
											"end": 5484,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5396,
											"end": 5484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5212,
											"end": 5490,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5150,
											"end": 5490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "tag",
											"source": 21,
											"value": "23"
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5606,
											"end": 5629,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 5602,
											"end": 5634,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 5637,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "tag",
											"source": 21,
											"value": "212"
										},
										{
											"begin": 5637,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "tag",
											"source": 21,
											"value": "211"
										},
										{
											"begin": 5599,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5785,
											"end": 5786,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5783,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 5770,
											"end": 5787,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5757,
											"end": 5788,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 5804,
											"end": 5834,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 5801,
											"end": 5918,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 5801,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 5801,
											"end": 5918,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "100"
										},
										{
											"begin": 5837,
											"end": 5916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "tag",
											"source": 21,
											"value": "214"
										},
										{
											"begin": 5837,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5801,
											"end": 5918,
											"name": "tag",
											"source": 21,
											"value": "213"
										},
										{
											"begin": 5801,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 5997,
											"end": 6004,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 5973,
											"end": 5995,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "123"
										},
										{
											"begin": 5942,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "tag",
											"source": 21,
											"value": "215"
										},
										{
											"begin": 5942,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 5932,
											"end": 6005,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5932,
											"end": 6005,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5728,
											"end": 6015,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 6125,
											"end": 6132,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 6116,
											"end": 6122,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6105,
											"end": 6114,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 6101,
											"end": 6123,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "103"
										},
										{
											"begin": 6080,
											"end": 6133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "tag",
											"source": 21,
											"value": "216"
										},
										{
											"begin": 6080,
											"end": 6133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6070,
											"end": 6133,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6070,
											"end": 6133,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6025,
											"end": 6143,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 5496,
											"end": 6150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "tag",
											"source": 21,
											"value": "29"
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6300,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 6368,
											"end": 6369,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6366,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6353,
											"end": 6370,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6300,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "107"
										},
										{
											"begin": 6300,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6300,
											"end": 6371,
											"name": "tag",
											"source": 21,
											"value": "218"
										},
										{
											"begin": 6300,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6156,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "tag",
											"source": 21,
											"value": "34"
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6477,
											"end": 6481,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6517,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6500,
											"end": 6518,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6492,
											"end": 6518,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6492,
											"end": 6518,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 6581,
											"end": 6598,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 6528,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "tag",
											"source": 21,
											"value": "220"
										},
										{
											"begin": 6528,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6384,
											"end": 6606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6612,
											"end": 6734,
											"name": "tag",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 6612,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6685,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 6703,
											"end": 6708,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6685,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "106"
										},
										{
											"begin": 6685,
											"end": 6709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6685,
											"end": 6709,
											"name": "tag",
											"source": 21,
											"value": "222"
										},
										{
											"begin": 6685,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6675,
											"end": 6710,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "tag",
											"source": 21,
											"value": "223"
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6612,
											"end": 6734,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6612,
											"end": 6734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "tag",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6786,
											"end": 6791,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6811,
											"end": 6831,
											"name": "CALLDATALOAD",
											"source": 21
										},
										{
											"begin": 6802,
											"end": 6831,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 6802,
											"end": 6831,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6840,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 6840,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "124"
										},
										{
											"begin": 6840,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6840,
											"end": 6873,
											"name": "tag",
											"source": 21,
											"value": "225"
										},
										{
											"begin": 6840,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6740,
											"end": 6879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "tag",
											"source": 21,
											"value": "41"
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 6968,
											"end": 6991,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 6964,
											"end": 6996,
											"name": "SLT",
											"source": 21
										},
										{
											"begin": 6961,
											"end": 7080,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 6961,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 6961,
											"end": 7080,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 6999,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 6999,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "99"
										},
										{
											"begin": 6999,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 6999,
											"end": 7078,
											"name": "tag",
											"source": 21,
											"value": "228"
										},
										{
											"begin": 6999,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 6961,
											"end": 7080,
											"name": "tag",
											"source": 21,
											"value": "227"
										},
										{
											"begin": 6961,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 7189,
											"end": 7196,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7169,
											"end": 7178,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 7165,
											"end": 7187,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "125"
										},
										{
											"begin": 7144,
											"end": 7197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "tag",
											"source": 21,
											"value": "229"
										},
										{
											"begin": 7144,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7134,
											"end": 7197,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7134,
											"end": 7197,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7090,
											"end": 7207,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 6885,
											"end": 7214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7220,
											"end": 7400,
											"name": "tag",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 7220,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7268,
											"end": 7345,
											"name": "PUSH",
											"source": 21,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7346,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7365,
											"end": 7369,
											"name": "PUSH",
											"source": 21,
											"value": "22"
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "PUSH",
											"source": 21,
											"value": "4"
										},
										{
											"begin": 7355,
											"end": 7370,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "PUSH",
											"source": 21,
											"value": "24"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7394,
											"name": "REVERT",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7726,
											"name": "tag",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 7406,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7477,
											"end": 7489,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7534,
											"end": 7535,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7524,
											"end": 7536,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 7545,
											"end": 7626,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7611,
											"end": 7615,
											"name": "PUSH",
											"source": 21,
											"value": "7F"
										},
										{
											"begin": 7603,
											"end": 7609,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7599,
											"end": 7616,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7589,
											"end": 7616,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7545,
											"end": 7626,
											"name": "tag",
											"source": 21,
											"value": "232"
										},
										{
											"begin": 7545,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7673,
											"end": 7675,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7665,
											"end": 7671,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 7642,
											"end": 7660,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7639,
											"end": 7677,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 7636,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 7636,
											"end": 7720,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "126"
										},
										{
											"begin": 7692,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "tag",
											"source": 21,
											"value": "234"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7636,
											"end": 7720,
											"name": "tag",
											"source": 21,
											"value": "233"
										},
										{
											"begin": 7636,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7457,
											"end": 7726,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7726,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7726,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7726,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7406,
											"end": 7726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7732,
											"end": 7873,
											"name": "tag",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 7732,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7807,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 7807,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7796,
											"end": 7807,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7827,
											"end": 7830,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 7824,
											"end": 7825,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7831,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7866,
											"name": "KECCAK256",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7866,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7840,
											"end": 7866,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7732,
											"end": 7873,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7732,
											"end": 7873,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7732,
											"end": 7873,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7732,
											"end": 7873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7879,
											"end": 7972,
											"name": "tag",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 7879,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 7916,
											"end": 7922,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7965,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 7951,
											"end": 7956,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 7947,
											"end": 7961,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 7943,
											"end": 7966,
											"name": "DIV",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 7966,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7933,
											"end": 7966,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7879,
											"end": 7972,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7879,
											"end": 7972,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 7879,
											"end": 7972,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7879,
											"end": 7972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "tag",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8022,
											"end": 8030,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8062,
											"end": 8078,
											"name": "SHL",
											"source": 21
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8041,
											"end": 8078,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 7978,
											"end": 8085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "tag",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8211,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 8198,
											"end": 8208,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 8233,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 8263,
											"end": 8329,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8233,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 8233,
											"end": 8330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8233,
											"end": 8330,
											"name": "tag",
											"source": 21,
											"value": "239"
										},
										{
											"begin": 8233,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8351,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 8381,
											"end": 8389,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8370,
											"end": 8379,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8351,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "129"
										},
										{
											"begin": 8351,
											"end": 8390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8351,
											"end": 8390,
											"name": "tag",
											"source": 21,
											"value": "240"
										},
										{
											"begin": 8351,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8339,
											"end": 8390,
											"name": "SWAP6",
											"source": 21
										},
										{
											"begin": 8339,
											"end": 8390,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8423,
											"end": 8427,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 8412,
											"end": 8417,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8408,
											"end": 8429,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8472,
											"end": 8476,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 8462,
											"end": 8470,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 8458,
											"end": 8477,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 8451,
											"end": 8456,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8448,
											"end": 8478,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 8438,
											"end": 8478,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8438,
											"end": 8478,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8167,
											"end": 8484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8167,
											"end": 8484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8091,
											"end": 8484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8490,
											"end": 8550,
											"name": "tag",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 8490,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8544,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8490,
											"end": 8550,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8490,
											"end": 8550,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8490,
											"end": 8550,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8490,
											"end": 8550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8698,
											"name": "tag",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 8556,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 8657,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "244"
										},
										{
											"begin": 8666,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 8684,
											"end": 8689,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8666,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 8666,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8666,
											"end": 8690,
											"name": "tag",
											"source": 21,
											"value": "245"
										},
										{
											"begin": 8666,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8657,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "131"
										},
										{
											"begin": 8657,
											"end": 8691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8657,
											"end": 8691,
											"name": "tag",
											"source": 21,
											"value": "244"
										},
										{
											"begin": 8657,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "101"
										},
										{
											"begin": 8639,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "tag",
											"source": 21,
											"value": "243"
										},
										{
											"begin": 8639,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8626,
											"end": 8692,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8626,
											"end": 8692,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8698,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8698,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8698,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8556,
											"end": 8698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "tag",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8747,
											"end": 8750,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 8768,
											"end": 8773,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8704,
											"end": 8779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "tag",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8895,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 8926,
											"end": 8933,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 8895,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "132"
										},
										{
											"begin": 8895,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8895,
											"end": 8934,
											"name": "tag",
											"source": 21,
											"value": "248"
										},
										{
											"begin": 8895,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8956,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 9005,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 9029,
											"end": 9045,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9005,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "133"
										},
										{
											"begin": 9005,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9005,
											"end": 9046,
											"name": "tag",
											"source": 21,
											"value": "250"
										},
										{
											"begin": 9005,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 8984,
											"end": 8995,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 8956,
											"end": 9047,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "130"
										},
										{
											"begin": 8956,
											"end": 9047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 8956,
											"end": 9047,
											"name": "tag",
											"source": 21,
											"value": "249"
										},
										{
											"begin": 8956,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 8943,
											"end": 9048,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 8861,
											"end": 9054,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8785,
											"end": 9054,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 8785,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9060,
											"end": 9133,
											"name": "tag",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 9060,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9060,
											"end": 9133,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9060,
											"end": 9133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9139,
											"end": 9328,
											"name": "tag",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 9139,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9216,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "253"
										},
										{
											"begin": 9216,
											"end": 9248,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "135"
										},
										{
											"begin": 9216,
											"end": 9248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9216,
											"end": 9248,
											"name": "tag",
											"source": 21,
											"value": "253"
										},
										{
											"begin": 9216,
											"end": 9248,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9257,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 9315,
											"end": 9321,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9301,
											"end": 9305,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9257,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "134"
										},
										{
											"begin": 9257,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9257,
											"end": 9322,
											"name": "tag",
											"source": 21,
											"value": "254"
										},
										{
											"begin": 9257,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9192,
											"end": 9328,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9139,
											"end": 9328,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9139,
											"end": 9328,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9139,
											"end": 9328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9334,
											"end": 9520,
											"name": "tag",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 9334,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "tag",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9411,
											"end": 9414,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9404,
											"end": 9409,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9401,
											"end": 9415,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "259"
										},
										{
											"begin": 9502,
											"end": 9503,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9500,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "136"
										},
										{
											"begin": 9465,
											"end": 9504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "tag",
											"source": 21,
											"value": "259"
										},
										{
											"begin": 9465,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9438,
											"end": 9439,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 9431,
											"end": 9436,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9427,
											"end": 9440,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9418,
											"end": 9440,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9418,
											"end": 9440,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "256"
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "tag",
											"source": 21,
											"value": "258"
										},
										{
											"begin": 9394,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9334,
											"end": 9520,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9334,
											"end": 9520,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9334,
											"end": 9520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 10069,
											"name": "tag",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 9526,
											"end": 10069,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9619,
											"end": 9630,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 9616,
											"end": 10062,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9616,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "261"
										},
										{
											"begin": 9616,
											"end": 10062,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9661,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 9693,
											"end": 9698,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9661,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 9661,
											"end": 9699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9661,
											"end": 9699,
											"name": "tag",
											"source": 21,
											"value": "262"
										},
										{
											"begin": 9661,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9745,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 9763,
											"end": 9773,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 9745,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 9745,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9745,
											"end": 9774,
											"name": "tag",
											"source": 21,
											"value": "263"
										},
										{
											"begin": 9745,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9735,
											"end": 9743,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9731,
											"end": 9775,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 9928,
											"end": 9930,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 9916,
											"end": 9926,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 9910,
											"end": 9959,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 9910,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 9910,
											"end": 9959,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 9949,
											"end": 9957,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 9934,
											"end": 9957,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 9934,
											"end": 9957,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9910,
											"end": 9959,
											"name": "tag",
											"source": 21,
											"value": "264"
										},
										{
											"begin": 9910,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9972,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 10046,
											"end": 10049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "128"
										},
										{
											"begin": 10028,
											"end": 10050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "tag",
											"source": 21,
											"value": "266"
										},
										{
											"begin": 10028,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10018,
											"end": 10026,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10014,
											"end": 10051,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 10001,
											"end": 10012,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 9972,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "137"
										},
										{
											"begin": 9972,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 9972,
											"end": 10052,
											"name": "tag",
											"source": 21,
											"value": "265"
										},
										{
											"begin": 9972,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9631,
											"end": 10062,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9631,
											"end": 10062,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9616,
											"end": 10062,
											"name": "tag",
											"source": 21,
											"value": "261"
										},
										{
											"begin": 9616,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 10069,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 10069,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 10069,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 9526,
											"end": 10069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "tag",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10129,
											"end": 10137,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10184,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10173,
											"end": 10177,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10169,
											"end": 10185,
											"name": "SHR",
											"source": 21
										},
										{
											"begin": 10148,
											"end": 10185,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10148,
											"end": 10185,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10075,
											"end": 10192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "tag",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10242,
											"end": 10248,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 10323,
											"end": 10324,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10325,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 10311,
											"end": 10316,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 10308,
											"end": 10309,
											"name": "PUSH",
											"source": 21,
											"value": "8"
										},
										{
											"begin": 10304,
											"end": 10317,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 10275,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "139"
										},
										{
											"begin": 10275,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10275,
											"end": 10326,
											"name": "tag",
											"source": 21,
											"value": "269"
										},
										{
											"begin": 10275,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10271,
											"end": 10327,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 10356,
											"end": 10360,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 10350,
											"end": 10354,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10346,
											"end": 10361,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 10336,
											"end": 10361,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10336,
											"end": 10361,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10249,
											"end": 10367,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10198,
											"end": 10367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "tag",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10448,
											"end": 10452,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 10619,
											"end": 10622,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10613,
											"end": 10617,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 10594,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 10594,
											"end": 10623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10594,
											"end": 10623,
											"name": "tag",
											"source": 21,
											"value": "271"
										},
										{
											"begin": 10594,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10586,
											"end": 10623,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10586,
											"end": 10623,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10656,
											"end": 10659,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 10649,
											"end": 10660,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10640,
											"end": 10661,
											"name": "OR",
											"source": 21
										},
										{
											"begin": 10632,
											"end": 10661,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 10632,
											"end": 10661,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10372,
											"end": 10667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10672,
											"end": 12067,
											"name": "tag",
											"source": 21,
											"value": "64"
										},
										{
											"begin": 10672,
											"end": 12067,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10789,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 10822,
											"end": 10825,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10789,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "108"
										},
										{
											"begin": 10789,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10789,
											"end": 10826,
											"name": "tag",
											"source": 21,
											"value": "273"
										},
										{
											"begin": 10789,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH",
											"source": 21,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10883,
											"end": 10889,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 10880,
											"end": 10910,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 10877,
											"end": 10933,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 10877,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 10877,
											"end": 10933,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "117"
										},
										{
											"begin": 10913,
											"end": 10931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "tag",
											"source": 21,
											"value": "275"
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10877,
											"end": 10933,
											"name": "tag",
											"source": 21,
											"value": "274"
										},
										{
											"begin": 10877,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 10989,
											"end": 10993,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 10983,
											"end": 10994,
											"name": "SLOAD",
											"source": 21
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "45"
										},
										{
											"begin": 10957,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "tag",
											"source": 21,
											"value": "276"
										},
										{
											"begin": 10957,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11042,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "277"
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11094,
											"end": 11100,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11042,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "138"
										},
										{
											"begin": 11042,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11042,
											"end": 11109,
											"name": "tag",
											"source": 21,
											"value": "277"
										},
										{
											"begin": 11042,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11164,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11147,
											"end": 11164,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11147,
											"end": 11164,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11192,
											"end": 11194,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 11184,
											"end": 11190,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11181,
											"end": 11195,
											"name": "GT",
											"source": 21
										},
										{
											"begin": 11209,
											"end": 11210,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11883,
											"end": 11889,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11880,
											"end": 11957,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11880,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 11880,
											"end": 11957,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11932,
											"end": 11941,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11927,
											"end": 11930,
											"name": "DUP8",
											"source": 21
										},
										{
											"begin": 11923,
											"end": 11942,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11917,
											"end": 11943,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11908,
											"end": 11943,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11908,
											"end": 11943,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11880,
											"end": 11957,
											"name": "tag",
											"source": 21,
											"value": "280"
										},
										{
											"begin": 11880,
											"end": 11957,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11983,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12036,
											"end": 12041,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11983,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "141"
										},
										{
											"begin": 11983,
											"end": 12050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11983,
											"end": 12050,
											"name": "tag",
											"source": 21,
											"value": "281"
										},
										{
											"begin": 11983,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11977,
											"end": 11981,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11970,
											"end": 12051,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 11839,
											"end": 12061,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11174,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 11174,
											"end": 12061,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "tag",
											"source": 21,
											"value": "279"
										},
										{
											"begin": 11204,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 11252,
											"end": 11261,
											"name": "NOT",
											"source": 21
										},
										{
											"begin": 11244,
											"end": 11250,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11240,
											"end": 11262,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 11322,
											"end": 11326,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "127"
										},
										{
											"begin": 11290,
											"end": 11327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "tag",
											"source": 21,
											"value": "282"
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11349,
											"end": 11350,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "tag",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11377,
											"end": 11384,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11371,
											"end": 11385,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11456,
											"end": 11465,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 11447,
											"end": 11466,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11441,
											"end": 11467,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11433,
											"end": 11439,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11426,
											"end": 11468,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 11499,
											"end": 11505,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11495,
											"end": 11509,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11485,
											"end": 11509,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 11485,
											"end": 11509,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11554,
											"end": 11556,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11543,
											"end": 11552,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 11539,
											"end": 11557,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11526,
											"end": 11557,
											"name": "SWAP5",
											"source": 21
										},
										{
											"begin": 11526,
											"end": 11557,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11400,
											"end": 11404,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 11397,
											"end": 11398,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 11393,
											"end": 11405,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11388,
											"end": 11405,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 11388,
											"end": 11405,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "283"
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "tag",
											"source": 21,
											"value": "285"
										},
										{
											"begin": 11363,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11599,
											"end": 11605,
											"name": "DUP7",
											"source": 21
										},
										{
											"begin": 11590,
											"end": 11597,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11587,
											"end": 11606,
											"name": "LT",
											"source": 21
										},
										{
											"begin": 11584,
											"end": 11763,
											"name": "ISZERO",
											"source": 21
										},
										{
											"begin": 11584,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "286"
										},
										{
											"begin": 11584,
											"end": 11763,
											"name": "JUMPI",
											"source": 21
										},
										{
											"begin": 11657,
											"end": 11666,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 11652,
											"end": 11655,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 11648,
											"end": 11667,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11642,
											"end": 11668,
											"name": "MLOAD",
											"source": 21
										},
										{
											"begin": 11700,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "287"
										},
										{
											"begin": 11742,
											"end": 11746,
											"name": "PUSH",
											"source": 21,
											"value": "1F"
										},
										{
											"begin": 11734,
											"end": 11740,
											"name": "DUP10",
											"source": 21
										},
										{
											"begin": 11730,
											"end": 11747,
											"name": "AND",
											"source": 21
										},
										{
											"begin": 11719,
											"end": 11728,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 11700,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "140"
										},
										{
											"begin": 11700,
											"end": 11748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 11700,
											"end": 11748,
											"name": "tag",
											"source": 21,
											"value": "287"
										},
										{
											"begin": 11700,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11692,
											"end": 11698,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 11685,
											"end": 11749,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 11607,
											"end": 11763,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11584,
											"end": 11763,
											"name": "tag",
											"source": 21,
											"value": "286"
										},
										{
											"begin": 11584,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11809,
											"end": 11810,
											"name": "PUSH",
											"source": 21,
											"value": "1"
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 21,
											"value": "2"
										},
										{
											"begin": 11797,
											"end": 11803,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 11793,
											"end": 11807,
											"name": "MUL",
											"source": 21
										},
										{
											"begin": 11789,
											"end": 11811,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 11783,
											"end": 11787,
											"name": "DUP9",
											"source": 21
										},
										{
											"begin": 11776,
											"end": 11812,
											"name": "SSTORE",
											"source": 21
										},
										{
											"begin": 11211,
											"end": 11822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11211,
											"end": 11822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11211,
											"end": 11822,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 11174,
											"end": 12061,
											"name": "tag",
											"source": 21,
											"value": "278"
										},
										{
											"begin": 11174,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 11174,
											"end": 12061,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10764,
											"end": 12067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10764,
											"end": 12067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10764,
											"end": 12067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10672,
											"end": 12067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10672,
											"end": 12067,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 10672,
											"end": 12067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "tag",
											"source": 21,
											"value": "66"
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12214,
											"end": 12218,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 12241,
											"end": 12250,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12229,
											"end": 12255,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12301,
											"end": 12310,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12295,
											"end": 12299,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12291,
											"end": 12311,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 12287,
											"end": 12288,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12285,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12272,
											"end": 12289,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12265,
											"end": 12312,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12329,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "289"
										},
										{
											"begin": 12402,
											"end": 12406,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 12393,
											"end": 12399,
											"name": "DUP6",
											"source": 21
										},
										{
											"begin": 12329,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "112"
										},
										{
											"begin": 12329,
											"end": 12407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12329,
											"end": 12407,
											"name": "tag",
											"source": 21,
											"value": "289"
										},
										{
											"begin": 12329,
											"end": 12407,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12321,
											"end": 12407,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12321,
											"end": 12407,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 12485,
											"end": 12487,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 12474,
											"end": 12483,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12470,
											"end": 12488,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12461,
											"end": 12467,
											"name": "DUP5",
											"source": 21
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "104"
										},
										{
											"begin": 12417,
											"end": 12489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "tag",
											"source": 21,
											"value": "290"
										},
										{
											"begin": 12417,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "SWAP4",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "SWAP3",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12073,
											"end": 12496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12502,
											"end": 12669,
											"name": "tag",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 12502,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12642,
											"end": 12661,
											"name": "PUSH",
											"source": 21,
											"value": "4974656D20616C726561647920736F6C64000000000000000000000000000000"
										},
										{
											"begin": 12638,
											"end": 12639,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12626,
											"end": 12640,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 12619,
											"end": 12662,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 12502,
											"end": 12669,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12502,
											"end": 12669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 13041,
											"name": "tag",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 12675,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12817,
											"end": 12820,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 12838,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 12902,
											"end": 12904,
											"name": "PUSH",
											"source": 21,
											"value": "11"
										},
										{
											"begin": 12897,
											"end": 12900,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 12838,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 12838,
											"end": 12905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12838,
											"end": 12905,
											"name": "tag",
											"source": 21,
											"value": "293"
										},
										{
											"begin": 12838,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 12831,
											"end": 12905,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12831,
											"end": 12905,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12914,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 13003,
											"end": 13006,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 12914,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "142"
										},
										{
											"begin": 12914,
											"end": 13007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 12914,
											"end": 13007,
											"name": "tag",
											"source": 21,
											"value": "294"
										},
										{
											"begin": 12914,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13032,
											"end": 13034,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13027,
											"end": 13030,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13023,
											"end": 13035,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13016,
											"end": 13035,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13016,
											"end": 13035,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 13041,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 13041,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 13041,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 12675,
											"end": 13041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13047,
											"end": 13466,
											"name": "tag",
											"source": 21,
											"value": "73"
										},
										{
											"begin": 13047,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13213,
											"end": 13217,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13251,
											"end": 13253,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13249,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13236,
											"end": 13254,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13228,
											"end": 13254,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13228,
											"end": 13254,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13300,
											"end": 13309,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13294,
											"end": 13298,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13290,
											"end": 13310,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 13286,
											"end": 13287,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13275,
											"end": 13284,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13271,
											"end": 13288,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13264,
											"end": 13311,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13328,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 13454,
											"end": 13458,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 13328,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "143"
										},
										{
											"begin": 13328,
											"end": 13459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13328,
											"end": 13459,
											"name": "tag",
											"source": 21,
											"value": "296"
										},
										{
											"begin": 13328,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13320,
											"end": 13459,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13047,
											"end": 13466,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13047,
											"end": 13466,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13047,
											"end": 13466,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13047,
											"end": 13466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13640,
											"name": "tag",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 13472,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13612,
											"end": 13632,
											"name": "PUSH",
											"source": 21,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 13608,
											"end": 13609,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13606,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13596,
											"end": 13610,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13589,
											"end": 13633,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13640,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13472,
											"end": 13640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13646,
											"end": 14012,
											"name": "tag",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 13646,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13788,
											"end": 13791,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 13873,
											"end": 13875,
											"name": "PUSH",
											"source": 21,
											"value": "12"
										},
										{
											"begin": 13868,
											"end": 13871,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 13809,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "109"
										},
										{
											"begin": 13809,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13809,
											"end": 13876,
											"name": "tag",
											"source": 21,
											"value": "299"
										},
										{
											"begin": 13809,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 13802,
											"end": 13876,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13802,
											"end": 13876,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13885,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 13974,
											"end": 13977,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13885,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "144"
										},
										{
											"begin": 13885,
											"end": 13978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 13885,
											"end": 13978,
											"name": "tag",
											"source": 21,
											"value": "300"
										},
										{
											"begin": 13885,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14003,
											"end": 14005,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 13998,
											"end": 14001,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 13994,
											"end": 14006,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 13987,
											"end": 14006,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13987,
											"end": 14006,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13646,
											"end": 14012,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 13646,
											"end": 14012,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 13646,
											"end": 14012,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 13646,
											"end": 14012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14437,
											"name": "tag",
											"source": 21,
											"value": "76"
										},
										{
											"begin": 14018,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14184,
											"end": 14188,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14222,
											"end": 14224,
											"name": "PUSH",
											"source": 21,
											"value": "20"
										},
										{
											"begin": 14211,
											"end": 14220,
											"name": "DUP3",
											"source": 21
										},
										{
											"begin": 14207,
											"end": 14225,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14199,
											"end": 14225,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14199,
											"end": 14225,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14271,
											"end": 14280,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14265,
											"end": 14269,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14261,
											"end": 14281,
											"name": "SUB",
											"source": 21
										},
										{
											"begin": 14257,
											"end": 14258,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 14246,
											"end": 14255,
											"name": "DUP4",
											"source": 21
										},
										{
											"begin": 14242,
											"end": 14259,
											"name": "ADD",
											"source": 21
										},
										{
											"begin": 14235,
											"end": 14282,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 14299,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 14425,
											"end": 14429,
											"name": "DUP2",
											"source": 21
										},
										{
											"begin": 14299,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 21,
											"value": "145"
										},
										{
											"begin": 14299,
											"end": 14430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 21
										},
										{
											"begin": 14299,
											"end": 14430,
											"name": "tag",
											"source": 21,
											"value": "302"
										},
										{
											"begin": 14299,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 21
										},
										{
											"begin": 14291,
											"end": 14430,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14291,
											"end": 14430,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14437,
											"name": "SWAP2",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14437,
											"name": "SWAP1",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14437,
											"name": "POP",
											"source": 21
										},
										{
											"begin": 14018,
											"end": 14437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 21
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/nft.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyItem(uint256)": "e7fb74c7",
							"createItem(string,uint256)": "8c551742",
							"getItem(uint256)": "3129e773",
							"getItemsSold()": "c4b15141",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItemsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nft.sol\":\"NFTMarketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/nft.sol\":{\"keccak256\":\"0xdae6314d1dd8c0c406c732c19d0c50fe04ad4627160d37e4659ce66c1203badd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30130305fc8cb3740e46c2f9da89cee34a406f064066d9e40231ddeddaf494bd\",\"dweb:/ipfs/QmWEarmHeZM5eiuNw8U59eXw3mVsC9gPwTVoq14yy661fx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/nft.sol:NFTMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5681,
								"contract": "contracts/nft.sol:NFTMarketplace",
								"label": "_itemIds",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1675_storage"
							},
							{
								"astId": 5684,
								"contract": "contracts/nft.sol:NFTMarketplace",
								"label": "_itemsSold",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1675_storage"
							},
							{
								"astId": 5700,
								"contract": "contracts/nft.sol:NFTMarketplace",
								"label": "_items",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(NFTItem)5695_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(NFTItem)5695_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarketplace.NFTItem)",
								"numberOfBytes": "32",
								"value": "t_struct(NFTItem)5695_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1675_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1674,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFTItem)5695_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarketplace.NFTItem",
								"members": [
									{
										"astId": 5686,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5688,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "creator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 5690,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "uri",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 5692,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 5694,
										"contract": "contracts/nft.sol:NFTMarketplace",
										"label": "sold",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1669
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1670,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1669,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1669
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1651,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2151
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2152,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2151
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1390
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1390,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2151,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1390,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title ERC-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1390,
								2151
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1289,
								1298,
								1307
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1390
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1391,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1390,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 317,
							"src": "280:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 317,
							"src": "2190:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 317,
							"src": "4430:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1669
						],
						"ERC165": [
							2139
						],
						"ERC721": [
							1273
						],
						"ERC721Utils": [
							1639
						],
						"IERC165": [
							2151
						],
						"IERC721": [
							1390
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1562
						],
						"Strings": [
							2115
						]
					},
					"id": 1274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 1391,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1390,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 1563,
							"src": "172:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1562,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
							"file": "./utils/ERC721Utils.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 1640,
							"src": "238:52:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "ERC721Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1639,
										"src": "246:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 1670,
							"src": "291:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "299:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 2116,
							"src": "340:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2115,
										"src": "348:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 2140,
							"src": "389:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "397:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2139,
										"src": "406:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1274,
							"sourceUnit": 317,
							"src": "459:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "467:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"803:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1669,
										"src": "803:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"812:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2139,
										"src": "812:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "812:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"820:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1390,
										"src": "820:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "820:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"829:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1562,
										"src": "829:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "829:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"846:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "846:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "846:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "527:247:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1273,
							"linearizedBaseContracts": [
								1273,
								269,
								1562,
								1390,
								2139,
								2151,
								1669
							],
							"name": "ERC721",
							"nameLocation": "793:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"872:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2115,
										"src": "872:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "866:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "931:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "916:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "916:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "978:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "963:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "963:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1036:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "992:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1008:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "992:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1092:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1050:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1066:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1075:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1152:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1108:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1124:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1135:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1242:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1273,
									"src": "1174:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1190:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1215:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1199:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1227:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1436:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1446:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1454:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1446:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1446:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1469:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1479:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1469:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1469:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1267:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1392:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1392:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1427:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1413:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1413:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:5"
									},
									"scope": 1273,
									"src": "1380:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2138,
										2150
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1668:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1697:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "1717:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1390_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1390_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1712:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1712:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1390",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1712:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1697:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1753:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "1773:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1562_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1562_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1768:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1562",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1790:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1768:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1753:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1697:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1841:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1817:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1273_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2138,
															"src": "1817:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1678:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1499:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1569:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1636:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2139,
												"src": "1636:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1644:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2151,
												"src": "1644:7:5"
											}
										],
										"src": "1627:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1594:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1587:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 1273,
									"src": "1560:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1315
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1991:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2005:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2014:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2014:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2005:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2001:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2026:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2066:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2066:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2047:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2040:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2104:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2114:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2104:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2097:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1866:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1928:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1946:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1938:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:5"
									},
									"scope": 1273,
									"src": "1919:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2256:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2287:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "2273:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2266:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2133:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2193:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2201:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2247:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:5"
									},
									"scope": 1273,
									"src": "2184:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1547
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2424:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2441:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2434:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2308:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2373:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2409:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2409:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:15:5"
									},
									"scope": 1273,
									"src": "2364:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1553
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2579:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2589:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2459:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2526:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2564:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:5"
									},
									"scope": 1273,
									"src": "2517:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1561
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2755:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2779:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "2765:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2765:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2812:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2798:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2798:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2822:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2822:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2855:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2849:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2849:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2849:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2864:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2849:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2849:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2922:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2849:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2891:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2900:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2908:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1863,
																	"src": "2900:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2877:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2842:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2616:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2685:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2702:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2694:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2740:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:5"
									},
									"scope": 1273,
									"src": "2676:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3239:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3249:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2937:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3182:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3224:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3224:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:15:5"
									},
									"scope": 1273,
									"src": "3173:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1363
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3383:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3402:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "3415:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1140,
															1206
														],
														"referencedDeclaration": 1140,
														"src": "3393:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3393:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3271:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3331:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3359:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3351:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:5"
									},
									"scope": 1273,
									"src": "3322:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1379
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3572:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3582:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3582:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3635:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3622:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3615:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3441:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3505:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3517:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3563:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:9:5"
									},
									"scope": 1273,
									"src": "3496:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1371
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3792:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "3821:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3835:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3845:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "3802:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3802:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3656:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3726:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3752:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3744:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3767:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3762:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3762:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:5"
									},
									"scope": 1273,
									"src": "3717:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1389
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4021:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4038:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4057:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4064:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4038:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4031:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3867:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3936:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3976:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3968:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4015:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4015:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:6:5"
									},
									"scope": 1273,
									"src": "3927:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4222:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4236:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4242:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4242:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4236:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4232:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4254:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4305:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4297:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4297:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4297:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4275:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4268:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4545:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4537:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4537:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4569:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4573:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "4582:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "4561:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4609:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4626:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4609:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4605:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4632:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4674:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4680:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4689:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4653:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4653:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4646:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4086:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4151:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4164:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4186:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4178:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4198:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4190:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:5"
									},
									"scope": 1273,
									"src": "4142:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1345
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4862:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4889:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4895:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4899:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															681
														],
														"referencedDeclaration": 681,
														"src": "4872:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4726:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4795:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4820:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4812:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4826:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4862:0:5"
									},
									"scope": 1273,
									"src": "4786:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "5087:130:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5110:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5116:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5120:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5097:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5097:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5097:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 672,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "5172:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5172:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5186:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5192:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5196:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5205:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 669,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "5138:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1639_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5150:21:5",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "5138:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5138:72:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4924:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4993:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5018:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "5010:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "5024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "5036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5066:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "5053:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5053:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:0:5"
									},
									"scope": 1273,
									"src": "4984:233:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "5807:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 689,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5824:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 691,
													"indexExpression": {
														"id": 690,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "5832:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5824:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 688,
												"id": 692,
												"nodeType": "Return",
												"src": "5817:23:5"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "5223:504:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5741:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "5750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:17:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "5798:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:9:5"
									},
									"scope": 1273,
									"src": "5732:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6042:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 702,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6059:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 704,
													"indexExpression": {
														"id": 703,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "6075:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6059:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 701,
												"id": 705,
												"nodeType": "Return",
												"src": "6052:31:5"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "5853:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5972:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5984:17:5"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6033:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6033:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:9:5"
									},
									"scope": 1273,
									"src": "5963:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "6510:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 719,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6558:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6550:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 720,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6550:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6550:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6539:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 725,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "6577:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 726,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "6586:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6577:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 729,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6614:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 730,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 728,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6597:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6597:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6577:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 734,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 714,
																				"src": "6646:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 733,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "6633:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6633:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 736,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "6658:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6633:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6577:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 739,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6576:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6539:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 718,
												"id": 741,
												"nodeType": "Return",
												"src": "6520:146:5"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6096:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6410:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6432:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6424:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6424:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6447:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6439:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6464:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6456:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6423:49:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "6504:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6504:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:6:5"
									},
									"scope": 1273,
									"src": "6401:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "7202:271:5",
										"statements": [
											{
												"condition": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7216:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 754,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7231:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 755,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "7238:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 756,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "7247:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 753,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "7217:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7217:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "7212:255:5",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "7257:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 759,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "7275:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7292:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7284:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 760,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7284:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7284:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7275:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 775,
																"nodeType": "Block",
																"src": "7373:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 771,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "7425:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 772,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 750,
																					"src": "7434:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 770,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7398:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7398:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 774,
																		"nodeType": "RevertStatement",
																		"src": "7391:51:5"
																	}
																]
															},
															"id": 776,
															"nodeType": "IfStatement",
															"src": "7271:186:5",
															"trueBody": {
																"id": 769,
																"nodeType": "Block",
																"src": "7296:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 766,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 750,
																					"src": "7344:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 765,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7321:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7321:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 768,
																		"nodeType": "RevertStatement",
																		"src": "7314:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "6679:421:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7114:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7139:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7131:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7154:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7146:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7171:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7163:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7163:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7130:49:5"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7202:0:5"
									},
									"scope": 1273,
									"src": "7105:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "8190:78:5",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "8200:62:5",
												"statements": [
													{
														"expression": {
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 788,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8224:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 790,
																"indexExpression": {
																	"id": 789,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "8234:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8224:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 791,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "8246:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8224:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 793,
														"nodeType": "ExpressionStatement",
														"src": "8224:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "7479:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8124:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "8141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8166:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "8158:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 784,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8140:32:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8190:0:5"
									},
									"scope": 1273,
									"src": "8115:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "8956:700:5",
										"statements": [
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8974:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "8966:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8966:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "8990:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 810,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "8981:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8981:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8966:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 814,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "9058:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9074:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9066:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 815,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9066:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9066:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9058:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "9054:86:5",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "9078:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 821,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "9109:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 822,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "9115:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "9121:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 820,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "9092:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9092:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "9092:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "9184:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9200:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9192:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 829,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9192:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9192:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9184:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "9180:256:5",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "9204:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9317:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9309:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9309:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9309:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 839,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "9321:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9338:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9330:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 840,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9330:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9330:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 834,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1140,
																		1206
																	],
																	"referencedDeclaration": 1206,
																	"src": "9300:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9300:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 846,
															"nodeType": "ExpressionStatement",
															"src": "9300:48:5"
														},
														{
															"id": 853,
															"nodeType": "UncheckedBlock",
															"src": "9363:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 847,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9391:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 849,
																			"indexExpression": {
																				"id": 848,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "9401:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9391:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9410:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9391:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "9391:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9450:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9464:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9456:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 857,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9456:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9456:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9450:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "9446:107:5",
												"trueBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "9468:85:5",
													"statements": [
														{
															"id": 868,
															"nodeType": "UncheckedBlock",
															"src": "9482:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 862,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9510:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 864,
																			"indexExpression": {
																				"id": 863,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "9520:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9510:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9527:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9510:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "9510:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 871,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9563:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 873,
														"indexExpression": {
															"id": 872,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "9571:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9563:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9582:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9563:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "9563:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "9609:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9615:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "9619:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "9600:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9600:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "9595:32:5"
											},
											{
												"expression": {
													"id": 883,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "9645:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 807,
												"id": 884,
												"nodeType": "Return",
												"src": "9638:11:5"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "8274:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8870:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8886:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8878:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8878:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8898:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8890:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8915:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8907:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8877:43:5"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "8947:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8947:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8946:9:5"
									},
									"scope": 1273,
									"src": "8861:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "10031:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "10045:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10059:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10051:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10051:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10051:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10045:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "10041:87:5",
												"trueBody": {
													"id": 907,
													"nodeType": "Block",
													"src": "10063:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10114:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10106:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 901,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10106:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10106:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 900,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10084:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10084:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 906,
															"nodeType": "RevertStatement",
															"src": "10077:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10145:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "10137:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 909,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10137:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [
														{
															"id": 912,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "10169:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "10173:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10190:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10182:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 914,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10182:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10182:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 911,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "10161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10161:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10137:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "10207:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10232:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10224:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 921,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10224:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10224:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10207:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "10203:96:5",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "10236:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10277:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 927,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10277:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10277:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 926,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10257:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10257:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 932,
															"nodeType": "RevertStatement",
															"src": "10250:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "9662:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9987:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10001:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9993:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10013:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "10005:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9992:29:5"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10031:0:5"
									},
									"scope": 1273,
									"src": "9978:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "10713:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "10733:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "10737:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10746:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 944,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															951,
															981
														],
														"referencedDeclaration": 981,
														"src": "10723:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10723:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "10723:26:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "10311:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10665:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10683:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "10675:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10695:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "10687:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10674:29:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10713:0:5"
									},
									"scope": 1273,
									"src": "10656:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "11061:123:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11077:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "11081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "11071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11071:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "11071:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 969,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "11133:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11133:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11155:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11147:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 971,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11147:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11147:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11159:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "11163:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 977,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "11172:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 966,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "11099:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1639_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11111:21:5",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "11099:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11099:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "11099:78:5"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "10762:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10986:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11004:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10996:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11016:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "11008:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11038:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "11025:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 957,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11025:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10995:48:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11061:0:5"
									},
									"scope": 1273,
									"src": "10977:207:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "11551:186:5",
										"statements": [
											{
												"assignments": [
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11569:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "11561:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 987,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11561:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11593:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11593:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11593:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "11605:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11622:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11614:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 995,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11614:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11614:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 989,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "11585:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11585:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11561:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "11639:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11664:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11656:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1002,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11656:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11656:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11639:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "11635:96:5",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "11668:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "11712:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1007,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11689:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11689:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "11682:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "11190:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11519:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11533:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "11525:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11525:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11524:17:5"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11551:0:5"
									},
									"scope": 1273,
									"src": "11510:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "12132:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "12146:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12160:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12152:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12152:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12152:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12146:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "12142:87:5",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "12164:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12215:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12207:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12207:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12207:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12185:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12185:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "12178:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12246:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1073,
														"src": "12238:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1039,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12238:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"arguments": [
														{
															"id": 1042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "12270:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "12274:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12291:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12283:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12283:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12283:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1041,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "12262:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12262:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12238:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1050,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "12308:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12333:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12325:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1051,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12325:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12325:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12308:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1061,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "12410:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1062,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "12427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12410:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1071,
													"nodeType": "IfStatement",
													"src": "12406:109:5",
													"trueBody": {
														"id": 1070,
														"nodeType": "Block",
														"src": "12433:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1065,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "12475:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1066,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "12481:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1067,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1040,
																			"src": "12490:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1064,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12454:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12454:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1069,
																"nodeType": "RevertStatement",
																"src": "12447:57:5"
															}
														]
													}
												},
												"id": 1072,
												"nodeType": "IfStatement",
												"src": "12304:211:5",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "12337:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "12381:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1056,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12358:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12358:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1059,
															"nodeType": "RevertStatement",
															"src": "12351:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "11743:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12070:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12088:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12080:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12102:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12094:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12094:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12114:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "12106:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12106:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12079:43:5"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:5"
									},
									"scope": 1273,
									"src": "12061:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "13530:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "13554:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "13560:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "13564:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13573:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1084,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1092,
															1122
														],
														"referencedDeclaration": 1122,
														"src": "13540:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13540:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "13540:36:5"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "12527:923:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13464:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13486:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "13478:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13478:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13500:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "13492:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13512:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "13504:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13504:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13477:43:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13530:0:5"
									},
									"scope": 1273,
									"src": "13455:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "13922:127:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "13942:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "13948:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "13952:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "13932:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13932:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "13932:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1113,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "14004:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14004:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "14018:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "14024:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "14028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1118,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "14037:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1110,
															"name": "ERC721Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "13970:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Utils_$1639_$",
																"typeString": "type(library ERC721Utils)"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13982:21:5",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1638,
														"src": "13970:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13970:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "13970:72:5"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "13589:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13851:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "13843:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13843:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13865:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "13857:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13857:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13877:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "13869:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13899:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "13886:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13886:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13842:62:5"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13922:0:5"
									},
									"scope": 1273,
									"src": "13820:229:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "14562:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "14581:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "14585:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1135,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "14594:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14600:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1132,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1140,
															1206
														],
														"referencedDeclaration": 1206,
														"src": "14572:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "14572:33:5"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "14055:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14501:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14518:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "14510:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14510:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14530:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "14522:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14522:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14547:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "14539:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14539:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14509:43:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14562:0:5"
									},
									"scope": 1273,
									"src": "14492:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "14888:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "14954:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1153,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "14967:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14983:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14975:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14975:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14975:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14967:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14954:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"nodeType": "IfStatement",
												"src": "14950:460:5",
												"trueBody": {
													"id": 1197,
													"nodeType": "Block",
													"src": "14987:423:5",
													"statements": [
														{
															"assignments": [
																1161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1161,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15009:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1197,
																	"src": "15001:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1160,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15001:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1165,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1163,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "15031:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1162,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "15017:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15017:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15001:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1166,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "15167:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15183:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15175:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1167,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15175:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15175:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15167:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1172,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "15189:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1173,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "15198:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15189:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15167:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15206:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1177,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "15224:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1178,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "15231:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1176,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15207:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15207:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15167:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1187,
															"nodeType": "IfStatement",
															"src": "15163:142:5",
															"trueBody": {
																"id": 1186,
																"nodeType": "Block",
																"src": "15238:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1183,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "15285:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1182,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15263:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15263:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1185,
																		"nodeType": "RevertStatement",
																		"src": "15256:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1188,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "15323:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1196,
															"nodeType": "IfStatement",
															"src": "15319:81:5",
															"trueBody": {
																"id": 1195,
																"nodeType": "Block",
																"src": "15334:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1190,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "15366:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1191,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "15373:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1192,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "15377:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1189,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1298,
																				"src": "15357:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15357:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1194,
																		"nodeType": "EmitStatement",
																		"src": "15352:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1199,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15420:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "15436:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15420:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1202,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "15447:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15420:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "15420:29:5"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "14618:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14803:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14832:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14824:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14849:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14841:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14841:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14860:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14855:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14855:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14811:59:5"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14888:0:5"
									},
									"scope": 1273,
									"src": "14794:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "15758:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1216,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15772:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15792:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15784:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1217,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15784:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15784:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15772:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "15768:91:5",
												"trueBody": {
													"id": 1226,
													"nodeType": "Block",
													"src": "15796:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "15839:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1222,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15817:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15817:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1225,
															"nodeType": "RevertStatement",
															"src": "15810:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1228,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15868:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1231,
															"indexExpression": {
																"id": 1229,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "15887:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15868:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1232,
														"indexExpression": {
															"id": 1230,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15894:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15868:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1233,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "15906:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15868:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "15868:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1237,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "15944:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15951:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "15961:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1236,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "15929:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15929:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "EmitStatement",
												"src": "15924:46:5"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "15462:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15674:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "15693:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15716:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "15708:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15731:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "15726:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15726:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15692:48:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15758:0:5"
									},
									"scope": 1273,
									"src": "15665:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "16284:169:5",
										"statements": [
											{
												"assignments": [
													1252
												],
												"declarations": [
													{
														"constant": false,
														"id": 1252,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16302:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "16294:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1251,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16294:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"arguments": [
														{
															"id": 1254,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "16319:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1253,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "16310:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16310:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16294:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "16341:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16358:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16350:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16350:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16341:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "16337:88:5",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "16362:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "16406:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1263,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16383:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16383:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1266,
															"nodeType": "RevertStatement",
															"src": "16376:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1269,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1252,
													"src": "16441:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1270,
												"nodeType": "Return",
												"src": "16434:12:5"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "15983:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16221:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16243:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "16235:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16234:17:5"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "16275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16275:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16274:9:5"
									},
									"scope": 1273,
									"src": "16212:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1274,
							"src": "775:15680:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1289,
								1298,
								1307
							]
						}
					],
					"src": "107:16349:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2151
						],
						"IERC721": [
							1390
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1277,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 2152,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1276,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1279,
										"name": "IERC165",
										"nameLocations": [
											"288:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2151,
										"src": "288:7:6"
									},
									"id": 1280,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1278,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:6",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								2151
							],
							"name": "IERC721",
							"nameLocation": "277:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1289,
									"name": "Transfer",
									"nameLocation": "401:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "410:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "432:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "452:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:6"
									},
									"src": "395:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1298,
									"name": "Approval",
									"nameLocation": "588:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "597:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "620:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "646:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:6"
									},
									"src": "582:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1307,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "820:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "843:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "869:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:6"
									},
									"src": "799:85:6"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1028:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:6"
									},
									"scope": 1390,
									"src": "971:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1204:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:6"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "1244:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:6"
									},
									"scope": 1390,
									"src": "1187:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1861:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1875:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1904:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:6"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:6"
									},
									"scope": 1390,
									"src": "1835:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2691:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2703:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:6"
									},
									"scope": 1390,
									"src": "2651:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3495:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3509:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3521:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:6"
									},
									"scope": 1390,
									"src": "3473:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "4027:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "4039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:6"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:6"
									},
									"scope": 1390,
									"src": "4010:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "4418:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "4436:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:6"
									},
									"scope": 1390,
									"src": "4391:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4631:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:6"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "4671:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:6"
									},
									"scope": 1390,
									"src": "4610:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4864:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4879:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:6"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4920:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:6"
									},
									"scope": 1390,
									"src": "4838:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "267:4661:6",
							"usedErrors": [],
							"usedEvents": [
								1289,
								1298,
								1307
							]
						}
					],
					"src": "108:4821:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1408
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1393,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:7",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1408,
							"linearizedBaseContracts": [
								1408
							],
							"name": "IERC721Receiver",
							"nameLocation": "307:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "877:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "869:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "903:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "895:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "925:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "917:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "957:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "942:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "986:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:7"
									},
									"scope": 1408,
									"src": "834:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1409,
							"src": "297:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:881:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1273
						],
						"ERC721URIStorage": [
							1534
						],
						"IERC165": [
							2151
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2115
						]
					},
					"id": 1535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 1274,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1411,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1273,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 2116,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1413,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2115,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1415,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1417,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1420,
										"name": "IERC4906",
										"nameLocations": [
											"470:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "470:8:8"
									},
									"id": 1421,
									"nodeType": "InheritanceSpecifier",
									"src": "470:8:8"
								},
								{
									"baseName": {
										"id": 1422,
										"name": "ERC721",
										"nameLocations": [
											"480:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1273,
										"src": "480:6:8"
									},
									"id": 1423,
									"nodeType": "InheritanceSpecifier",
									"src": "480:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1419,
								"nodeType": "StructuredDocumentation",
								"src": "361:70:8",
								"text": " @dev ERC-721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1534,
							"linearizedBaseContracts": [
								1534,
								1273,
								269,
								1562,
								175,
								1390,
								2139,
								2151,
								1669
							],
							"name": "ERC721URIStorage",
							"nameLocation": "450:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1426,
									"libraryName": {
										"id": 1424,
										"name": "Strings",
										"nameLocations": [
											"499:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2115,
										"src": "499:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "493:26:8",
									"typeName": {
										"id": 1425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1432,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "731:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "707:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1427,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "707:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1430,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "761:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1429,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "754:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1428,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "754:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "754:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1436,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "861:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "818:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1435,
										"keyName": "tokenId",
										"keyNameLocation": "834:7:8",
										"keyType": {
											"id": 1433,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "818:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1434,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "845:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2150
									],
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "1046:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1447,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "1063:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1448,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "1078:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1063:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1452,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "1126:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1450,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1102:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1534_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1108:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1102:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1102:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1063:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1455,
												"nodeType": "Return",
												"src": "1056:82:8"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "878:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "947:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1443,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1441,
												"name": "ERC721",
												"nameLocations": [
													"1014:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1273,
												"src": "1014:6:8"
											},
											{
												"id": 1442,
												"name": "IERC165",
												"nameLocations": [
													"1022:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2151,
												"src": "1022:7:8"
											}
										],
										"src": "1005:25:8"
									},
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "972:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "965:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "965:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:20:8"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "1040:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:6:8"
									},
									"scope": 1534,
									"src": "938:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1299:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "1323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1466,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "1309:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1309:22:8"
											},
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1356:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "1342:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1470,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1342:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"baseExpression": {
														"id": 1472,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "1368:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1474,
													"indexExpression": {
														"id": 1473,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "1379:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1368:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1342:45:8"
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1411:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "1397:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1476,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1397:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1478,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1418:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1397:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1483,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "1507:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1501:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1481,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1501:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1501:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1513:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1501:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1501:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "IfStatement",
												"src": "1497:70:8",
												"trueBody": {
													"id": 1490,
													"nodeType": "Block",
													"src": "1526:41:8",
													"statements": [
														{
															"expression": {
																"id": 1488,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "1547:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1465,
															"id": 1489,
															"nodeType": "Return",
															"src": "1540:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1494,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "1672:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1666:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1492,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1666:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1666:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1683:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1666:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1692:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1666:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "1662:95:8",
												"trueBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "1695:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1502,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "1730:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "1736:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1716:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1499,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1716:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1723:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1716:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1716:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1465,
															"id": 1505,
															"nodeType": "Return",
															"src": "1709:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1510,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "1789:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1508,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1774:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1534_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1780:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1774:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1512,
												"nodeType": "Return",
												"src": "1767:30:8"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "1151:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1220:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1462,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1266:8:8"
									},
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1237:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1229:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:17:8"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1284:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1463,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:15:8"
									},
									"scope": 1534,
									"src": "1211:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "2004:86:8",
										"statements": [
											{
												"expression": {
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1522,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "2014:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1524,
														"indexExpression": {
															"id": 1523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2025:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2014:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1525,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "2036:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2014:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "2014:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1529,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2075:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2060:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "EmitStatement",
												"src": "2055:28:8"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "1810:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1932:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1953:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1945:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1976:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1962:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1962:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:42:8"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:8"
									},
									"scope": 1534,
									"src": "1923:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1535,
							"src": "432:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1289,
								1298,
								1307
							]
						}
					],
					"src": "128:1965:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1390
						],
						"IERC721Metadata": [
							1562
						]
					},
					"id": 1563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1538,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1391,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1537,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1390,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1540,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1390,
										"src": "357:7:9"
									},
									"id": 1541,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1539,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1562,
							"linearizedBaseContracts": [
								1562,
								1390,
								2151
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1562,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1562,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1562,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1563,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1289,
								1298,
								1307
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol",
					"exportedSymbols": {
						"ERC721Utils": [
							1639
						],
						"IERC721Errors": [
							269
						],
						"IERC721Receiver": [
							1408
						]
					},
					"id": 1640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 1566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 1409,
							"src": "144:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1565,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1408,
										"src": "152:15:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../interfaces/draft-IERC6093.sol",
							"id": 1568,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 317,
							"src": "200:69:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1567,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "208:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1569,
								"nodeType": "StructuredDocumentation",
								"src": "271:159:10",
								"text": " @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1639,
							"linearizedBaseContracts": [
								1639
							],
							"name": "ERC721Utils",
							"nameLocation": "439:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "1151:758:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1576,
																"src": "1165:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1168:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1165:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1173:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1165:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1182:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1165:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1636,
												"nodeType": "IfStatement",
												"src": "1161:742:10",
												"trueBody": {
													"id": 1635,
													"nodeType": "Block",
													"src": "1185:718:10",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1613,
																		"nodeType": "Block",
																		"src": "1295:214:10",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1604,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1600,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1598,
																						"src": "1317:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1601,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1408,
																								"src": "1327:15:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1408_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1602,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1343:16:10",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1407,
																							"src": "1327:32:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1603,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1360:8:10",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1327:41:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1317:51:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1612,
																				"nodeType": "IfStatement",
																				"src": "1313:182:10",
																				"trueBody": {
																					"id": 1611,
																					"nodeType": "Block",
																					"src": "1370:125:10",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1608,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1576,
																										"src": "1473:2:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1605,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 269,
																										"src": "1437:13:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$269_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1607,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1451:21:10",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 251,
																									"src": "1437:35:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1609,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1437:39:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1610,
																							"nodeType": "RevertStatement",
																							"src": "1430:46:10"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1614,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1599,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1598,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "1287:6:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1614,
																				"src": "1280:13:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1597,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1280:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1279:15:10"
																	},
																	"src": "1271:238:10"
																},
																{
																	"block": {
																		"id": 1632,
																		"nodeType": "Block",
																		"src": "1538:355:10",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1618,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1616,
																							"src": "1560:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1567:6:10",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1560:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1620,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1577:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "1560:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1630,
																					"nodeType": "Block",
																					"src": "1728:151:10",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "1775:86:10",
																								"nodeType": "YulBlock",
																								"src": "1775:86:10",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "1812:2:10",
																															"nodeType": "YulLiteral",
																															"src": "1812:2:10",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "1816:6:10",
																															"nodeType": "YulIdentifier",
																															"src": "1816:6:10"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "1808:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "1808:3:10"
																													},
																													"nativeSrc": "1808:15:10",
																													"nodeType": "YulFunctionCall",
																													"src": "1808:15:10"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "1831:6:10",
																															"nodeType": "YulIdentifier",
																															"src": "1831:6:10"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "1825:5:10",
																														"nodeType": "YulIdentifier",
																														"src": "1825:5:10"
																													},
																													"nativeSrc": "1825:13:10",
																													"nodeType": "YulFunctionCall",
																													"src": "1825:13:10"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "1801:6:10",
																												"nodeType": "YulIdentifier",
																												"src": "1801:6:10"
																											},
																											"nativeSrc": "1801:38:10",
																											"nodeType": "YulFunctionCall",
																											"src": "1801:38:10"
																										},
																										"nativeSrc": "1801:38:10",
																										"nodeType": "YulExpressionStatement",
																										"src": "1801:38:10"
																									}
																								]
																							},
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1616,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1816:6:10",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1616,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "1831:6:10",
																									"valueSize": 1
																								}
																							],
																							"flags": [
																								"memory-safe"
																							],
																							"id": 1629,
																							"nodeType": "InlineAssembly",
																							"src": "1750:111:10"
																						}
																					]
																				},
																				"id": 1631,
																				"nodeType": "IfStatement",
																				"src": "1556:323:10",
																				"trueBody": {
																					"id": 1628,
																					"nodeType": "Block",
																					"src": "1580:142:10",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1625,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1576,
																										"src": "1700:2:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1622,
																										"name": "IERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 269,
																										"src": "1664:13:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IERC721Errors_$269_$",
																											"typeString": "type(contract IERC721Errors)"
																										}
																									},
																									"id": 1624,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1678:21:10",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 251,
																									"src": "1664:35:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1626,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1664:39:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1627,
																							"nodeType": "RevertStatement",
																							"src": "1657:46:10"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1633,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1617,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1616,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "1530:6:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1633,
																				"src": "1517:19:10",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1615,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1517:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1516:21:10"
																	},
																	"src": "1510:383:10"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "1240:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "1250:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "1256:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1595,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1580,
																		"src": "1265:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1589,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1576,
																				"src": "1219:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1588,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "1203:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1408_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1203:19:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1408",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1223:16:10",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1407,
																	"src": "1203:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1203:67:10",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1634,
															"nodeType": "TryStatement",
															"src": "1199:694:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "457:523:10",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "994:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1033:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1025:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1059:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1051:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1081:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1073:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1101:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1093:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1131:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "1118:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1118:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:126:10"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:10"
									},
									"scope": 1639,
									"src": "985:924:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1640,
							"src": "431:1480:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1794:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1647,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1649,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1669,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1656,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1658,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1669,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1664,
												"id": 1666,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1669,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1670,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1743
						]
					},
					"id": 1744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1672,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1743,
							"linearizedBaseContracts": [
								1743
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1675,
									"members": [
										{
											"constant": false,
											"id": 1674,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1675,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1673,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 1743,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1683,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1674,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1685,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1676,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "844:7:12"
													},
													"referencedDeclaration": 1675,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 1743,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 1699,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1693,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1674,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1698,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1689,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1688,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "964:7:12"
													},
													"referencedDeclaration": 1675,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 1743,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1707,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"initialValue": {
													"expression": {
														"id": 1709,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1704,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1674,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 1727,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1719,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1674,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1726,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1702,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 1675,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 1743,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1735,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1674,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1730,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1675,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 1675,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 1743,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1744,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							1795
						]
					},
					"id": 1796,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1745,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1746,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:13",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1795,
							"linearizedBaseContracts": [
								1795
							],
							"name": "Panic",
							"nameLocation": "665:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:13",
										"text": "@dev generic / unspecified error"
									},
									"id": 1750,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "718:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 1749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:13",
										"text": "@dev used by the assert() builtin"
									},
									"id": 1754,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "806:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1752,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 1753,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:13",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 1758,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "897:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 1757,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:13",
										"text": "@dev division or modulo by zero"
									},
									"id": 1762,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "990:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 1761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:13",
										"text": "@dev enum conversion error"
									},
									"id": 1766,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1080:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1764,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 1765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:13",
										"text": "@dev invalid encoding in storage"
									},
									"id": 1770,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1181:55:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1768,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 1769,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:13",
										"text": "@dev empty array pop"
									},
									"id": 1774,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1271:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1772,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 1773,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:13",
										"text": "@dev array out of bounds access"
									},
									"id": 1778,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1365:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1776,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 1777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:13",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 1782,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1493:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1780,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 1781,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:13",
										"text": "@dev calling invalid internal function"
									},
									"id": 1786,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:13",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1593:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1784,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 1785,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "1819:151:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:13",
													"nodeType": "YulBlock",
													"src": "1854:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:13",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:13",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:13",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:13"
																},
																"nativeSrc": "1868:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:13"
															},
															"nativeSrc": "1868:24:13",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:13",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:13"
																},
																"nativeSrc": "1905:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:13"
															},
															"nativeSrc": "1905:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:13",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:13"
																},
																"nativeSrc": "1936:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:13"
															},
															"nativeSrc": "1936:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:13"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1789,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:13",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1792,
												"nodeType": "InlineAssembly",
												"src": "1829:135:13"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:13",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "1791:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:13"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:13"
									},
									"scope": 1795,
									"src": "1776:194:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1796,
							"src": "657:1315:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3757
						],
						"SignedMath": [
							5666
						],
						"Strings": [
							2115
						]
					},
					"id": 2116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1797,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1799,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2116,
							"sourceUnit": 3758,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1798,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3757,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2116,
							"sourceUnit": 5667,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1800,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5666,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1802,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2115,
							"linearizedBaseContracts": [
								2115
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1805,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2115,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1803,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1808,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2115,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1806,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1807,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1815,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "708:561:14",
										"statements": [
											{
												"id": 1861,
												"nodeType": "UncheckedBlock",
												"src": "718:545:14",
												"statements": [
													{
														"assignments": [
															1824
														],
														"declarations": [
															{
																"constant": false,
																"id": 1824,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1861,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1831,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1827,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1825,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3757,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3757_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3529,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															1833
														],
														"declarations": [
															{
																"constant": false,
																"id": 1833,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1861,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1832,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1838,
														"initialValue": {
															"arguments": [
																{
																	"id": 1836,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1824,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1834,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															1840
														],
														"declarations": [
															{
																"constant": false,
																"id": 1840,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 1861,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1839,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1841,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "899:67:14",
															"nodeType": "YulBlock",
															"src": "899:67:14",
															"statements": [
																{
																	"nativeSrc": "917:35:14",
																	"nodeType": "YulAssignment",
																	"src": "917:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "928:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "940:2:14",
																						"nodeType": "YulLiteral",
																						"src": "940:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "944:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "936:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:14"
																				},
																				"nativeSrc": "936:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "924:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:14"
																		},
																		"nativeSrc": "924:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "917:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1833,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1824,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1840,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:14",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1842,
														"nodeType": "InlineAssembly",
														"src": "874:92:14"
													},
													{
														"body": {
															"id": 1857,
															"nodeType": "Block",
															"src": "992:234:14",
															"statements": [
																{
																	"expression": {
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:14",
																		"subExpression": {
																			"id": 1844,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "1010:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1846,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1058:86:14",
																		"nodeType": "YulBlock",
																		"src": "1058:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1088:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1102:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1102:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1109:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1109:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1098:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1098:3:14"
																									},
																									"nativeSrc": "1098:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1098:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1114:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1114:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1093:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1093:4:14"
																							},
																							"nativeSrc": "1093:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1093:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1080:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1080:7:14"
																					},
																					"nativeSrc": "1080:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1080:46:14"
																				},
																				"nativeSrc": "1080:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1080:46:14"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1805,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1114:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1840,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1088:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1818,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1102:5:14",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 1847,
																	"nodeType": "InlineAssembly",
																	"src": "1033:111:14"
																},
																{
																	"expression": {
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "1161:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1170:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1161:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1851,
																	"nodeType": "ExpressionStatement",
																	"src": "1161:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1852,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "1194:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1194:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1856,
																	"nodeType": "IfStatement",
																	"src": "1190:21:14",
																	"trueBody": {
																		"id": 1855,
																		"nodeType": "Break",
																		"src": "1206:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1858,
														"nodeType": "WhileStatement",
														"src": "979:247:14"
													},
													{
														"expression": {
															"id": 1859,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "1246:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1822,
														"id": 1860,
														"nodeType": "Return",
														"src": "1239:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 2115,
									"src": "637:632:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "1445:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "1476:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1476:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1476:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "1522:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1881,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5666,
																			"src": "1507:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$5666_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1518:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5665,
																		"src": "1507:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1880,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1498:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1871,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1462:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1469:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1462:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1870,
												"id": 1887,
												"nodeType": "Return",
												"src": "1455:75:14"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "1275:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1378:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "1393:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1865,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:14"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "1430:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:15:14"
									},
									"scope": 2115,
									"src": "1369:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "1716:100:14",
										"statements": [
											{
												"id": 1907,
												"nodeType": "UncheckedBlock",
												"src": "1726:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "1769:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1901,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "1788:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1899,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3757,
																				"src": "1776:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3757_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1781:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3700,
																			"src": "1776:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1776:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1897,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1909,
																	1992,
																	2012
																],
																"referencedDeclaration": 1992,
																"src": "1757:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1896,
														"id": 1906,
														"nodeType": "Return",
														"src": "1750:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "1543:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1651:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1671:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "1663:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:14"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "1701:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:14"
									},
									"scope": 2115,
									"src": "1642:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "2029:435:14",
										"statements": [
											{
												"assignments": [
													1920
												],
												"declarations": [
													{
														"constant": false,
														"id": 1920,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2047:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1991,
														"src": "2039:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2039:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1922,
												"initialValue": {
													"id": 1921,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1912,
													"src": "2060:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2039:26:14"
											},
											{
												"assignments": [
													1924
												],
												"declarations": [
													{
														"constant": false,
														"id": 1924,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2088:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 1991,
														"src": "2075:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1923,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2075:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1933,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1928,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "2111:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2120:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2107:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2097:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1925,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2101:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:47:14"
											},
											{
												"expression": {
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1934,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "2132:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1936,
														"indexExpression": {
															"hexValue": "30",
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2132:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "2132:15:14"
											},
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1940,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "2157:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1942,
														"indexExpression": {
															"hexValue": "31",
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2164:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2157:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "2157:15:14"
											},
											{
												"body": {
													"id": 1974,
													"nodeType": "Block",
													"src": "2227:95:14",
													"statements": [
														{
															"expression": {
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1960,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "2241:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1962,
																	"indexExpression": {
																		"id": 1961,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "2248:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2241:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1963,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "2253:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1967,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1964,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "2264:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2277:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2264:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2253:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2241:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1969,
															"nodeType": "ExpressionStatement",
															"src": "2241:40:14"
														},
														{
															"expression": {
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1970,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "2295:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2310:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2295:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "2295:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1954,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "2215:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2215:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"initializationExpression": {
													"assignments": [
														1947
													],
													"declarations": [
														{
															"constant": false,
															"id": 1947,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2195:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 1975,
															"src": "2187:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1946,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1953,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1949,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "2203:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2199:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2187:26:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2222:3:14",
														"subExpression": {
															"id": 1957,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "2224:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1959,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2182:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1976,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "2335:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2335:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1985,
												"nodeType": "IfStatement",
												"src": "2331:96:14",
												"trueBody": {
													"id": 1984,
													"nodeType": "Block",
													"src": "2352:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1980,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "2402:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1981,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1914,
																		"src": "2409:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1979,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "2373:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1983,
															"nodeType": "RevertStatement",
															"src": "2366:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "2450:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2443:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1986,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2443:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1990,
												"nodeType": "Return",
												"src": "2436:21:14"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "1822:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1948:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1968:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1960:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1983:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1975:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:31:14"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2014:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1916,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:15:14"
									},
									"scope": 2115,
									"src": "1939:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "2696:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2005,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "2741:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2733:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2003,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2733:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2733:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2725:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2725:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2008,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "2749:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2000,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1909,
															1992,
															2012
														],
														"referencedDeclaration": 1992,
														"src": "2713:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2010,
												"nodeType": "Return",
												"src": "2706:58:14"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2632:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2652:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "2644:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:14:14"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "2681:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1997,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2681:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:15:14"
									},
									"scope": 2115,
									"src": "2623:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "3028:642:14",
										"statements": [
											{
												"assignments": [
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3051:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2076,
														"src": "3038:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3038:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2025,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "3078:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2024,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1909,
																	1992,
																	2012
																],
																"referencedDeclaration": 2012,
																"src": "3066:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:17:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3060:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2022,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3060:5:14",
															"typeDescriptions": {}
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:46:14"
											},
											{
												"assignments": [
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3177:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2076,
														"src": "3169:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3169:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:17:14"
											},
											{
												"AST": {
													"nativeSrc": "3221:78:14",
													"nodeType": "YulBlock",
													"src": "3221:78:14",
													"statements": [
														{
															"nativeSrc": "3235:54:14",
															"nodeType": "YulAssignment",
															"src": "3235:54:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:14",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3270:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3270:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3278:4:14",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:14"
																				},
																				"nativeSrc": "3266:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:17:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:14",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3256:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "3256:9:14"
																		},
																		"nativeSrc": "3256:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:32:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3248:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:14"
																},
																"nativeSrc": "3248:41:14",
																"nodeType": "YulFunctionCall",
																"src": "3248:41:14"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3235:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3235:9:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2021,
														"isOffset": false,
														"isSlot": false,
														"src": "3270:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:9:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2032,
												"nodeType": "InlineAssembly",
												"src": "3196:103:14"
											},
											{
												"body": {
													"id": 2069,
													"nodeType": "Block",
													"src": "3342:291:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2043,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2030,
																			"src": "3448:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3460:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3448:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3448:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 2050,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2021,
																					"src": "3477:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2052,
																				"indexExpression": {
																					"id": 2051,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2034,
																					"src": "3484:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3477:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 2049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3471:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 2048,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3471:5:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:16:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:2:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3471:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3448:44:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2064,
															"nodeType": "IfStatement",
															"src": "3444:150:14",
															"trueBody": {
																"id": 2063,
																"nodeType": "Block",
																"src": "3494:100:14",
																"statements": [
																	{
																		"expression": {
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2057,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2021,
																					"src": "3562:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2059,
																				"indexExpression": {
																					"id": 2058,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2034,
																					"src": "3569:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3562:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3575:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3562:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 2062,
																		"nodeType": "ExpressionStatement",
																		"src": "3562:17:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2065,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "3607:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3607:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2068,
															"nodeType": "ExpressionStatement",
															"src": "3607:15:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2037,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "3330:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3330:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2070,
												"initializationExpression": {
													"assignments": [
														2034
													],
													"declarations": [
														{
															"constant": false,
															"id": 2034,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3322:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2070,
															"src": "3314:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2033,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3314:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2036,
													"initialValue": {
														"hexValue": "3431",
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3326:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3314:14:14"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3337:3:14",
														"subExpression": {
															"id": 2040,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "3339:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2042,
													"nodeType": "ExpressionStatement",
													"src": "3337:3:14"
												},
												"nodeType": "ForStatement",
												"src": "3309:324:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2073,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "3656:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3649:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2071,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3649:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2019,
												"id": 2075,
												"nodeType": "Return",
												"src": "3642:21:14"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "2777:165:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "2956:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2984:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "2976:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:14:14"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "3013:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3013:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:15:14"
									},
									"scope": 2115,
									"src": "2947:723:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "3825:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2089,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2080,
																		"src": "3848:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3842:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2087,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3842:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3842:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2094,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "3867:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3861:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2092,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3861:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3861:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3861:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3842:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2101,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2080,
																			"src": "3896:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3890:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2099,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3890:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3890:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2098,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3880:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3880:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2107,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "3919:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3913:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2105,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3913:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3913:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2104,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3903:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3880:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3842:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2086,
												"id": 2112,
												"nodeType": "Return",
												"src": "3835:87:14"
											}
										]
									},
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "3676:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3756:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3776:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "3762:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3793:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "3779:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2081,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3779:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:34:14"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "3819:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:14"
									},
									"scope": 2115,
									"src": "3747:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2116,
							"src": "251:3680:14",
							"usedErrors": [
								1815
							],
							"usedEvents": []
						}
					],
					"src": "101:3831:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2139
						],
						"IERC165": [
							2151
						]
					},
					"id": 2140,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2140,
							"sourceUnit": 2152,
							"src": "140:38:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2118,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "148:7:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2121,
										"name": "IERC165",
										"nameLocations": [
											"688:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2151,
										"src": "688:7:15"
									},
									"id": 2122,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:15"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2120,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:15",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2139,
							"linearizedBaseContracts": [
								2139,
								2151
							],
							"name": "ERC165",
							"nameLocation": "678:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2150
									],
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "845:64:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2130,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "862:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2132,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "882:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2151_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2151_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2131,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2151",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2136,
												"nodeType": "Return",
												"src": "855:47:15"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:15",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "790:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2124,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:15"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "839:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:15"
									},
									"scope": 2139,
									"src": "763:146:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2140,
							"src": "660:251:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2151
						]
					},
					"id": 2152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2141,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2142,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:16",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2151,
							"linearizedBaseContracts": [
								2151
							],
							"name": "IERC165",
							"nameLocation": "432:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "818:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:16"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "861:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:16"
									},
									"scope": 2151,
									"src": "791:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2152,
							"src": "422:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3757
						],
						"Panic": [
							1795
						],
						"SafeCast": [
							5522
						]
					},
					"id": 3758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 2155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3758,
							"sourceUnit": 1796,
							"src": "129:35:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2154,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1795,
										"src": "137:5:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3758,
							"sourceUnit": 5523,
							"src": "165:40:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2156,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5522,
										"src": "173:8:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2158,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:17",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3757,
							"linearizedBaseContracts": [
								3757
							],
							"name": "Math",
							"nameLocation": "289:4:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 2163,
									"members": [
										{
											"id": 2159,
											"name": "Floor",
											"nameLocation": "324:5:17",
											"nodeType": "EnumValue",
											"src": "324:5:17"
										},
										{
											"id": 2160,
											"name": "Ceil",
											"nameLocation": "367:4:17",
											"nodeType": "EnumValue",
											"src": "367:4:17"
										},
										{
											"id": 2161,
											"name": "Trunc",
											"nameLocation": "409:5:17",
											"nodeType": "EnumValue",
											"src": "409:5:17"
										},
										{
											"id": 2162,
											"name": "Expand",
											"nameLocation": "439:6:17",
											"nodeType": "EnumValue",
											"src": "439:6:17"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:17",
									"nodeType": "EnumDefinition",
									"src": "300:169:17"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "677:140:17",
										"statements": [
											{
												"id": 2193,
												"nodeType": "UncheckedBlock",
												"src": "687:124:17",
												"statements": [
													{
														"assignments": [
															2176
														],
														"declarations": [
															{
																"constant": false,
																"id": 2176,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2193,
																"src": "711:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2180,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2177,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "723:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2178,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "727:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "746:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "750:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2188,
														"nodeType": "IfStatement",
														"src": "742:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2174,
															"id": 2187,
															"nodeType": "Return",
															"src": "753:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2190,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2176,
																	"src": "798:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2191,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2174,
														"id": 2192,
														"nodeType": "Return",
														"src": "784:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:17",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "602:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "613:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:17"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "647:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "661:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:17"
									},
									"scope": 3757,
									"src": "586:231:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2222,
										"nodeType": "Block",
										"src": "1028:113:17",
										"statements": [
											{
												"id": 2221,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "1066:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2208,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "1070:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2214,
														"nodeType": "IfStatement",
														"src": "1062:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2212,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2206,
															"id": 2213,
															"nodeType": "Return",
															"src": "1073:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2216,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "1118:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2217,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2200,
																		"src": "1122:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2206,
														"id": 2220,
														"nodeType": "Return",
														"src": "1104:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:17",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "953:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "964:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:17"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "998:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "1012:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:17"
									},
									"scope": 3757,
									"src": "937:204:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "1355:417:17",
										"statements": [
											{
												"id": 2263,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2235,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "1623:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2242,
														"nodeType": "IfStatement",
														"src": "1619:28:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2240,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2234,
															"id": 2241,
															"nodeType": "Return",
															"src": "1631:16:17"
														}
													},
													{
														"assignments": [
															2244
														],
														"declarations": [
															{
																"constant": false,
																"id": 2244,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2263,
																"src": "1661:9:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2243,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2248,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2245,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2226,
																"src": "1673:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2246,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "1677:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2249,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "1696:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2250,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2226,
																	"src": "1700:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2252,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "1705:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2258,
														"nodeType": "IfStatement",
														"src": "1692:33:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2234,
															"id": 2257,
															"nodeType": "Return",
															"src": "1708:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2260,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "1753:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2261,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2234,
														"id": 2262,
														"nodeType": "Return",
														"src": "1739:16:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2224,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:17",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1280:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1291:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:17"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1325:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "1339:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:17"
									},
									"scope": 3757,
									"src": "1264:508:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "1987:114:17",
										"statements": [
											{
												"id": 2291,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "2025:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2284,
														"nodeType": "IfStatement",
														"src": "2021:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2282,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2276,
															"id": 2283,
															"nodeType": "Return",
															"src": "2033:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2286,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "2078:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2287,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "2082:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2289,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2276,
														"id": 2290,
														"nodeType": "Return",
														"src": "2064:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:17",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1912:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1923:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:17"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1957:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1971:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:17"
									},
									"scope": 3757,
									"src": "1896:205:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "2326:114:17",
										"statements": [
											{
												"id": 2319,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "2364:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2312,
														"nodeType": "IfStatement",
														"src": "2360:29:17",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2304,
															"id": 2311,
															"nodeType": "Return",
															"src": "2372:17:17"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2314,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2296,
																		"src": "2417:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2315,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "2421:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2317,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2304,
														"id": 2318,
														"nodeType": "Return",
														"src": "2403:20:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:17",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "2251:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "2262:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:17"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "2296:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "2310:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:17"
									},
									"scope": 3757,
									"src": "2235:205:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "2912:207:17",
										"statements": [
											{
												"id": 2346,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:17",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "3060:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2336,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2334,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2326,
																						"src": "3066:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 2335,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2328,
																						"src": "3070:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2337,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2340,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2324,
																					"src": "3091:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 2338,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5522,
																					"src": "3075:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 2339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:17",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5521,
																				"src": "3075:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2332,
														"id": 2345,
														"nodeType": "Return",
														"src": "3053:49:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:17",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2842:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2858:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2869:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:17"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "2903:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:17"
									},
									"scope": 3757,
									"src": "2825:294:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "3256:44:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2359,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "3281:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2360,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "3285:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2362,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "3288:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2363,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "3291:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2358,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "3273:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2365,
												"nodeType": "Return",
												"src": "3266:27:17"
											}
										]
									},
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:17",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3202:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3213:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:17"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3247:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:17"
									},
									"scope": 3757,
									"src": "3189:111:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "3438:44:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "3463:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2372,
																"src": "3467:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "3470:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2382,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "3473:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2377,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2348,
														"src": "3455:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2384,
												"nodeType": "Return",
												"src": "3448:27:17"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:17",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "3384:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "3395:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:17"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "3429:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:17"
									},
									"scope": 3757,
									"src": "3371:111:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "3666:82:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2396,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "3721:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2397,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "3725:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2399,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2400,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2389,
																		"src": "3731:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2401,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "3735:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2403,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2395,
												"id": 2407,
												"nodeType": "Return",
												"src": "3713:28:17"
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:17",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "3612:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "3623:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:17"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "3657:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:17"
									},
									"scope": 3757,
									"src": "3595:153:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "4040:633:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2419,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2414,
														"src": "4054:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2430,
												"nodeType": "IfStatement",
												"src": "4050:150:17",
												"trueBody": {
													"id": 2429,
													"nodeType": "Block",
													"src": "4062:138:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2425,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "4166:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:17",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1762,
																		"src": "4166:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2422,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "4154:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:17",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1794,
																	"src": "4154:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2428,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:17"
														}
													]
												}
											},
											{
												"id": 2448,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:17",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2433,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "4630:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2431,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "4614:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "4614:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2437,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2412,
																							"src": "4641:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2438,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2440,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2441,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2414,
																				"src": "4650:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2445,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2418,
														"id": 2447,
														"nodeType": "Return",
														"src": "4607:49:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2410,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:17",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "3986:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "3997:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:17"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "4031:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:17"
									},
									"scope": 3757,
									"src": "3969:704:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "5094:4128:17",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:17",
												"statements": [
													{
														"assignments": [
															2463
														],
														"declarations": [
															{
																"constant": false,
																"id": 2463,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "5433:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2462,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2467,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2464,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "5449:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2465,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2455,
																"src": "5453:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:17"
													},
													{
														"assignments": [
															2469
														],
														"declarations": [
															{
																"constant": false,
																"id": 2469,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:17",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "5513:13:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2468,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2470,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:17"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:17",
															"nodeType": "YulBlock",
															"src": "5593:122:17",
															"statements": [
																{
																	"nativeSrc": "5611:30:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:17",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:17"
																				},
																				"nativeSrc": "5634:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:17"
																		},
																		"nativeSrc": "5621:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:17"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:17",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:17",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:17"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:17"
																				},
																				"nativeSrc": "5671:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:17"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:17"
																				},
																				"nativeSrc": "5687:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:17"
																		},
																		"nativeSrc": "5667:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2469,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2453,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2455,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:17",
																"valueSize": 1
															}
														],
														"id": 2471,
														"nodeType": "InlineAssembly",
														"src": "5584:131:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2472,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "5796:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "5792:368:17",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "5808:352:17",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2475,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2463,
																			"src": "6126:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2476,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "6134:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2461,
																	"id": 2478,
																	"nodeType": "Return",
																	"src": "6119:26:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2481,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2457,
																"src": "6270:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2482,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "6285:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2499,
														"nodeType": "IfStatement",
														"src": "6266:143:17",
														"trueBody": {
															"id": 2498,
															"nodeType": "Block",
															"src": "6292:117:17",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2488,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2457,
																							"src": "6330:11:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2489,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 2491,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1795,
																							"src": "6348:5:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:17",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1762,
																						"src": "6348:22:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 2493,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1795,
																							"src": "6372:5:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 2494,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:17",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1758,
																						"src": "6372:20:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2487,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2348,
																					"src": "6322:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2484,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1795,
																				"src": "6310:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:17",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1794,
																			"src": "6310:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2497,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:17"
																}
															]
														}
													},
													{
														"assignments": [
															2501
														],
														"declarations": [
															{
																"constant": false,
																"id": 2501,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "6664:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2500,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2502,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:17"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:17",
															"nodeType": "YulBlock",
															"src": "6704:291:17",
															"statements": [
																{
																	"nativeSrc": "6773:38:17",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:17"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:17"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:17"
																		},
																		"nativeSrc": "6786:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:17"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:17",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:17",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:17"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:17"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:17"
																				},
																				"nativeSrc": "6913:20:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:17"
																		},
																		"nativeSrc": "6902:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:17",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:17"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:17"
																		},
																		"nativeSrc": "6960:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2457,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2469,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2469,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2501,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2501,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2501,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:17",
																"valueSize": 1
															},
															{
																"declaration": 2453,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:17",
																"valueSize": 1
															},
															{
																"declaration": 2455,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:17",
																"valueSize": 1
															}
														],
														"id": 2503,
														"nodeType": "InlineAssembly",
														"src": "6695:300:17"
													},
													{
														"assignments": [
															2505
														],
														"declarations": [
															{
																"constant": false,
																"id": 2505,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:17",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "7199:12:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2512,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2506,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2457,
																"src": "7214:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2508,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "7233:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:17"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:17",
															"nodeType": "YulBlock",
															"src": "7268:366:17",
															"statements": [
																{
																	"nativeSrc": "7333:37:17",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:17",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:17"
																		},
																		"nativeSrc": "7348:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:17"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:17",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:17"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:17",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:17",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:17"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:17"
																		},
																		"nativeSrc": "7446:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:17"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:17"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:17",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:17",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:17",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:17",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:17"
																						},
																						"nativeSrc": "7597:12:17",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:17"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:17"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:17"
																				},
																				"nativeSrc": "7593:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:17"
																		},
																		"nativeSrc": "7589:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:17"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:17",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:17"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2457,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2457,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2463,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:17",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:17",
																"valueSize": 1
															},
															{
																"declaration": 2505,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:17",
																"valueSize": 1
															}
														],
														"id": 2513,
														"nodeType": "InlineAssembly",
														"src": "7259:375:17"
													},
													{
														"expression": {
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2514,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2463,
																"src": "7700:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2469,
																	"src": "7709:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2516,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2505,
																	"src": "7717:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2519,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:17"
													},
													{
														"assignments": [
															2521
														],
														"declarations": [
															{
																"constant": false,
																"id": 2521,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:17",
																"nodeType": "VariableDeclaration",
																"scope": 2585,
																"src": "8056:15:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2528,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2523,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2457,
																			"src": "8079:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:17"
													},
													{
														"expression": {
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2529,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8312:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2531,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8327:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2532,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8341:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2536,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:17"
													},
													{
														"expression": {
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2537,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8382:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2539,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8397:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2540,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8411:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2544,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:17"
													},
													{
														"expression": {
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2545,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8454:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2547,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8469:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2548,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8483:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2552,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:17"
													},
													{
														"expression": {
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2553,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8525:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2555,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8540:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2556,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8554:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2560,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:17"
													},
													{
														"expression": {
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2561,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8598:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2563,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8613:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2564,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8627:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2568,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:17"
													},
													{
														"expression": {
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2569,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "8672:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2571,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2457,
																		"src": "8687:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2572,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "8701:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2576,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:17"
													},
													{
														"expression": {
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2577,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "9154:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2578,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "9163:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2579,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "9171:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2582,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:17"
													},
													{
														"expression": {
															"id": 2583,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "9199:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2461,
														"id": 2584,
														"nodeType": "Return",
														"src": "9192:13:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:17",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "5012:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "5023:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "5034:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:17"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "5078:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:17"
									},
									"scope": 3757,
									"src": "4996:4226:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2623,
										"nodeType": "Block",
										"src": "9461:128:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2603,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "9485:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2604,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2592,
																"src": "9488:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2605,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "9491:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2602,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2587,
																2624
															],
															"referencedDeclaration": 2587,
															"src": "9478:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2610,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2597,
																			"src": "9539:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$2163",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$2163",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 2609,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3756,
																		"src": "9522:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2163_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2613,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "9559:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2614,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2592,
																				"src": "9562:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2615,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2594,
																				"src": "9565:11:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2612,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2607,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5522,
																"src": "9506:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:17",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5521,
															"src": "9506:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2601,
												"id": 2622,
												"nodeType": "Return",
												"src": "9471:111:17"
											}
										]
									},
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:17",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "9367:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "9378:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "9389:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "9410:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2595,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "9410:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "9410:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:17"
									},
									"returnParameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "9452:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:17"
									},
									"scope": 3757,
									"src": "9351:238:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2720,
										"nodeType": "Block",
										"src": "10223:1849:17",
										"statements": [
											{
												"id": 2719,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2634,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "10261:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2639,
														"nodeType": "IfStatement",
														"src": "10257:20:17",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2633,
															"id": 2638,
															"nodeType": "Return",
															"src": "10269:8:17"
														}
													},
													{
														"assignments": [
															2641
														],
														"declarations": [
															{
																"constant": false,
																"id": 2641,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:17",
																"nodeType": "VariableDeclaration",
																"scope": 2719,
																"src": "10748:17:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2640,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2645,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2642,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2627,
																"src": "10768:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2643,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "10772:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:17"
													},
													{
														"assignments": [
															2647
														],
														"declarations": [
															{
																"constant": false,
																"id": 2647,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:17",
																"nodeType": "VariableDeclaration",
																"scope": 2719,
																"src": "10787:11:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2646,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2649,
														"initialValue": {
															"id": 2648,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "10801:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:17"
													},
													{
														"assignments": [
															2651
														],
														"declarations": [
															{
																"constant": false,
																"id": 2651,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2719,
																"src": "10938:8:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2650,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2653,
														"initialValue": {
															"hexValue": "30",
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:17"
													},
													{
														"assignments": [
															2655
														],
														"declarations": [
															{
																"constant": false,
																"id": 2655,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:17",
																"nodeType": "VariableDeclaration",
																"scope": 2719,
																"src": "10964:8:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2654,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2657,
														"initialValue": {
															"hexValue": "31",
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:17"
													},
													{
														"body": {
															"id": 2694,
															"nodeType": "Block",
															"src": "11014:882:17",
															"statements": [
																{
																	"assignments": [
																		2662
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2662,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:17",
																			"nodeType": "VariableDeclaration",
																			"scope": 2694,
																			"src": "11032:16:17",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2661,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2666,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2663,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2647,
																			"src": "11051:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2664,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2641,
																			"src": "11057:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:17"
																},
																{
																	"expression": {
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2667,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2647,
																					"src": "11086:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2668,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2641,
																					"src": "11091:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2669,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2670,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2641,
																					"src": "11191:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2675,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2671,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2647,
																						"src": "11436:3:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2672,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2641,
																							"src": "11442:9:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 2673,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2662,
																							"src": "11454:8:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2676,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2678,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:17"
																},
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 2679,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2651,
																					"src": "11500:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 2680,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2655,
																					"src": "11503:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2681,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 2682,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2655,
																					"src": "11585:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2683,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2651,
																						"src": "11839:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 2689,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2684,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2655,
																							"src": "11843:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2687,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2662,
																									"src": "11854:8:17",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2686,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 2685,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:17",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2688,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:17",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 2691,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:17"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2658,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "10998:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2695,
														"nodeType": "WhileStatement",
														"src": "10991:905:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2696,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "11914:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2701,
														"nodeType": "IfStatement",
														"src": "11910:22:17",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2633,
															"id": 2700,
															"nodeType": "Return",
															"src": "11924:8:17"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2703,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2651,
																		"src": "11983:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2706,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2629,
																		"src": "11990:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:17",
																				"subExpression": {
																					"id": 2709,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2651,
																					"src": "12003:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2707,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2715,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2651,
																			"src": "12015:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2713,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2702,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2348,
																"src": "11975:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2633,
														"id": 2718,
														"nodeType": "Return",
														"src": "11968:50:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2625,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:17",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 2721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "10169:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "10180:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:17"
									},
									"returnParameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2721,
												"src": "10214:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:17"
									},
									"scope": 3757,
									"src": "10153:1919:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "12672:82:17",
										"statements": [
											{
												"id": 2740,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2733,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2724,
																	"src": "12725:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2734,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2726,
																		"src": "12728:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2737,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "12735:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2731,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3757,
																	"src": "12713:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$3757_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:17",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2778,
																"src": "12713:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2730,
														"id": 2739,
														"nodeType": "Return",
														"src": "12706:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2722,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:17",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "12618:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "12629:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:17"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "12663:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:17"
									},
									"scope": 3757,
									"src": "12597:157:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2777,
										"nodeType": "Block",
										"src": "13524:174:17",
										"statements": [
											{
												"assignments": [
													2755,
													2757
												],
												"declarations": [
													{
														"constant": false,
														"id": 2755,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2777,
														"src": "13535:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2754,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2757,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2777,
														"src": "13549:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2763,
												"initialValue": {
													"arguments": [
														{
															"id": 2759,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "13577:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2760,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "13580:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2761,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "13583:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2758,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2802,
															2884
														],
														"referencedDeclaration": 2802,
														"src": "13567:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:17"
											},
											{
												"condition": {
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:17",
													"subExpression": {
														"id": 2764,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "13600:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2774,
												"nodeType": "IfStatement",
												"src": "13595:74:17",
												"trueBody": {
													"id": 2773,
													"nodeType": "Block",
													"src": "13609:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2769,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "13635:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:17",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1762,
																		"src": "13635:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2766,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "13623:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:17",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1794,
																	"src": "13623:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2772,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2775,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2757,
													"src": "13685:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2753,
												"id": 2776,
												"nodeType": "Return",
												"src": "13678:13:17"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:17",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 2778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "13459:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "13470:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "13481:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:17"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "13515:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:17"
									},
									"scope": 3757,
									"src": "13443:255:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "14552:1493:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2792,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "14566:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2799,
												"nodeType": "IfStatement",
												"src": "14562:29:17",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 2797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 2791,
													"id": 2798,
													"nodeType": "Return",
													"src": "14574:17:17"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:17",
													"nodeType": "YulBlock",
													"src": "14626:1413:17",
													"statements": [
														{
															"nativeSrc": "14640:22:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:17",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:17"
																},
																"nativeSrc": "14651:11:17",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:17"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:17",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:17"
																},
																"nativeSrc": "15563:17:17",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:17"
															},
															"nativeSrc": "15563:17:17",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:17"
																		},
																		"nativeSrc": "15600:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:17"
																},
																"nativeSrc": "15593:28:17",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:17"
															},
															"nativeSrc": "15593:28:17",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:17",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:17"
																		},
																		"nativeSrc": "15641:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:17"
																},
																"nativeSrc": "15634:28:17",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:17"
															},
															"nativeSrc": "15634:28:17",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:17",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:17"
																		},
																		"nativeSrc": "15682:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:17"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:17"
																},
																"nativeSrc": "15675:25:17",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:17"
															},
															"nativeSrc": "15675:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:17",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:17"
																		},
																		"nativeSrc": "15720:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:17"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:17"
																},
																"nativeSrc": "15713:25:17",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:17"
															},
															"nativeSrc": "15713:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:17",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:17"
																		},
																		"nativeSrc": "15758:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:17"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:17"
																},
																"nativeSrc": "15751:25:17",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:17"
															},
															"nativeSrc": "15751:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:17"
														},
														{
															"nativeSrc": "15938:57:17",
															"nodeType": "YulAssignment",
															"src": "15938:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:17"
																		},
																		"nativeSrc": "15960:5:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:17",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:17",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:17",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:17",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:17",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:17"
																},
																"nativeSrc": "15949:46:17",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:17"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:17"
																}
															]
														},
														{
															"nativeSrc": "16008:21:17",
															"nodeType": "YulAssignment",
															"src": "16008:21:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:17",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:17"
																},
																"nativeSrc": "16018:11:17",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:17"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2781,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:17",
														"valueSize": 1
													},
													{
														"declaration": 2783,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:17",
														"valueSize": 1
													},
													{
														"declaration": 2785,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:17",
														"valueSize": 1
													},
													{
														"declaration": 2790,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2788,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2800,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:17"
											}
										]
									},
									"documentation": {
										"id": 2779,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:17",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "14466:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "14477:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "14488:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:17"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "14522:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "14536:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:17"
									},
									"scope": 3757,
									"src": "14447:1598:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "16242:179:17",
										"statements": [
											{
												"assignments": [
													2815,
													2817
												],
												"declarations": [
													{
														"constant": false,
														"id": 2815,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2837,
														"src": "16253:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2814,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2817,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2837,
														"src": "16267:19:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2816,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2823,
												"initialValue": {
													"arguments": [
														{
															"id": 2819,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "16300:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2820,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "16303:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2821,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "16306:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2818,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2802,
															2884
														],
														"referencedDeclaration": 2884,
														"src": "16290:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:17"
											},
											{
												"condition": {
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:17",
													"subExpression": {
														"id": 2824,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2815,
														"src": "16323:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2834,
												"nodeType": "IfStatement",
												"src": "16318:74:17",
												"trueBody": {
													"id": 2833,
													"nodeType": "Block",
													"src": "16332:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2829,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1795,
																			"src": "16358:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:17",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1762,
																		"src": "16358:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2826,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "16346:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1795_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:17",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1794,
																	"src": "16346:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2832,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2835,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2817,
													"src": "16408:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2813,
												"id": 2836,
												"nodeType": "Return",
												"src": "16401:13:17"
											}
										]
									},
									"documentation": {
										"id": 2803,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:17",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "16157:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "16173:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "16189:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:17"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "16228:12:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:17"
									},
									"scope": 3757,
									"src": "16141:280:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2883,
										"nodeType": "Block",
										"src": "16675:771:17",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2853,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "16700:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2852,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "16689:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2862,
												"nodeType": "IfStatement",
												"src": "16685:47:17",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 2856,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2860,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 2851,
													"id": 2861,
													"nodeType": "Return",
													"src": "16704:28:17"
												}
											},
											{
												"assignments": [
													2864
												],
												"declarations": [
													{
														"constant": false,
														"id": 2864,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 2883,
														"src": "16743:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2867,
												"initialValue": {
													"expression": {
														"id": 2865,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "16758:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:17"
											},
											{
												"expression": {
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2868,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "16848:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2871,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2841,
																	"src": "16874:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2873,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2843,
																	"src": "16884:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2875,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2864,
																"src": "16894:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2876,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2841,
																"src": "16900:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2877,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2843,
																"src": "16903:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2878,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2845,
																"src": "16906:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2869,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:17",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:17"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:17",
													"nodeType": "YulBlock",
													"src": "16944:496:17",
													"statements": [
														{
															"nativeSrc": "16958:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:17"
																},
																"nativeSrc": "16973:17:17",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:17"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:17",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:17",
															"nodeType": "YulAssignment",
															"src": "17080:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:17"
																		},
																		"nativeSrc": "17102:5:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:17",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:17"
																		},
																		"nativeSrc": "17124:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:17"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:17"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:17"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:17",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:17"
																},
																"nativeSrc": "17091:62:17",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:17"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:17"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:17"
																},
																"nativeSrc": "17302:20:17",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:17"
															},
															"nativeSrc": "17302:20:17",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:17",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:17"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:17"
																		},
																		"nativeSrc": "17411:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:17"
																},
																"nativeSrc": "17398:32:17",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:17"
															},
															"nativeSrc": "17398:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:17"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2864,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:17",
														"valueSize": 1
													},
													{
														"declaration": 2864,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:17",
														"valueSize": 1
													},
													{
														"declaration": 2864,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:17",
														"valueSize": 1
													},
													{
														"declaration": 2850,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2850,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2850,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2848,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:17",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2882,
												"nodeType": "InlineAssembly",
												"src": "16919:521:17"
											}
										]
									},
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:17",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 2884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16548:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16572:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16596:14:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:17"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16640:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "16654:19:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:17"
									},
									"scope": 3757,
									"src": "16520:926:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "17601:176:17",
										"statements": [
											{
												"body": {
													"id": 2912,
													"nodeType": "Block",
													"src": "17658:92:17",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2903,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "17676:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2905,
																	"indexExpression": {
																		"id": 2904,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "17686:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2911,
															"nodeType": "IfStatement",
															"src": "17672:68:17",
															"trueBody": {
																"id": 2910,
																"nodeType": "Block",
																"src": "17695:45:17",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2891,
																		"id": 2909,
																		"nodeType": "Return",
																		"src": "17713:12:17"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2896,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "17631:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2897,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "17635:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:17",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2913,
												"initializationExpression": {
													"assignments": [
														2893
													],
													"declarations": [
														{
															"constant": false,
															"id": 2893,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 2913,
															"src": "17616:9:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2892,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2895,
													"initialValue": {
														"hexValue": "30",
														"id": 2894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:17",
														"subExpression": {
															"id": 2900,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "17655:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2902,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:17"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:17"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2891,
												"id": 2915,
												"nodeType": "Return",
												"src": "17759:11:17"
											}
										]
									},
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:17",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "17549:22:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:17"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "17595:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2889,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:17"
									},
									"scope": 3757,
									"src": "17529:248:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3135,
										"nodeType": "Block",
										"src": "18137:5124:17",
										"statements": [
											{
												"id": 3134,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2925,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2920,
																"src": "18241:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2931,
														"nodeType": "IfStatement",
														"src": "18237:53:17",
														"trueBody": {
															"id": 2930,
															"nodeType": "Block",
															"src": "18249:41:17",
															"statements": [
																{
																	"expression": {
																		"id": 2928,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "18274:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2924,
																	"id": 2929,
																	"nodeType": "Return",
																	"src": "18267:8:17"
																}
															]
														}
													},
													{
														"assignments": [
															2933
														],
														"declarations": [
															{
																"constant": false,
																"id": 2933,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:17",
																"nodeType": "VariableDeclaration",
																"scope": 3134,
																"src": "19217:10:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2935,
														"initialValue": {
															"id": 2934,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "19230:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:17"
													},
													{
														"assignments": [
															2937
														],
														"declarations": [
															{
																"constant": false,
																"id": 2937,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:17",
																"nodeType": "VariableDeclaration",
																"scope": 3134,
																"src": "19245:10:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2936,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2939,
														"initialValue": {
															"hexValue": "31",
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:17"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2940,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19278:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2944,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2955,
														"nodeType": "IfStatement",
														"src": "19274:92:17",
														"trueBody": {
															"id": 2954,
															"nodeType": "Block",
															"src": "19296:70:17",
															"statements": [
																{
																	"expression": {
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2946,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19314:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2949,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:17"
																},
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19342:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2956,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19383:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2960,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2971,
														"nodeType": "IfStatement",
														"src": "19379:90:17",
														"trueBody": {
															"id": 2970,
															"nodeType": "Block",
															"src": "19400:69:17",
															"statements": [
																{
																	"expression": {
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2962,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19418:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2965,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:17"
																},
																{
																	"expression": {
																		"id": 2968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2966,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19445:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2969,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2972,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19486:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2987,
														"nodeType": "IfStatement",
														"src": "19482:90:17",
														"trueBody": {
															"id": 2986,
															"nodeType": "Block",
															"src": "19503:69:17",
															"statements": [
																{
																	"expression": {
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2978,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19521:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2981,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:17"
																},
																{
																	"expression": {
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2982,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19548:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2985,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2988,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19589:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2992,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3003,
														"nodeType": "IfStatement",
														"src": "19585:89:17",
														"trueBody": {
															"id": 3002,
															"nodeType": "Block",
															"src": "19606:68:17",
															"statements": [
																{
																	"expression": {
																		"id": 2996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2994,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19624:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2997,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:17"
																},
																{
																	"expression": {
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2998,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19651:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3001,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3004,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19691:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 3008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3019,
														"nodeType": "IfStatement",
														"src": "19687:87:17",
														"trueBody": {
															"id": 3018,
															"nodeType": "Block",
															"src": "19707:67:17",
															"statements": [
																{
																	"expression": {
																		"id": 3012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3010,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19725:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3013,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:17"
																},
																{
																	"expression": {
																		"id": 3016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3014,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19751:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3017,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3020,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19791:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 3023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 3022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 3024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3035,
														"nodeType": "IfStatement",
														"src": "19787:87:17",
														"trueBody": {
															"id": 3034,
															"nodeType": "Block",
															"src": "19807:67:17",
															"statements": [
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "19825:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:17"
																},
																{
																	"expression": {
																		"id": 3032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3030,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19851:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3033,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3036,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2933,
																"src": "19891:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 3040,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3047,
														"nodeType": "IfStatement",
														"src": "19887:61:17",
														"trueBody": {
															"id": 3046,
															"nodeType": "Block",
															"src": "19907:41:17",
															"statements": [
																{
																	"expression": {
																		"id": 3044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3042,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "19925:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3045,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:17"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3048,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "20368:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 3049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3050,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "20378:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3052,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3056,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:17"
													},
													{
														"expression": {
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3057,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22273:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3058,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22279:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3059,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22284:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3060,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22288:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3063,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3067,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:17"
													},
													{
														"expression": {
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3068,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22382:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3069,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22388:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3070,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22393:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3071,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22397:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3074,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3078,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:17"
													},
													{
														"expression": {
															"id": 3088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3079,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22493:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3080,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22499:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3081,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22504:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3082,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22508:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3085,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3089,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:17"
													},
													{
														"expression": {
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3090,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22602:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3091,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22608:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3092,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22613:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3093,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22617:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3100,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:17"
													},
													{
														"expression": {
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3101,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22712:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3102,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22718:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3103,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22723:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3104,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22727:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3107,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3111,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:17"
													},
													{
														"expression": {
															"id": 3121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3112,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "22822:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3113,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "22828:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3114,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2920,
																					"src": "22833:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3115,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "22837:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3118,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3122,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3123,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "23211:2:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3126,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "23232:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3127,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2920,
																				"src": "23237:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3128,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "23241:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3124,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "23216:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "23216:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2924,
														"id": 3133,
														"nodeType": "Return",
														"src": "23204:40:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:17",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 3136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "18094:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:17"
									},
									"returnParameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "18128:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:17"
									},
									"scope": 3757,
									"src": "18080:5181:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "23434:171:17",
										"statements": [
											{
												"id": 3168,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:17",
												"statements": [
													{
														"assignments": [
															3148
														],
														"declarations": [
															{
																"constant": false,
																"id": 3148,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3168,
																"src": "23468:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3152,
														"initialValue": {
															"arguments": [
																{
																	"id": 3150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3139,
																	"src": "23490:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3149,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3136,
																	3170
																],
																"referencedDeclaration": 3136,
																"src": "23485:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "23513:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3157,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "23555:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3156,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3756,
																				"src": "23538:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2163_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3159,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3148,
																					"src": "23568:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3160,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3148,
																					"src": "23577:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3162,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "23586:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3154,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "23522:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "23522:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3146,
														"id": 3167,
														"nodeType": "Return",
														"src": "23506:82:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3137,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:17",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "23372:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "23383:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3140,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "23383:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "23383:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:17"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "23425:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:17"
									},
									"scope": 3757,
									"src": "23358:247:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3365,
										"nodeType": "Block",
										"src": "23796:981:17",
										"statements": [
											{
												"assignments": [
													3179
												],
												"declarations": [
													{
														"constant": false,
														"id": 3179,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3365,
														"src": "23806:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3181,
												"initialValue": {
													"hexValue": "30",
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:17"
											},
											{
												"assignments": [
													3183
												],
												"declarations": [
													{
														"constant": false,
														"id": 3183,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:17",
														"nodeType": "VariableDeclaration",
														"scope": 3365,
														"src": "23834:11:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3184,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:17"
											},
											{
												"id": 3362,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:17",
												"statements": [
													{
														"expression": {
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3185,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "23879:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 3186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3189,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "23907:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 3195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 3192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3190,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 3191,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 3193,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3187,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "23891:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "23891:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3200,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:17"
													},
													{
														"expression": {
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3201,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "23944:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3202,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "23954:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3204,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:17"
													},
													{
														"expression": {
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3205,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "23971:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3206,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "23981:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3208,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:17"
													},
													{
														"expression": {
															"id": 3223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3209,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "23999:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 3210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3213,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24026:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 3219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 3216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3214,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 3215,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 3217,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3211,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24010:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24010:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3224,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:17"
													},
													{
														"expression": {
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3225,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24062:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3226,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24072:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3228,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:17"
													},
													{
														"expression": {
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3229,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24089:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3230,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24099:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3232,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:17"
													},
													{
														"expression": {
															"id": 3247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3233,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24117:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3237,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24144:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 3243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 3240,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3238,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 3239,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 3241,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3235,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24128:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24128:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3248,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:17"
													},
													{
														"expression": {
															"id": 3251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3249,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24180:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3250,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24190:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3252,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:17"
													},
													{
														"expression": {
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24207:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3254,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24217:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3256,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:17"
													},
													{
														"expression": {
															"id": 3271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3257,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24235:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 3258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3261,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24262:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 3267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 3264,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3262,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 3263,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 3265,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3259,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24246:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24246:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3272,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:17"
													},
													{
														"expression": {
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3273,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24298:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3274,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24308:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3276,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:17"
													},
													{
														"expression": {
															"id": 3279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24325:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3278,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24335:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3280,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:17"
													},
													{
														"expression": {
															"id": 3295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3281,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24353:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 3282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3285,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24379:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 3291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 3288,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3286,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 3287,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 3289,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3283,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24363:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24363:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3296,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:17"
													},
													{
														"expression": {
															"id": 3299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24414:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3298,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24424:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3300,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:17"
													},
													{
														"expression": {
															"id": 3303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3301,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24441:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3302,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24451:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3304,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:17"
													},
													{
														"expression": {
															"id": 3319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3305,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24469:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 3306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3309,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24495:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 3315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 3312,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3310,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 3311,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 3313,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3314,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3307,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24479:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24479:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3320,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:17"
													},
													{
														"expression": {
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3321,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24530:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3322,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24540:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3324,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:17"
													},
													{
														"expression": {
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24557:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3326,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24567:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3328,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:17"
													},
													{
														"expression": {
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3329,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24585:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3333,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3173,
																				"src": "24611:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 3339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 3336,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 3334,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 3335,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 3337,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 3331,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5522,
																			"src": "24595:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 3332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:17",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5521,
																		"src": "24595:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 3341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3344,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:17"
													},
													{
														"expression": {
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3345,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "24646:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 3346,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24656:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3348,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:17"
													},
													{
														"expression": {
															"id": 3351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3349,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24673:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 3350,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "24683:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3352,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:17"
													},
													{
														"expression": {
															"id": 3360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3353,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "24701:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3173,
																			"src": "24727:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3354,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "24711:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "24711:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3361,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:17"
													}
												]
											},
											{
												"expression": {
													"id": 3363,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3179,
													"src": "24764:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3177,
												"id": 3364,
												"nodeType": "Return",
												"src": "24757:13:17"
											}
										]
									},
									"documentation": {
										"id": 3171,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:17",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "23749:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:17"
									},
									"returnParameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "23787:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:17"
									},
									"scope": 3757,
									"src": "23735:1042:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3399,
										"nodeType": "Block",
										"src": "25010:175:17",
										"statements": [
											{
												"id": 3398,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:17",
												"statements": [
													{
														"assignments": [
															3378
														],
														"declarations": [
															{
																"constant": false,
																"id": 3378,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3398,
																"src": "25044:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3377,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3382,
														"initialValue": {
															"arguments": [
																{
																	"id": 3380,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3369,
																	"src": "25066:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3379,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3366,
																	3400
																],
																"referencedDeclaration": 3366,
																"src": "25061:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3383,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "25093:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3387,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3372,
																					"src": "25135:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3386,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3756,
																				"src": "25118:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2163_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 3390,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3378,
																					"src": "25153:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3392,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3369,
																				"src": "25162:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3384,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "25102:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "25102:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3376,
														"id": 3397,
														"nodeType": "Return",
														"src": "25086:82:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3367,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:17",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "24944:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3372,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "24959:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3370,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "24959:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "24959:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:17"
									},
									"returnParameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "25001:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:17"
									},
									"scope": 3757,
									"src": "24930:255:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3528,
										"nodeType": "Block",
										"src": "25378:854:17",
										"statements": [
											{
												"assignments": [
													3409
												],
												"declarations": [
													{
														"constant": false,
														"id": 3409,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3528,
														"src": "25388:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3411,
												"initialValue": {
													"hexValue": "30",
													"id": 3410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:17"
											},
											{
												"id": 3525,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:17",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "25444:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3428,
														"nodeType": "IfStatement",
														"src": "25440:103:17",
														"trueBody": {
															"id": 3427,
															"nodeType": "Block",
															"src": "25463:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "25481:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3422,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:17"
																},
																{
																	"expression": {
																		"id": 3425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "25516:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3426,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3429,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "25560:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3445,
														"nodeType": "IfStatement",
														"src": "25556:103:17",
														"trueBody": {
															"id": 3444,
															"nodeType": "Block",
															"src": "25579:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3434,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "25597:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3439,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:17"
																},
																{
																	"expression": {
																		"id": 3442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3440,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "25632:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3443,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3446,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "25676:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3462,
														"nodeType": "IfStatement",
														"src": "25672:103:17",
														"trueBody": {
															"id": 3461,
															"nodeType": "Block",
															"src": "25695:80:17",
															"statements": [
																{
																	"expression": {
																		"id": 3455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3451,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "25713:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3456,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:17"
																},
																{
																	"expression": {
																		"id": 3459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3457,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "25748:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3460,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3463,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "25792:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3479,
														"nodeType": "IfStatement",
														"src": "25788:100:17",
														"trueBody": {
															"id": 3478,
															"nodeType": "Block",
															"src": "25810:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "25828:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3473,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:17"
																},
																{
																	"expression": {
																		"id": 3476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "25862:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3477,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "25905:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3496,
														"nodeType": "IfStatement",
														"src": "25901:100:17",
														"trueBody": {
															"id": 3495,
															"nodeType": "Block",
															"src": "25923:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "25941:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3490,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:17"
																},
																{
																	"expression": {
																		"id": 3493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3491,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "25975:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3494,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "26018:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3513,
														"nodeType": "IfStatement",
														"src": "26014:100:17",
														"trueBody": {
															"id": 3512,
															"nodeType": "Block",
															"src": "26036:78:17",
															"statements": [
																{
																	"expression": {
																		"id": 3506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "26054:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3507,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:17"
																},
																{
																	"expression": {
																		"id": 3510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3508,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "26088:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3511,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:17"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3403,
																"src": "26131:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3524,
														"nodeType": "IfStatement",
														"src": "26127:66:17",
														"trueBody": {
															"id": 3523,
															"nodeType": "Block",
															"src": "26149:44:17",
															"statements": [
																{
																	"expression": {
																		"id": 3521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3409,
																			"src": "26167:6:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3522,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:17"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3526,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3409,
													"src": "26219:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3407,
												"id": 3527,
												"nodeType": "Return",
												"src": "26212:13:17"
											}
										]
									},
									"documentation": {
										"id": 3401,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:17",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "25331:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:17"
									},
									"returnParameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3529,
												"src": "25369:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:17"
									},
									"scope": 3757,
									"src": "25316:916:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3562,
										"nodeType": "Block",
										"src": "26467:177:17",
										"statements": [
											{
												"id": 3561,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:17",
												"statements": [
													{
														"assignments": [
															3541
														],
														"declarations": [
															{
																"constant": false,
																"id": 3541,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3561,
																"src": "26501:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3545,
														"initialValue": {
															"arguments": [
																{
																	"id": 3543,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3532,
																	"src": "26524:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3542,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3529,
																	3563
																],
																"referencedDeclaration": 3529,
																"src": "26518:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3546,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3541,
																"src": "26551:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3550,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3535,
																					"src": "26593:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3549,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3756,
																				"src": "26576:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2163_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 3552,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 3553,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3541,
																					"src": "26612:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3555,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3532,
																				"src": "26621:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3547,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "26560:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "26560:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3539,
														"id": 3560,
														"nodeType": "Return",
														"src": "26544:83:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3530,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:17",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "26401:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3535,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "26416:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3533,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "26416:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "26416:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:17"
									},
									"returnParameters": {
										"id": 3539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "26458:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:17"
									},
									"scope": 3757,
									"src": "26386:258:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3699,
										"nodeType": "Block",
										"src": "26964:674:17",
										"statements": [
											{
												"assignments": [
													3572
												],
												"declarations": [
													{
														"constant": false,
														"id": 3572,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 3699,
														"src": "26974:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3574,
												"initialValue": {
													"hexValue": "30",
													"id": 3573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:17",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:17"
											},
											{
												"assignments": [
													3576
												],
												"declarations": [
													{
														"constant": false,
														"id": 3576,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:17",
														"nodeType": "VariableDeclaration",
														"scope": 3699,
														"src": "27002:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3577,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:17"
											},
											{
												"id": 3696,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:17",
												"statements": [
													{
														"expression": {
															"id": 3590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3578,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "27048:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3581,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3566,
																			"src": "27071:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 3587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 3584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3582,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 3583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 3585,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3579,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27055:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27055:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3591,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:17"
													},
													{
														"expression": {
															"id": 3596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3566,
																"src": "27108:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3593,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27118:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3597,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:17"
													},
													{
														"expression": {
															"id": 3602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3598,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "27142:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3599,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27152:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3603,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:17"
													},
													{
														"expression": {
															"id": 3616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3604,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "27176:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3566,
																			"src": "27199:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 3613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 3610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3608,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 3609,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 3611,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3605,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27183:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27183:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3617,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:17"
													},
													{
														"expression": {
															"id": 3622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3566,
																"src": "27235:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3619,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27245:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3623,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:17"
													},
													{
														"expression": {
															"id": 3628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3624,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "27268:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3625,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27278:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3629,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:17"
													},
													{
														"expression": {
															"id": 3642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3630,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "27301:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3633,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3566,
																			"src": "27324:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 3639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 3636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 3635,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 3637,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3631,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27308:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27308:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3643,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:17"
													},
													{
														"expression": {
															"id": 3648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3644,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3566,
																"src": "27360:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3645,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27370:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3649,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:17"
													},
													{
														"expression": {
															"id": 3654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3650,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "27393:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3651,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27403:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3655,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:17"
													},
													{
														"expression": {
															"id": 3668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3656,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "27426:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3659,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3566,
																			"src": "27449:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 3665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 3662,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3660,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 3661,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 3663,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3657,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27433:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27433:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3669,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:17"
													},
													{
														"expression": {
															"id": 3674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3670,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3566,
																"src": "27485:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3671,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27495:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3675,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:17"
													},
													{
														"expression": {
															"id": 3680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3676,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "27518:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3677,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "27528:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3681,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:17"
													},
													{
														"expression": {
															"id": 3694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3682,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3572,
																"src": "27551:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3566,
																			"src": "27577:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 3691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 3688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3686,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3687,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 3689,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3683,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27561:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27561:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3695,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:17"
													}
												]
											},
											{
												"expression": {
													"id": 3697,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3572,
													"src": "27625:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3570,
												"id": 3698,
												"nodeType": "Return",
												"src": "27618:13:17"
											}
										]
									},
									"documentation": {
										"id": 3564,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:17",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "26917:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:17"
									},
									"returnParameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "26955:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:17"
									},
									"scope": 3757,
									"src": "26901:737:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3736,
										"nodeType": "Block",
										"src": "27875:184:17",
										"statements": [
											{
												"id": 3735,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:17",
												"statements": [
													{
														"assignments": [
															3712
														],
														"declarations": [
															{
																"constant": false,
																"id": 3712,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:17",
																"nodeType": "VariableDeclaration",
																"scope": 3735,
																"src": "27909:14:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3711,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3716,
														"initialValue": {
															"arguments": [
																{
																	"id": 3714,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3703,
																	"src": "27933:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3713,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3700,
																	3737
																],
																"referencedDeclaration": 3700,
																"src": "27926:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:17"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3717,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3712,
																"src": "27960:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 3721,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3706,
																					"src": "28002:8:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$2163",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 3720,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3756,
																				"src": "27985:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2163_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 3722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3723,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 3726,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 3724,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3712,
																								"src": "28021:6:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 3725,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3727,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3729,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3703,
																				"src": "28036:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 3718,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5522,
																		"src": "27969:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 3719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:17",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5521,
																	"src": "27969:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 3732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3710,
														"id": 3734,
														"nodeType": "Return",
														"src": "27953:89:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3701,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:17",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 3737,
												"src": "27809:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3706,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3737,
												"src": "27824:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3704,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "27824:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "27824:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:17"
									},
									"returnParameters": {
										"id": 3710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3737,
												"src": "27866:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:17"
									},
									"scope": 3757,
									"src": "27793:266:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3755,
										"nodeType": "Block",
										"src": "28257:48:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3748,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3741,
																	"src": "28280:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2163",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2163",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3746,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3745,
												"id": 3754,
												"nodeType": "Return",
												"src": "28267:31:17"
											}
										]
									},
									"documentation": {
										"id": 3738,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:17",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3741,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "28209:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2163",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3739,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "28209:8:17"
													},
													"referencedDeclaration": 2163,
													"src": "28209:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2163",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:17"
									},
									"returnParameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "28251:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:17"
									},
									"scope": 3757,
									"src": "28183:122:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3758,
							"src": "281:28026:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							5522
						]
					},
					"id": 5523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3759,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3760,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:18",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 5522,
							"linearizedBaseContracts": [
								5522
							],
							"name": "SafeCast",
							"nameLocation": "777:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3761,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:18",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 3767,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "902:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3762,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "914:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:18"
									},
									"src": "865:64:18"
								},
								{
									"documentation": {
										"id": 3768,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:18",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 3772,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3772,
												"src": "1049:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:18"
									},
									"src": "1015:48:18"
								},
								{
									"documentation": {
										"id": 3773,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:18",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 3779,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3775,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3779,
												"src": "1177:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3774,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3779,
												"src": "1189:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3776,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:18"
									},
									"src": "1141:62:18"
								},
								{
									"documentation": {
										"id": 3780,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:18",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 3784,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3784,
												"src": "1323:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:18"
									},
									"src": "1289:49:18"
								},
								{
									"body": {
										"id": 3811,
										"nodeType": "Block",
										"src": "1695:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3792,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3787,
														"src": "1709:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 3794,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 3793,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 3797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3805,
												"nodeType": "IfStatement",
												"src": "1705:105:18",
												"trueBody": {
													"id": 3804,
													"nodeType": "Block",
													"src": "1736:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3801,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3787,
																		"src": "1793:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3799,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "1757:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3803,
															"nodeType": "RevertStatement",
															"src": "1750:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3787,
															"src": "1834:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 3806,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 3791,
												"id": 3810,
												"nodeType": "Return",
												"src": "1819:21:18"
											}
										]
									},
									"documentation": {
										"id": 3785,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:18",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3812,
												"src": "1648:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:18"
									},
									"returnParameters": {
										"id": 3791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3812,
												"src": "1686:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3789,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:18"
									},
									"scope": 5522,
									"src": "1629:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3839,
										"nodeType": "Block",
										"src": "2204:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3820,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3815,
														"src": "2218:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 3822,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 3821,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 3825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3833,
												"nodeType": "IfStatement",
												"src": "2214:105:18",
												"trueBody": {
													"id": 3832,
													"nodeType": "Block",
													"src": "2245:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3815,
																		"src": "2302:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3827,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "2266:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3831,
															"nodeType": "RevertStatement",
															"src": "2259:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3836,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3815,
															"src": "2343:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 3834,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 3819,
												"id": 3838,
												"nodeType": "Return",
												"src": "2328:21:18"
											}
										]
									},
									"documentation": {
										"id": 3813,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:18",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3840,
												"src": "2157:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:18"
									},
									"returnParameters": {
										"id": 3819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3840,
												"src": "2195:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3817,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:18"
									},
									"scope": 5522,
									"src": "2138:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3867,
										"nodeType": "Block",
										"src": "2713:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3848,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3843,
														"src": "2727:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 3850,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 3849,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 3853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3861,
												"nodeType": "IfStatement",
												"src": "2723:105:18",
												"trueBody": {
													"id": 3860,
													"nodeType": "Block",
													"src": "2754:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3857,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3843,
																		"src": "2811:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3855,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "2775:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3859,
															"nodeType": "RevertStatement",
															"src": "2768:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3864,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3843,
															"src": "2852:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 3862,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 3847,
												"id": 3866,
												"nodeType": "Return",
												"src": "2837:21:18"
											}
										]
									},
									"documentation": {
										"id": 3841,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:18",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "2666:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:18"
									},
									"returnParameters": {
										"id": 3847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "2704:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3845,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:18"
									},
									"scope": 5522,
									"src": "2647:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3895,
										"nodeType": "Block",
										"src": "3222:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3876,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3871,
														"src": "3236:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 3878,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 3877,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 3881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3889,
												"nodeType": "IfStatement",
												"src": "3232:105:18",
												"trueBody": {
													"id": 3888,
													"nodeType": "Block",
													"src": "3263:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3885,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3871,
																		"src": "3320:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3883,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "3284:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3887,
															"nodeType": "RevertStatement",
															"src": "3277:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3892,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3871,
															"src": "3361:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 3890,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 3875,
												"id": 3894,
												"nodeType": "Return",
												"src": "3346:21:18"
											}
										]
									},
									"documentation": {
										"id": 3869,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:18",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3896,
												"src": "3175:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:18"
									},
									"returnParameters": {
										"id": 3875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3896,
												"src": "3213:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 3873,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:18"
									},
									"scope": 5522,
									"src": "3156:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3923,
										"nodeType": "Block",
										"src": "3731:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3904,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "3745:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 3906,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 3905,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 3909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3917,
												"nodeType": "IfStatement",
												"src": "3741:105:18",
												"trueBody": {
													"id": 3916,
													"nodeType": "Block",
													"src": "3772:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3913,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3899,
																		"src": "3829:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3911,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "3793:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3915,
															"nodeType": "RevertStatement",
															"src": "3786:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3920,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3899,
															"src": "3870:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 3918,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 3903,
												"id": 3922,
												"nodeType": "Return",
												"src": "3855:21:18"
											}
										]
									},
									"documentation": {
										"id": 3897,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:18",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3899,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3924,
												"src": "3684:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:18"
									},
									"returnParameters": {
										"id": 3903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3924,
												"src": "3722:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 3901,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:18"
									},
									"scope": 5522,
									"src": "3665:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3951,
										"nodeType": "Block",
										"src": "4240:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3932,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3927,
														"src": "4254:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 3934,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 3933,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 3937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3945,
												"nodeType": "IfStatement",
												"src": "4250:105:18",
												"trueBody": {
													"id": 3944,
													"nodeType": "Block",
													"src": "4281:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3941,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3927,
																		"src": "4338:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3939,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "4302:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3943,
															"nodeType": "RevertStatement",
															"src": "4295:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3948,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3927,
															"src": "4379:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 3946,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 3931,
												"id": 3950,
												"nodeType": "Return",
												"src": "4364:21:18"
											}
										]
									},
									"documentation": {
										"id": 3925,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:18",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3952,
												"src": "4193:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:18"
									},
									"returnParameters": {
										"id": 3931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3952,
												"src": "4231:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 3929,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:18"
									},
									"scope": 5522,
									"src": "4174:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3979,
										"nodeType": "Block",
										"src": "4749:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3960,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "4763:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 3962,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 3961,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 3965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3973,
												"nodeType": "IfStatement",
												"src": "4759:105:18",
												"trueBody": {
													"id": 3972,
													"nodeType": "Block",
													"src": "4790:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3969,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3955,
																		"src": "4847:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3967,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "4811:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3971,
															"nodeType": "RevertStatement",
															"src": "4804:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3976,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3955,
															"src": "4888:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 3974,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 3977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 3959,
												"id": 3978,
												"nodeType": "Return",
												"src": "4873:21:18"
											}
										]
									},
									"documentation": {
										"id": 3953,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:18",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3980,
												"src": "4702:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:18"
									},
									"returnParameters": {
										"id": 3959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3980,
												"src": "4740:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 3957,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:18"
									},
									"scope": 5522,
									"src": "4683:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4007,
										"nodeType": "Block",
										"src": "5258:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3988,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3983,
														"src": "5272:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 3990,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 3989,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 3993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4001,
												"nodeType": "IfStatement",
												"src": "5268:105:18",
												"trueBody": {
													"id": 4000,
													"nodeType": "Block",
													"src": "5299:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3997,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3983,
																		"src": "5356:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3995,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "5320:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3999,
															"nodeType": "RevertStatement",
															"src": "5313:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4004,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3983,
															"src": "5397:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 4002,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 3987,
												"id": 4006,
												"nodeType": "Return",
												"src": "5382:21:18"
											}
										]
									},
									"documentation": {
										"id": 3981,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:18",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4008,
												"src": "5211:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:18"
									},
									"returnParameters": {
										"id": 3987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4008,
												"src": "5249:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 3985,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:18"
									},
									"scope": 5522,
									"src": "5192:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4035,
										"nodeType": "Block",
										"src": "5767:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4016,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4011,
														"src": "5781:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 4018,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 4017,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 4021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4029,
												"nodeType": "IfStatement",
												"src": "5777:105:18",
												"trueBody": {
													"id": 4028,
													"nodeType": "Block",
													"src": "5808:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4025,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4011,
																		"src": "5865:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4023,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "5829:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4027,
															"nodeType": "RevertStatement",
															"src": "5822:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4032,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4011,
															"src": "5906:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 4030,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 4015,
												"id": 4034,
												"nodeType": "Return",
												"src": "5891:21:18"
											}
										]
									},
									"documentation": {
										"id": 4009,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:18",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4011,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4036,
												"src": "5720:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:18"
									},
									"returnParameters": {
										"id": 4015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4036,
												"src": "5758:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 4013,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:18"
									},
									"scope": 5522,
									"src": "5701:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4063,
										"nodeType": "Block",
										"src": "6276:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4044,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4039,
														"src": "6290:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 4046,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 4045,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 4049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4057,
												"nodeType": "IfStatement",
												"src": "6286:105:18",
												"trueBody": {
													"id": 4056,
													"nodeType": "Block",
													"src": "6317:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4039,
																		"src": "6374:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4051,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "6338:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4055,
															"nodeType": "RevertStatement",
															"src": "6331:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4060,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4039,
															"src": "6415:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 4058,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 4043,
												"id": 4062,
												"nodeType": "Return",
												"src": "6400:21:18"
											}
										]
									},
									"documentation": {
										"id": 4037,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:18",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4064,
												"src": "6229:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:18"
									},
									"returnParameters": {
										"id": 4043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4064,
												"src": "6267:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 4041,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:18"
									},
									"scope": 5522,
									"src": "6210:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4091,
										"nodeType": "Block",
										"src": "6785:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4072,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4067,
														"src": "6799:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 4074,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 4073,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 4077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4085,
												"nodeType": "IfStatement",
												"src": "6795:105:18",
												"trueBody": {
													"id": 4084,
													"nodeType": "Block",
													"src": "6826:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4081,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4067,
																		"src": "6883:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4079,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "6847:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4083,
															"nodeType": "RevertStatement",
															"src": "6840:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4088,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4067,
															"src": "6924:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 4086,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 4071,
												"id": 4090,
												"nodeType": "Return",
												"src": "6909:21:18"
											}
										]
									},
									"documentation": {
										"id": 4065,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:18",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4067,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4092,
												"src": "6738:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:18"
									},
									"returnParameters": {
										"id": 4071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4092,
												"src": "6776:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 4069,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:18"
									},
									"scope": 5522,
									"src": "6719:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4119,
										"nodeType": "Block",
										"src": "7294:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4100,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4095,
														"src": "7308:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 4102,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 4101,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 4105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4113,
												"nodeType": "IfStatement",
												"src": "7304:105:18",
												"trueBody": {
													"id": 4112,
													"nodeType": "Block",
													"src": "7335:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4109,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4095,
																		"src": "7392:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4107,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "7356:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4111,
															"nodeType": "RevertStatement",
															"src": "7349:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4116,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4095,
															"src": "7433:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 4114,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 4099,
												"id": 4118,
												"nodeType": "Return",
												"src": "7418:21:18"
											}
										]
									},
									"documentation": {
										"id": 4093,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:18",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4120,
												"src": "7247:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:18"
									},
									"returnParameters": {
										"id": 4099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4120,
												"src": "7285:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4097,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:18"
									},
									"scope": 5522,
									"src": "7228:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4147,
										"nodeType": "Block",
										"src": "7803:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4128,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4123,
														"src": "7817:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 4130,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 4129,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 4133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4141,
												"nodeType": "IfStatement",
												"src": "7813:105:18",
												"trueBody": {
													"id": 4140,
													"nodeType": "Block",
													"src": "7844:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4137,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4123,
																		"src": "7901:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4135,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "7865:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4139,
															"nodeType": "RevertStatement",
															"src": "7858:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4123,
															"src": "7942:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 4142,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 4127,
												"id": 4146,
												"nodeType": "Return",
												"src": "7927:21:18"
											}
										]
									},
									"documentation": {
										"id": 4121,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:18",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4148,
												"src": "7756:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:18"
									},
									"returnParameters": {
										"id": 4127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4148,
												"src": "7794:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 4125,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:18"
									},
									"scope": 5522,
									"src": "7737:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4175,
										"nodeType": "Block",
										"src": "8312:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4156,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4151,
														"src": "8326:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 4158,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 4157,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 4161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4169,
												"nodeType": "IfStatement",
												"src": "8322:105:18",
												"trueBody": {
													"id": 4168,
													"nodeType": "Block",
													"src": "8353:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4165,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4151,
																		"src": "8410:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4163,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "8374:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4167,
															"nodeType": "RevertStatement",
															"src": "8367:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4172,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4151,
															"src": "8451:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 4170,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 4155,
												"id": 4174,
												"nodeType": "Return",
												"src": "8436:21:18"
											}
										]
									},
									"documentation": {
										"id": 4149,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:18",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4176,
												"src": "8265:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:18"
									},
									"returnParameters": {
										"id": 4155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4176,
												"src": "8303:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 4153,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:18"
									},
									"scope": 5522,
									"src": "8246:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4203,
										"nodeType": "Block",
										"src": "8821:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4184,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4179,
														"src": "8835:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 4186,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 4185,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 4189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4197,
												"nodeType": "IfStatement",
												"src": "8831:105:18",
												"trueBody": {
													"id": 4196,
													"nodeType": "Block",
													"src": "8862:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4193,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4179,
																		"src": "8919:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4191,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "8883:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4195,
															"nodeType": "RevertStatement",
															"src": "8876:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4200,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4179,
															"src": "8960:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 4198,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 4183,
												"id": 4202,
												"nodeType": "Return",
												"src": "8945:21:18"
											}
										]
									},
									"documentation": {
										"id": 4177,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:18",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4204,
												"src": "8774:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:18"
									},
									"returnParameters": {
										"id": 4183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4204,
												"src": "8812:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 4181,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:18"
									},
									"scope": 5522,
									"src": "8755:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4231,
										"nodeType": "Block",
										"src": "9330:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4212,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4207,
														"src": "9344:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 4214,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 4213,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 4217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4225,
												"nodeType": "IfStatement",
												"src": "9340:105:18",
												"trueBody": {
													"id": 4224,
													"nodeType": "Block",
													"src": "9371:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4221,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4207,
																		"src": "9428:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4219,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "9392:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4223,
															"nodeType": "RevertStatement",
															"src": "9385:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4228,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4207,
															"src": "9469:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 4226,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 4211,
												"id": 4230,
												"nodeType": "Return",
												"src": "9454:21:18"
											}
										]
									},
									"documentation": {
										"id": 4205,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:18",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4232,
												"src": "9283:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:18"
									},
									"returnParameters": {
										"id": 4211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4232,
												"src": "9321:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4209,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:18"
									},
									"scope": 5522,
									"src": "9264:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4259,
										"nodeType": "Block",
										"src": "9839:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4240,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4235,
														"src": "9853:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 4242,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 4241,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 4245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4253,
												"nodeType": "IfStatement",
												"src": "9849:105:18",
												"trueBody": {
													"id": 4252,
													"nodeType": "Block",
													"src": "9880:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4249,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4235,
																		"src": "9937:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4247,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "9901:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4251,
															"nodeType": "RevertStatement",
															"src": "9894:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4256,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4235,
															"src": "9978:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 4254,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 4239,
												"id": 4258,
												"nodeType": "Return",
												"src": "9963:21:18"
											}
										]
									},
									"documentation": {
										"id": 4233,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:18",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4260,
												"src": "9792:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:18"
									},
									"returnParameters": {
										"id": 4239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4260,
												"src": "9830:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 4237,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:18"
									},
									"scope": 5522,
									"src": "9773:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4287,
										"nodeType": "Block",
										"src": "10348:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4268,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4263,
														"src": "10362:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 4270,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 4269,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 4273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4281,
												"nodeType": "IfStatement",
												"src": "10358:105:18",
												"trueBody": {
													"id": 4280,
													"nodeType": "Block",
													"src": "10389:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4277,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4263,
																		"src": "10446:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4275,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "10410:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4279,
															"nodeType": "RevertStatement",
															"src": "10403:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4284,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4263,
															"src": "10487:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 4282,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 4267,
												"id": 4286,
												"nodeType": "Return",
												"src": "10472:21:18"
											}
										]
									},
									"documentation": {
										"id": 4261,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:18",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4288,
												"src": "10301:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:18"
									},
									"returnParameters": {
										"id": 4267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4288,
												"src": "10339:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 4265,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:18"
									},
									"scope": 5522,
									"src": "10282:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4315,
										"nodeType": "Block",
										"src": "10857:152:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4296,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4291,
														"src": "10871:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 4298,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 4297,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 4301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4309,
												"nodeType": "IfStatement",
												"src": "10867:105:18",
												"trueBody": {
													"id": 4308,
													"nodeType": "Block",
													"src": "10898:74:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4305,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4291,
																		"src": "10955:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4303,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "10919:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4307,
															"nodeType": "RevertStatement",
															"src": "10912:49:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4312,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4291,
															"src": "10996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 4310,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 4295,
												"id": 4314,
												"nodeType": "Return",
												"src": "10981:21:18"
											}
										]
									},
									"documentation": {
										"id": 4289,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:18",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4316,
												"src": "10810:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:18"
									},
									"returnParameters": {
										"id": 4295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4316,
												"src": "10848:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 4293,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:18"
									},
									"scope": 5522,
									"src": "10791:218:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4343,
										"nodeType": "Block",
										"src": "11360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4324,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4319,
														"src": "11374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 4326,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 4325,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 4329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4337,
												"nodeType": "IfStatement",
												"src": "11370:103:18",
												"trueBody": {
													"id": 4336,
													"nodeType": "Block",
													"src": "11400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4333,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4319,
																		"src": "11456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4331,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "11421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4335,
															"nodeType": "RevertStatement",
															"src": "11414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4340,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4319,
															"src": "11496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 4338,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 4323,
												"id": 4342,
												"nodeType": "Return",
												"src": "11482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4317,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:18",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4344,
												"src": "11314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:18"
									},
									"returnParameters": {
										"id": 4323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4344,
												"src": "11352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4321,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:18"
									},
									"scope": 5522,
									"src": "11296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4371,
										"nodeType": "Block",
										"src": "11860:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4352,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4347,
														"src": "11874:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 4354,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 4353,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 4357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4365,
												"nodeType": "IfStatement",
												"src": "11870:103:18",
												"trueBody": {
													"id": 4364,
													"nodeType": "Block",
													"src": "11900:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4361,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4347,
																		"src": "11956:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4359,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "11921:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4363,
															"nodeType": "RevertStatement",
															"src": "11914:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4368,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4347,
															"src": "11996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 4366,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 4351,
												"id": 4370,
												"nodeType": "Return",
												"src": "11982:20:18"
											}
										]
									},
									"documentation": {
										"id": 4345,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:18",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4372,
												"src": "11814:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:18"
									},
									"returnParameters": {
										"id": 4351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4372,
												"src": "11852:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 4349,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:18"
									},
									"scope": 5522,
									"src": "11796:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4399,
										"nodeType": "Block",
										"src": "12360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4380,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4375,
														"src": "12374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 4382,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 4381,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 4385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4393,
												"nodeType": "IfStatement",
												"src": "12370:103:18",
												"trueBody": {
													"id": 4392,
													"nodeType": "Block",
													"src": "12400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4389,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4375,
																		"src": "12456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4387,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "12421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4391,
															"nodeType": "RevertStatement",
															"src": "12414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4396,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4375,
															"src": "12496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 4394,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 4379,
												"id": 4398,
												"nodeType": "Return",
												"src": "12482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4373,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:18",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4400,
												"src": "12314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:18"
									},
									"returnParameters": {
										"id": 4379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4400,
												"src": "12352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4377,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:18"
									},
									"scope": 5522,
									"src": "12296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4427,
										"nodeType": "Block",
										"src": "12860:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4408,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4403,
														"src": "12874:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 4410,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 4409,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 4413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4421,
												"nodeType": "IfStatement",
												"src": "12870:103:18",
												"trueBody": {
													"id": 4420,
													"nodeType": "Block",
													"src": "12900:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4417,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4403,
																		"src": "12956:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4415,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "12921:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4419,
															"nodeType": "RevertStatement",
															"src": "12914:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4424,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4403,
															"src": "12996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 4422,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 4407,
												"id": 4426,
												"nodeType": "Return",
												"src": "12982:20:18"
											}
										]
									},
									"documentation": {
										"id": 4401,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:18",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "12814:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:18"
									},
									"returnParameters": {
										"id": 4407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "12852:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4405,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:18"
									},
									"scope": 5522,
									"src": "12796:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4455,
										"nodeType": "Block",
										"src": "13360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4436,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4431,
														"src": "13374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 4438,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 4437,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 4441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4449,
												"nodeType": "IfStatement",
												"src": "13370:103:18",
												"trueBody": {
													"id": 4448,
													"nodeType": "Block",
													"src": "13400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4445,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4431,
																		"src": "13456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4443,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "13421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4447,
															"nodeType": "RevertStatement",
															"src": "13414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4452,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4431,
															"src": "13496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 4450,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 4435,
												"id": 4454,
												"nodeType": "Return",
												"src": "13482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4429,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:18",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4456,
												"src": "13314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:18"
									},
									"returnParameters": {
										"id": 4435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4456,
												"src": "13352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4433,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:18"
									},
									"scope": 5522,
									"src": "13296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4483,
										"nodeType": "Block",
										"src": "13860:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4464,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4459,
														"src": "13874:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 4466,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 4465,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 4469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4477,
												"nodeType": "IfStatement",
												"src": "13870:103:18",
												"trueBody": {
													"id": 4476,
													"nodeType": "Block",
													"src": "13900:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4459,
																		"src": "13956:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4471,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "13921:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4475,
															"nodeType": "RevertStatement",
															"src": "13914:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4459,
															"src": "13996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 4478,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 4463,
												"id": 4482,
												"nodeType": "Return",
												"src": "13982:20:18"
											}
										]
									},
									"documentation": {
										"id": 4457,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:18",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4484,
												"src": "13814:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:18"
									},
									"returnParameters": {
										"id": 4463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4484,
												"src": "13852:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4461,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:18"
									},
									"scope": 5522,
									"src": "13796:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4511,
										"nodeType": "Block",
										"src": "14360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4492,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4487,
														"src": "14374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 4494,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 4493,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 4497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4505,
												"nodeType": "IfStatement",
												"src": "14370:103:18",
												"trueBody": {
													"id": 4504,
													"nodeType": "Block",
													"src": "14400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4487,
																		"src": "14456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4499,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "14421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4503,
															"nodeType": "RevertStatement",
															"src": "14414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4508,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4487,
															"src": "14496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 4506,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 4491,
												"id": 4510,
												"nodeType": "Return",
												"src": "14482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4485,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:18",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4512,
												"src": "14314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:18"
									},
									"returnParameters": {
										"id": 4491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4512,
												"src": "14352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4489,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:18"
									},
									"scope": 5522,
									"src": "14296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4539,
										"nodeType": "Block",
										"src": "14860:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4520,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4515,
														"src": "14874:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 4522,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 4521,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 4525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4533,
												"nodeType": "IfStatement",
												"src": "14870:103:18",
												"trueBody": {
													"id": 4532,
													"nodeType": "Block",
													"src": "14900:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4529,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4515,
																		"src": "14956:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4527,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "14921:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4531,
															"nodeType": "RevertStatement",
															"src": "14914:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4536,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4515,
															"src": "14996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 4534,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 4519,
												"id": 4538,
												"nodeType": "Return",
												"src": "14982:20:18"
											}
										]
									},
									"documentation": {
										"id": 4513,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:18",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "14814:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:18"
									},
									"returnParameters": {
										"id": 4519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "14852:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4517,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:18"
									},
									"scope": 5522,
									"src": "14796:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4567,
										"nodeType": "Block",
										"src": "15360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4548,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4543,
														"src": "15374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 4550,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 4549,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 4553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4561,
												"nodeType": "IfStatement",
												"src": "15370:103:18",
												"trueBody": {
													"id": 4560,
													"nodeType": "Block",
													"src": "15400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4557,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4543,
																		"src": "15456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4555,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "15421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4559,
															"nodeType": "RevertStatement",
															"src": "15414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4564,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4543,
															"src": "15496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 4562,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 4547,
												"id": 4566,
												"nodeType": "Return",
												"src": "15482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4541,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:18",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "15314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:18"
									},
									"returnParameters": {
										"id": 4547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4568,
												"src": "15352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4545,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:18"
									},
									"scope": 5522,
									"src": "15296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4595,
										"nodeType": "Block",
										"src": "15860:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4576,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4571,
														"src": "15874:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 4578,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 4577,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 4581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4589,
												"nodeType": "IfStatement",
												"src": "15870:103:18",
												"trueBody": {
													"id": 4588,
													"nodeType": "Block",
													"src": "15900:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4585,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4571,
																		"src": "15956:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4583,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "15921:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4587,
															"nodeType": "RevertStatement",
															"src": "15914:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4592,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4571,
															"src": "15996:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 4590,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 4575,
												"id": 4594,
												"nodeType": "Return",
												"src": "15982:20:18"
											}
										]
									},
									"documentation": {
										"id": 4569,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:18",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4596,
												"src": "15814:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:18"
									},
									"returnParameters": {
										"id": 4575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4596,
												"src": "15852:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4573,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:18"
									},
									"scope": 5522,
									"src": "15796:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4623,
										"nodeType": "Block",
										"src": "16360:149:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4604,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4599,
														"src": "16374:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 4606,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 4605,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 4609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4617,
												"nodeType": "IfStatement",
												"src": "16370:103:18",
												"trueBody": {
													"id": 4616,
													"nodeType": "Block",
													"src": "16400:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4613,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4599,
																		"src": "16456:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4611,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "16421:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4615,
															"nodeType": "RevertStatement",
															"src": "16414:48:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4620,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4599,
															"src": "16496:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 4618,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 4621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 4603,
												"id": 4622,
												"nodeType": "Return",
												"src": "16482:20:18"
											}
										]
									},
									"documentation": {
										"id": 4597,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:18",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4599,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4624,
												"src": "16314:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:18"
									},
									"returnParameters": {
										"id": 4603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4624,
												"src": "16352:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4601,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:18"
									},
									"scope": 5522,
									"src": "16296:213:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4651,
										"nodeType": "Block",
										"src": "16854:146:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4632,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4627,
														"src": "16868:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 4634,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:18",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 4633,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 4637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:18",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4645,
												"nodeType": "IfStatement",
												"src": "16864:101:18",
												"trueBody": {
													"id": 4644,
													"nodeType": "Block",
													"src": "16893:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4641,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4627,
																		"src": "16948:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4639,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3767,
																	"src": "16914:30:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 4642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4643,
															"nodeType": "RevertStatement",
															"src": "16907:47:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4627,
															"src": "16987:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 4646,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:18",
															"typeDescriptions": {}
														}
													},
													"id": 4649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4631,
												"id": 4650,
												"nodeType": "Return",
												"src": "16974:19:18"
											}
										]
									},
									"documentation": {
										"id": 4625,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:18",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4652,
												"src": "16809:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:18"
									},
									"returnParameters": {
										"id": 4631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4652,
												"src": "16847:5:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4629,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:18"
									},
									"scope": 5522,
									"src": "16792:208:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4674,
										"nodeType": "Block",
										"src": "17236:128:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4660,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4655,
														"src": "17250:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 4661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4668,
												"nodeType": "IfStatement",
												"src": "17246:81:18",
												"trueBody": {
													"id": 4667,
													"nodeType": "Block",
													"src": "17261:66:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4664,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4655,
																		"src": "17310:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4663,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3772,
																	"src": "17282:27:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 4665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4666,
															"nodeType": "RevertStatement",
															"src": "17275:41:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4671,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4655,
															"src": "17351:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4669,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:18",
															"typeDescriptions": {}
														}
													},
													"id": 4672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4659,
												"id": 4673,
												"nodeType": "Return",
												"src": "17336:21:18"
											}
										]
									},
									"documentation": {
										"id": 4653,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:18",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 4675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4675,
												"src": "17190:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4654,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:18"
									},
									"returnParameters": {
										"id": 4659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4675,
												"src": "17227:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:18"
									},
									"scope": 5522,
									"src": "17171:193:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4700,
										"nodeType": "Block",
										"src": "17761:150:18",
										"statements": [
											{
												"expression": {
													"id": 4688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4683,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4681,
														"src": "17771:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4686,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4678,
																"src": "17791:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 4684,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 4689,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4690,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4681,
														"src": "17811:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4691,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4678,
														"src": "17825:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4699,
												"nodeType": "IfStatement",
												"src": "17807:98:18",
												"trueBody": {
													"id": 4698,
													"nodeType": "Block",
													"src": "17832:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 4694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 4695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4678,
																		"src": "17888:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4693,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "17853:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4697,
															"nodeType": "RevertStatement",
															"src": "17846:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4676,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:18",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 4701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4701,
												"src": "17705:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4677,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:18"
									},
									"returnParameters": {
										"id": 4682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4681,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4701,
												"src": "17742:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 4680,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:18"
									},
									"scope": 5522,
									"src": "17687:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4726,
										"nodeType": "Block",
										"src": "18308:150:18",
										"statements": [
											{
												"expression": {
													"id": 4714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4709,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4707,
														"src": "18318:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4712,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4704,
																"src": "18338:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 4710,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 4715,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4716,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4707,
														"src": "18358:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4717,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4704,
														"src": "18372:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4725,
												"nodeType": "IfStatement",
												"src": "18354:98:18",
												"trueBody": {
													"id": 4724,
													"nodeType": "Block",
													"src": "18379:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 4720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 4721,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4704,
																		"src": "18435:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4719,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "18400:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4723,
															"nodeType": "RevertStatement",
															"src": "18393:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4702,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:18",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 4727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4727,
												"src": "18252:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4703,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:18"
									},
									"returnParameters": {
										"id": 4708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4707,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4727,
												"src": "18289:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 4706,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:18"
									},
									"scope": 5522,
									"src": "18234:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4752,
										"nodeType": "Block",
										"src": "18855:150:18",
										"statements": [
											{
												"expression": {
													"id": 4740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4735,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4733,
														"src": "18865:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4738,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4730,
																"src": "18885:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 4736,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 4741,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4742,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4733,
														"src": "18905:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4743,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4730,
														"src": "18919:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4751,
												"nodeType": "IfStatement",
												"src": "18901:98:18",
												"trueBody": {
													"id": 4750,
													"nodeType": "Block",
													"src": "18926:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 4746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 4747,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4730,
																		"src": "18982:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4745,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "18947:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4749,
															"nodeType": "RevertStatement",
															"src": "18940:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4728,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:18",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 4753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4730,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4753,
												"src": "18799:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:18"
									},
									"returnParameters": {
										"id": 4734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4733,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4753,
												"src": "18836:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 4732,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:18"
									},
									"scope": 5522,
									"src": "18781:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4778,
										"nodeType": "Block",
										"src": "19402:150:18",
										"statements": [
											{
												"expression": {
													"id": 4766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4761,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4759,
														"src": "19412:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4764,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4756,
																"src": "19432:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 4762,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 4767,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4768,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4759,
														"src": "19452:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4769,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4756,
														"src": "19466:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4777,
												"nodeType": "IfStatement",
												"src": "19448:98:18",
												"trueBody": {
													"id": 4776,
													"nodeType": "Block",
													"src": "19473:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 4772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 4773,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4756,
																		"src": "19529:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4771,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "19494:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4775,
															"nodeType": "RevertStatement",
															"src": "19487:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4754,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:18",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 4779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4779,
												"src": "19346:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4755,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:18"
									},
									"returnParameters": {
										"id": 4760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4759,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4779,
												"src": "19383:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 4758,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:18"
									},
									"scope": 5522,
									"src": "19328:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4804,
										"nodeType": "Block",
										"src": "19949:150:18",
										"statements": [
											{
												"expression": {
													"id": 4792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4787,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4785,
														"src": "19959:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4782,
																"src": "19979:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 4788,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 4793,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4794,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4785,
														"src": "19999:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4795,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4782,
														"src": "20013:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4803,
												"nodeType": "IfStatement",
												"src": "19995:98:18",
												"trueBody": {
													"id": 4802,
													"nodeType": "Block",
													"src": "20020:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 4798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 4799,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4782,
																		"src": "20076:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4797,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "20041:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4801,
															"nodeType": "RevertStatement",
															"src": "20034:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4780,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:18",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 4805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4782,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4805,
												"src": "19893:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4781,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:18"
									},
									"returnParameters": {
										"id": 4786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4785,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4805,
												"src": "19930:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 4784,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:18"
									},
									"scope": 5522,
									"src": "19875:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4830,
										"nodeType": "Block",
										"src": "20496:150:18",
										"statements": [
											{
												"expression": {
													"id": 4818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4813,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4811,
														"src": "20506:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4816,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4808,
																"src": "20526:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 4814,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 4819,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4820,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4811,
														"src": "20546:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4821,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4808,
														"src": "20560:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4829,
												"nodeType": "IfStatement",
												"src": "20542:98:18",
												"trueBody": {
													"id": 4828,
													"nodeType": "Block",
													"src": "20567:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 4824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 4825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4808,
																		"src": "20623:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4823,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "20588:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4827,
															"nodeType": "RevertStatement",
															"src": "20581:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4806,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:18",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 4831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4831,
												"src": "20440:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4807,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:18"
									},
									"returnParameters": {
										"id": 4812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4811,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4831,
												"src": "20477:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 4810,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:18"
									},
									"scope": 5522,
									"src": "20422:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4856,
										"nodeType": "Block",
										"src": "21043:150:18",
										"statements": [
											{
												"expression": {
													"id": 4844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4839,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4837,
														"src": "21053:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4842,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4834,
																"src": "21073:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 4840,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 4845,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4846,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4837,
														"src": "21093:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4847,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4834,
														"src": "21107:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4855,
												"nodeType": "IfStatement",
												"src": "21089:98:18",
												"trueBody": {
													"id": 4854,
													"nodeType": "Block",
													"src": "21114:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 4850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 4851,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4834,
																		"src": "21170:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4849,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "21135:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4853,
															"nodeType": "RevertStatement",
															"src": "21128:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4832,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:18",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 4857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4857,
												"src": "20987:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4833,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:18"
									},
									"returnParameters": {
										"id": 4838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4837,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4857,
												"src": "21024:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 4836,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:18"
									},
									"scope": 5522,
									"src": "20969:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4882,
										"nodeType": "Block",
										"src": "21590:150:18",
										"statements": [
											{
												"expression": {
													"id": 4870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4865,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4863,
														"src": "21600:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4868,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4860,
																"src": "21620:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 4866,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 4871,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4872,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4863,
														"src": "21640:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4873,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4860,
														"src": "21654:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4881,
												"nodeType": "IfStatement",
												"src": "21636:98:18",
												"trueBody": {
													"id": 4880,
													"nodeType": "Block",
													"src": "21661:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 4876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 4877,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4860,
																		"src": "21717:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4875,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "21682:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4879,
															"nodeType": "RevertStatement",
															"src": "21675:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4858,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:18",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 4883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4883,
												"src": "21534:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4859,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:18"
									},
									"returnParameters": {
										"id": 4864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4863,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4883,
												"src": "21571:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 4862,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:18"
									},
									"scope": 5522,
									"src": "21516:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4908,
										"nodeType": "Block",
										"src": "22137:150:18",
										"statements": [
											{
												"expression": {
													"id": 4896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4891,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4889,
														"src": "22147:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4894,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4886,
																"src": "22167:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 4892,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 4897,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4898,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4889,
														"src": "22187:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4899,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4886,
														"src": "22201:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4907,
												"nodeType": "IfStatement",
												"src": "22183:98:18",
												"trueBody": {
													"id": 4906,
													"nodeType": "Block",
													"src": "22208:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4903,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4886,
																		"src": "22264:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4901,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "22229:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4905,
															"nodeType": "RevertStatement",
															"src": "22222:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4884,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:18",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4909,
												"src": "22081:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4885,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:18"
									},
									"returnParameters": {
										"id": 4890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4889,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4909,
												"src": "22118:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 4888,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:18"
									},
									"scope": 5522,
									"src": "22063:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4934,
										"nodeType": "Block",
										"src": "22684:150:18",
										"statements": [
											{
												"expression": {
													"id": 4922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4917,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4915,
														"src": "22694:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4920,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4912,
																"src": "22714:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 4918,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 4923,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4924,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4915,
														"src": "22734:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4925,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4912,
														"src": "22748:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4933,
												"nodeType": "IfStatement",
												"src": "22730:98:18",
												"trueBody": {
													"id": 4932,
													"nodeType": "Block",
													"src": "22755:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4929,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4912,
																		"src": "22811:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4927,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "22776:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4931,
															"nodeType": "RevertStatement",
															"src": "22769:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4910,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:18",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4935,
												"src": "22628:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4911,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:18"
									},
									"returnParameters": {
										"id": 4916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4915,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4935,
												"src": "22665:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 4914,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:18"
									},
									"scope": 5522,
									"src": "22610:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4960,
										"nodeType": "Block",
										"src": "23231:150:18",
										"statements": [
											{
												"expression": {
													"id": 4948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4943,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4941,
														"src": "23241:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4946,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4938,
																"src": "23261:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 4944,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 4949,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4950,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4941,
														"src": "23281:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4951,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4938,
														"src": "23295:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4959,
												"nodeType": "IfStatement",
												"src": "23277:98:18",
												"trueBody": {
													"id": 4958,
													"nodeType": "Block",
													"src": "23302:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4955,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4938,
																		"src": "23358:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4953,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "23323:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4957,
															"nodeType": "RevertStatement",
															"src": "23316:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4936,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:18",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4938,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4961,
												"src": "23175:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4937,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:18"
									},
									"returnParameters": {
										"id": 4942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4941,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4961,
												"src": "23212:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 4940,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:18"
									},
									"scope": 5522,
									"src": "23157:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4986,
										"nodeType": "Block",
										"src": "23778:150:18",
										"statements": [
											{
												"expression": {
													"id": 4974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4969,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4967,
														"src": "23788:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4972,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4964,
																"src": "23808:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 4970,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 4975,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4976,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4967,
														"src": "23828:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4977,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4964,
														"src": "23842:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4985,
												"nodeType": "IfStatement",
												"src": "23824:98:18",
												"trueBody": {
													"id": 4984,
													"nodeType": "Block",
													"src": "23849:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4964,
																		"src": "23905:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4979,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "23870:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4983,
															"nodeType": "RevertStatement",
															"src": "23863:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4962,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:18",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 4987,
												"src": "23722:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4963,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:18"
									},
									"returnParameters": {
										"id": 4968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4967,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 4987,
												"src": "23759:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 4966,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:18"
									},
									"scope": 5522,
									"src": "23704:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5012,
										"nodeType": "Block",
										"src": "24325:150:18",
										"statements": [
											{
												"expression": {
													"id": 5000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4995,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4993,
														"src": "24335:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4998,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4990,
																"src": "24355:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 4996,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 4999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 5001,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5002,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4993,
														"src": "24375:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5003,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4990,
														"src": "24389:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5011,
												"nodeType": "IfStatement",
												"src": "24371:98:18",
												"trueBody": {
													"id": 5010,
													"nodeType": "Block",
													"src": "24396:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 5006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 5007,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4990,
																		"src": "24452:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5005,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "24417:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5009,
															"nodeType": "RevertStatement",
															"src": "24410:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4988,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:18",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 5013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5013,
												"src": "24269:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4989,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:18"
									},
									"returnParameters": {
										"id": 4994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4993,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5013,
												"src": "24306:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 4992,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:18"
									},
									"scope": 5522,
									"src": "24251:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5038,
										"nodeType": "Block",
										"src": "24872:150:18",
										"statements": [
											{
												"expression": {
													"id": 5026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5021,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5019,
														"src": "24882:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5024,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5016,
																"src": "24902:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 5022,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 5027,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5028,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5019,
														"src": "24922:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5029,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5016,
														"src": "24936:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5037,
												"nodeType": "IfStatement",
												"src": "24918:98:18",
												"trueBody": {
													"id": 5036,
													"nodeType": "Block",
													"src": "24943:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 5032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 5033,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5016,
																		"src": "24999:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5031,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "24964:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5035,
															"nodeType": "RevertStatement",
															"src": "24957:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5014,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:18",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 5039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5016,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5039,
												"src": "24816:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5015,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:18"
									},
									"returnParameters": {
										"id": 5020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5019,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5039,
												"src": "24853:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 5018,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:18"
									},
									"scope": 5522,
									"src": "24798:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5064,
										"nodeType": "Block",
										"src": "25419:150:18",
										"statements": [
											{
												"expression": {
													"id": 5052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5047,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5045,
														"src": "25429:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5050,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5042,
																"src": "25449:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 5048,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 5053,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5054,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5045,
														"src": "25469:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5055,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5042,
														"src": "25483:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5063,
												"nodeType": "IfStatement",
												"src": "25465:98:18",
												"trueBody": {
													"id": 5062,
													"nodeType": "Block",
													"src": "25490:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 5058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 5059,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5042,
																		"src": "25546:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5057,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "25511:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5061,
															"nodeType": "RevertStatement",
															"src": "25504:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5040,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:18",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 5065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5065,
												"src": "25363:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5041,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:18"
									},
									"returnParameters": {
										"id": 5046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5045,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5065,
												"src": "25400:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 5044,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:18"
									},
									"scope": 5522,
									"src": "25345:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5090,
										"nodeType": "Block",
										"src": "25966:150:18",
										"statements": [
											{
												"expression": {
													"id": 5078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5073,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5071,
														"src": "25976:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5076,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5068,
																"src": "25996:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 5074,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 5079,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5080,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5071,
														"src": "26016:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5081,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5068,
														"src": "26030:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5089,
												"nodeType": "IfStatement",
												"src": "26012:98:18",
												"trueBody": {
													"id": 5088,
													"nodeType": "Block",
													"src": "26037:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 5084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 5085,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5068,
																		"src": "26093:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5083,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "26058:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5087,
															"nodeType": "RevertStatement",
															"src": "26051:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5066,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:18",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 5091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5068,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5091,
												"src": "25910:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5067,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:18"
									},
									"returnParameters": {
										"id": 5072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5071,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5091,
												"src": "25947:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 5070,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:18"
									},
									"scope": 5522,
									"src": "25892:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5116,
										"nodeType": "Block",
										"src": "26513:150:18",
										"statements": [
											{
												"expression": {
													"id": 5104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5099,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5097,
														"src": "26523:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5102,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5094,
																"src": "26543:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 5100,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 5105,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5106,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5097,
														"src": "26563:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5107,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5094,
														"src": "26577:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5115,
												"nodeType": "IfStatement",
												"src": "26559:98:18",
												"trueBody": {
													"id": 5114,
													"nodeType": "Block",
													"src": "26584:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 5110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 5111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5094,
																		"src": "26640:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5109,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "26605:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5113,
															"nodeType": "RevertStatement",
															"src": "26598:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5092,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:18",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 5117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5117,
												"src": "26457:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5093,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:18"
									},
									"returnParameters": {
										"id": 5098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5097,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5117,
												"src": "26494:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 5096,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:18"
									},
									"scope": 5522,
									"src": "26439:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5142,
										"nodeType": "Block",
										"src": "27060:150:18",
										"statements": [
											{
												"expression": {
													"id": 5130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5125,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5123,
														"src": "27070:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5120,
																"src": "27090:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 5126,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 5131,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5132,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5123,
														"src": "27110:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5133,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5120,
														"src": "27124:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5141,
												"nodeType": "IfStatement",
												"src": "27106:98:18",
												"trueBody": {
													"id": 5140,
													"nodeType": "Block",
													"src": "27131:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 5136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 5137,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5120,
																		"src": "27187:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5135,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "27152:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5139,
															"nodeType": "RevertStatement",
															"src": "27145:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5118,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:18",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 5143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5120,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5143,
												"src": "27004:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:18"
									},
									"returnParameters": {
										"id": 5124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5123,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5143,
												"src": "27041:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 5122,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:18"
									},
									"scope": 5522,
									"src": "26986:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5168,
										"nodeType": "Block",
										"src": "27607:150:18",
										"statements": [
											{
												"expression": {
													"id": 5156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5151,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5149,
														"src": "27617:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5154,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5146,
																"src": "27637:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 5152,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:18",
																"typeDescriptions": {}
															}
														},
														"id": 5155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 5157,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5158,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5149,
														"src": "27657:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5159,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5146,
														"src": "27671:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5167,
												"nodeType": "IfStatement",
												"src": "27653:98:18",
												"trueBody": {
													"id": 5166,
													"nodeType": "Block",
													"src": "27678:73:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 5162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 5163,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5146,
																		"src": "27734:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5161,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "27699:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5165,
															"nodeType": "RevertStatement",
															"src": "27692:48:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5144,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:18",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 5169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5169,
												"src": "27551:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:18"
									},
									"returnParameters": {
										"id": 5150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5149,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5169,
												"src": "27588:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 5148,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:18"
									},
									"scope": 5522,
									"src": "27533:224:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5194,
										"nodeType": "Block",
										"src": "28147:148:18",
										"statements": [
											{
												"expression": {
													"id": 5182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5177,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5175,
														"src": "28157:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5180,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5172,
																"src": "28176:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 5178,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 5183,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5184,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5175,
														"src": "28196:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5185,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5172,
														"src": "28210:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5193,
												"nodeType": "IfStatement",
												"src": "28192:97:18",
												"trueBody": {
													"id": 5192,
													"nodeType": "Block",
													"src": "28217:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 5188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 5189,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5172,
																		"src": "28272:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5187,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "28238:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5191,
															"nodeType": "RevertStatement",
															"src": "28231:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5170,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:18",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 5195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5195,
												"src": "28092:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5171,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:18"
									},
									"returnParameters": {
										"id": 5176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5175,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5195,
												"src": "28129:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 5174,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:18"
									},
									"scope": 5522,
									"src": "28075:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5220,
										"nodeType": "Block",
										"src": "28685:148:18",
										"statements": [
											{
												"expression": {
													"id": 5208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5203,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5201,
														"src": "28695:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5198,
																"src": "28714:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 5204,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 5209,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5210,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5201,
														"src": "28734:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5211,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5198,
														"src": "28748:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5219,
												"nodeType": "IfStatement",
												"src": "28730:97:18",
												"trueBody": {
													"id": 5218,
													"nodeType": "Block",
													"src": "28755:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 5214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 5215,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5198,
																		"src": "28810:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5213,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "28776:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5217,
															"nodeType": "RevertStatement",
															"src": "28769:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5196,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:18",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 5221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5221,
												"src": "28630:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5197,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:18"
									},
									"returnParameters": {
										"id": 5202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5201,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5221,
												"src": "28667:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 5200,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:18"
									},
									"scope": 5522,
									"src": "28613:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5246,
										"nodeType": "Block",
										"src": "29223:148:18",
										"statements": [
											{
												"expression": {
													"id": 5234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5229,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5227,
														"src": "29233:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5232,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5224,
																"src": "29252:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 5230,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 5235,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5236,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5227,
														"src": "29272:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5237,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5224,
														"src": "29286:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5245,
												"nodeType": "IfStatement",
												"src": "29268:97:18",
												"trueBody": {
													"id": 5244,
													"nodeType": "Block",
													"src": "29293:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 5240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 5241,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5224,
																		"src": "29348:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5239,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "29314:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5243,
															"nodeType": "RevertStatement",
															"src": "29307:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5222,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:18",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 5247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5247,
												"src": "29168:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5223,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:18"
									},
									"returnParameters": {
										"id": 5228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5227,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5247,
												"src": "29205:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 5226,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:18"
									},
									"scope": 5522,
									"src": "29151:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5272,
										"nodeType": "Block",
										"src": "29761:148:18",
										"statements": [
											{
												"expression": {
													"id": 5260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5255,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5253,
														"src": "29771:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5258,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5250,
																"src": "29790:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 5256,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 5261,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5262,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5253,
														"src": "29810:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5263,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5250,
														"src": "29824:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5271,
												"nodeType": "IfStatement",
												"src": "29806:97:18",
												"trueBody": {
													"id": 5270,
													"nodeType": "Block",
													"src": "29831:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 5266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 5267,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5250,
																		"src": "29886:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5265,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "29852:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5269,
															"nodeType": "RevertStatement",
															"src": "29845:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5248,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:18",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 5273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5273,
												"src": "29706:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:18"
									},
									"returnParameters": {
										"id": 5254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5253,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5273,
												"src": "29743:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 5252,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:18"
									},
									"scope": 5522,
									"src": "29689:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5298,
										"nodeType": "Block",
										"src": "30299:148:18",
										"statements": [
											{
												"expression": {
													"id": 5286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5281,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5279,
														"src": "30309:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5276,
																"src": "30328:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 5282,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 5287,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5288,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5279,
														"src": "30348:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5289,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5276,
														"src": "30362:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5297,
												"nodeType": "IfStatement",
												"src": "30344:97:18",
												"trueBody": {
													"id": 5296,
													"nodeType": "Block",
													"src": "30369:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 5292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 5293,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5276,
																		"src": "30424:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5291,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "30390:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5295,
															"nodeType": "RevertStatement",
															"src": "30383:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5274,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:18",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 5299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5299,
												"src": "30244:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5275,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:18"
									},
									"returnParameters": {
										"id": 5280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5279,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5299,
												"src": "30281:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 5278,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:18"
									},
									"scope": 5522,
									"src": "30227:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5324,
										"nodeType": "Block",
										"src": "30837:148:18",
										"statements": [
											{
												"expression": {
													"id": 5312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5307,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5305,
														"src": "30847:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5302,
																"src": "30866:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 5308,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 5313,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5314,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5305,
														"src": "30886:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5315,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5302,
														"src": "30900:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5323,
												"nodeType": "IfStatement",
												"src": "30882:97:18",
												"trueBody": {
													"id": 5322,
													"nodeType": "Block",
													"src": "30907:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 5318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 5319,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5302,
																		"src": "30962:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5317,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "30928:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5321,
															"nodeType": "RevertStatement",
															"src": "30921:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5300,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:18",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 5325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5325,
												"src": "30782:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5301,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:18"
									},
									"returnParameters": {
										"id": 5306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5305,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5325,
												"src": "30819:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 5304,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:18"
									},
									"scope": 5522,
									"src": "30765:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5350,
										"nodeType": "Block",
										"src": "31375:148:18",
										"statements": [
											{
												"expression": {
													"id": 5338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5333,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5331,
														"src": "31385:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5336,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5328,
																"src": "31404:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 5334,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 5339,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5340,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5331,
														"src": "31424:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5341,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5328,
														"src": "31438:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5349,
												"nodeType": "IfStatement",
												"src": "31420:97:18",
												"trueBody": {
													"id": 5348,
													"nodeType": "Block",
													"src": "31445:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 5344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 5345,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5328,
																		"src": "31500:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5343,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "31466:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5347,
															"nodeType": "RevertStatement",
															"src": "31459:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5326,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:18",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 5351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5351,
												"src": "31320:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:18"
									},
									"returnParameters": {
										"id": 5332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5331,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5351,
												"src": "31357:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 5330,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:18"
									},
									"scope": 5522,
									"src": "31303:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5376,
										"nodeType": "Block",
										"src": "31913:148:18",
										"statements": [
											{
												"expression": {
													"id": 5364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5359,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5357,
														"src": "31923:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5362,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5354,
																"src": "31942:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 5360,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 5365,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5366,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5357,
														"src": "31962:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5367,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5354,
														"src": "31976:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5375,
												"nodeType": "IfStatement",
												"src": "31958:97:18",
												"trueBody": {
													"id": 5374,
													"nodeType": "Block",
													"src": "31983:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 5370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 5371,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5354,
																		"src": "32038:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5369,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "32004:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5373,
															"nodeType": "RevertStatement",
															"src": "31997:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5352,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:18",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 5377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5377,
												"src": "31858:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:18"
									},
									"returnParameters": {
										"id": 5358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5357,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5377,
												"src": "31895:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 5356,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:18"
									},
									"scope": 5522,
									"src": "31841:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5402,
										"nodeType": "Block",
										"src": "32451:148:18",
										"statements": [
											{
												"expression": {
													"id": 5390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5385,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5383,
														"src": "32461:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5388,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5380,
																"src": "32480:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 5386,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 5391,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5392,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5383,
														"src": "32500:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5393,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5380,
														"src": "32514:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5401,
												"nodeType": "IfStatement",
												"src": "32496:97:18",
												"trueBody": {
													"id": 5400,
													"nodeType": "Block",
													"src": "32521:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 5396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 5397,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5380,
																		"src": "32576:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5395,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "32542:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5399,
															"nodeType": "RevertStatement",
															"src": "32535:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5378,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:18",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 5403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5403,
												"src": "32396:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5379,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:18"
									},
									"returnParameters": {
										"id": 5384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5383,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5403,
												"src": "32433:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 5382,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:18"
									},
									"scope": 5522,
									"src": "32379:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5428,
										"nodeType": "Block",
										"src": "32989:148:18",
										"statements": [
											{
												"expression": {
													"id": 5416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5411,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5409,
														"src": "32999:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5414,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5406,
																"src": "33018:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 5412,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5417,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5418,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5409,
														"src": "33038:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5419,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5406,
														"src": "33052:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5427,
												"nodeType": "IfStatement",
												"src": "33034:97:18",
												"trueBody": {
													"id": 5426,
													"nodeType": "Block",
													"src": "33059:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 5422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 5423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5406,
																		"src": "33114:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5421,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "33080:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5425,
															"nodeType": "RevertStatement",
															"src": "33073:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5404,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:18",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 5429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5429,
												"src": "32934:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5405,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:18"
									},
									"returnParameters": {
										"id": 5410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5409,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5429,
												"src": "32971:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5408,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:18"
									},
									"scope": 5522,
									"src": "32917:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5454,
										"nodeType": "Block",
										"src": "33527:148:18",
										"statements": [
											{
												"expression": {
													"id": 5442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5437,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5435,
														"src": "33537:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5432,
																"src": "33556:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 5438,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:18",
																"typeDescriptions": {}
															}
														},
														"id": 5441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 5443,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5444,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5435,
														"src": "33576:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5445,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5432,
														"src": "33590:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5453,
												"nodeType": "IfStatement",
												"src": "33572:97:18",
												"trueBody": {
													"id": 5452,
													"nodeType": "Block",
													"src": "33597:72:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 5448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 5449,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5432,
																		"src": "33652:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5447,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "33618:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5451,
															"nodeType": "RevertStatement",
															"src": "33611:47:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5430,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:18",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 5455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5455,
												"src": "33472:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5431,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:18"
									},
									"returnParameters": {
										"id": 5436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5435,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5455,
												"src": "33509:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 5434,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:18"
									},
									"scope": 5522,
									"src": "33455:220:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5480,
										"nodeType": "Block",
										"src": "34058:146:18",
										"statements": [
											{
												"expression": {
													"id": 5468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5463,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5461,
														"src": "34068:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5466,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5458,
																"src": "34086:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 5464,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:18",
																"typeDescriptions": {}
															}
														},
														"id": 5467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 5469,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5470,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5461,
														"src": "34106:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 5471,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5458,
														"src": "34120:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5479,
												"nodeType": "IfStatement",
												"src": "34102:96:18",
												"trueBody": {
													"id": 5478,
													"nodeType": "Block",
													"src": "34127:71:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 5474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 5475,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5458,
																		"src": "34181:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 5473,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3779,
																	"src": "34148:29:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 5476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5477,
															"nodeType": "RevertStatement",
															"src": "34141:46:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5456,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:18",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 5481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5481,
												"src": "34004:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5457,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:18"
									},
									"returnParameters": {
										"id": 5462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5461,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 5481,
												"src": "34041:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 5460,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:18"
									},
									"scope": 5522,
									"src": "33988:216:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5510,
										"nodeType": "Block",
										"src": "34444:250:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5489,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5484,
														"src": "34557:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 5494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 5493,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:18",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 5492,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 5495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 5496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:18",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 5491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 5490,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:18",
																"typeDescriptions": {}
															}
														},
														"id": 5497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5504,
												"nodeType": "IfStatement",
												"src": "34553:105:18",
												"trueBody": {
													"id": 5503,
													"nodeType": "Block",
													"src": "34592:66:18",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 5500,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5484,
																		"src": "34641:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5499,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3784,
																	"src": "34613:27:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 5501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 5502,
															"nodeType": "RevertStatement",
															"src": "34606:41:18"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5507,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5484,
															"src": "34681:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 5505,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:18",
															"typeDescriptions": {}
														}
													},
													"id": 5508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5488,
												"id": 5509,
												"nodeType": "Return",
												"src": "34667:20:18"
											}
										]
									},
									"documentation": {
										"id": 5482,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:18",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 5511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 5511,
												"src": "34398:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:18"
									},
									"returnParameters": {
										"id": 5488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5511,
												"src": "34436:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5486,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:18"
									},
									"scope": 5522,
									"src": "34380:314:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5520,
										"nodeType": "Block",
										"src": "34853:87:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:18",
													"nodeType": "YulBlock",
													"src": "34888:46:18",
													"statements": [
														{
															"nativeSrc": "34902:22:18",
															"nodeType": "YulAssignment",
															"src": "34902:22:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:18"
																		},
																		"nativeSrc": "34914:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:18"
																},
																"nativeSrc": "34907:17:18",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:18"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:18"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5514,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:18",
														"valueSize": 1
													},
													{
														"declaration": 5517,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 5519,
												"nodeType": "InlineAssembly",
												"src": "34863:71:18"
											}
										]
									},
									"documentation": {
										"id": 5512,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:18",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 5521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5521,
												"src": "34811:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:18"
									},
									"returnParameters": {
										"id": 5518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5517,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 5521,
												"src": "34842:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:18"
									},
									"scope": 5522,
									"src": "34795:145:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5523,
							"src": "769:34173:18",
							"usedErrors": [
								3767,
								3772,
								3779,
								3784
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							5522
						],
						"SignedMath": [
							5666
						]
					},
					"id": 5667,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:19"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 5526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5667,
							"sourceUnit": 5523,
							"src": "135:40:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 5525,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 5522,
										"src": "143:8:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5527,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:19",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 5666,
							"linearizedBaseContracts": [
								5666
							],
							"name": "SignedMath",
							"nameLocation": "266:10:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5556,
										"nodeType": "Block",
										"src": "746:215:19",
										"statements": [
											{
												"id": 5555,
												"nodeType": "UncheckedBlock",
												"src": "756:199:19",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5539,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5534,
																"src": "894:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 5542,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 5540,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5532,
																						"src": "900:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 5541,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5534,
																						"src": "904:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 5543,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 5548,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5530,
																							"src": "932:9:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 5546,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 5522,
																							"src": "916:8:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$5522_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 5547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:19",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5521,
																						"src": "916:15:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 5549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:19",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 5545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 5544,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:19",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 5550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5552,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 5538,
														"id": 5554,
														"nodeType": "Return",
														"src": "887:57:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5528,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:19",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 5557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5530,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:19",
												"nodeType": "VariableDeclaration",
												"scope": 5557,
												"src": "679:14:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5532,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5557,
												"src": "695:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5531,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5534,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5557,
												"src": "705:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5533,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:19"
									},
									"returnParameters": {
										"id": 5538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5557,
												"src": "738:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5536,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:19"
									},
									"scope": 5666,
									"src": "662:299:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5575,
										"nodeType": "Block",
										"src": "1102:44:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5568,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5560,
																"src": "1127:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 5569,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5562,
																"src": "1131:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5571,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5560,
															"src": "1134:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5572,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5562,
															"src": "1137:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5567,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5557,
														"src": "1119:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5566,
												"id": 5574,
												"nodeType": "Return",
												"src": "1112:27:19"
											}
										]
									},
									"documentation": {
										"id": 5558,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:19",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 5576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5560,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5576,
												"src": "1051:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5559,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5562,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5576,
												"src": "1061:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:19"
									},
									"returnParameters": {
										"id": 5566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5576,
												"src": "1094:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5564,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:19"
									},
									"scope": 5666,
									"src": "1038:108:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5594,
										"nodeType": "Block",
										"src": "1288:44:19",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5587,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5579,
																"src": "1313:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5588,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5581,
																"src": "1317:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 5590,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5579,
															"src": "1320:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 5591,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5581,
															"src": "1323:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5586,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5557,
														"src": "1305:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 5592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5585,
												"id": 5593,
												"nodeType": "Return",
												"src": "1298:27:19"
											}
										]
									},
									"documentation": {
										"id": 5577,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:19",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 5595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5595,
												"src": "1237:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5578,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5595,
												"src": "1247:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5580,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:19"
									},
									"returnParameters": {
										"id": 5585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5595,
												"src": "1280:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5583,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:19"
									},
									"scope": 5666,
									"src": "1224:108:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5638,
										"nodeType": "Block",
										"src": "1537:162:19",
										"statements": [
											{
												"assignments": [
													5606
												],
												"declarations": [
													{
														"constant": false,
														"id": 5606,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 5638,
														"src": "1599:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5605,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5619,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5607,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5598,
																	"src": "1611:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 5608,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5600,
																	"src": "1615:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5611,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5598,
																				"src": "1622:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5612,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5600,
																				"src": "1626:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 5615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5617,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:19"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5620,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5606,
														"src": "1651:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 5625,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5606,
																						"src": "1671:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 5624,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 5623,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:19",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 5626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 5627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5621,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 5632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5630,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5598,
																				"src": "1685:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 5631,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5600,
																				"src": "1689:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 5633,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5635,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 5604,
												"id": 5637,
												"nodeType": "Return",
												"src": "1644:48:19"
											}
										]
									},
									"documentation": {
										"id": 5596,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:19",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 5639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5639,
												"src": "1486:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5597,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5639,
												"src": "1496:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5599,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:19"
									},
									"returnParameters": {
										"id": 5604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5639,
												"src": "1529:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:19"
									},
									"scope": 5666,
									"src": "1469:230:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5664,
										"nodeType": "Block",
										"src": "1843:767:19",
										"statements": [
											{
												"id": 5663,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:19",
												"statements": [
													{
														"assignments": [
															5648
														],
														"declarations": [
															{
																"constant": false,
																"id": 5648,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:19",
																"nodeType": "VariableDeclaration",
																"scope": 5663,
																"src": "2417:11:19",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 5647,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 5652,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5649,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5642,
																"src": "2431:1:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 5650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:19"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 5660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 5657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 5655,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5642,
																					"src": "2576:1:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 5656,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5648,
																					"src": "2580:4:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 5658,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 5659,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5648,
																		"src": "2588:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 5654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 5653,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 5661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 5646,
														"id": 5662,
														"nodeType": "Return",
														"src": "2560:33:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 5640,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:19",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 5665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5642,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 5665,
												"src": "1801:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 5641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:19"
									},
									"returnParameters": {
										"id": 5646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5665,
												"src": "1834:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:19"
									},
									"scope": 5666,
									"src": "1788:822:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5667,
							"src": "258:2354:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:19"
				},
				"id": 19
			},
			"contracts/nft.sol": {
				"ast": {
					"absolutePath": "contracts/nft.sol",
					"exportedSymbols": {
						"Context": [
							1669
						],
						"Counters": [
							1743
						],
						"ERC165": [
							2139
						],
						"ERC721": [
							1273
						],
						"ERC721URIStorage": [
							1534
						],
						"ERC721Utils": [
							1639
						],
						"IERC165": [
							2151
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1390
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1562
						],
						"NFTMarketplace": [
							5886
						],
						"Ownable": [
							147
						],
						"Strings": [
							2115
						]
					},
					"id": 5887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5668,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:20"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 5669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5887,
							"sourceUnit": 1274,
							"src": "60:57:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 5670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5887,
							"sourceUnit": 1535,
							"src": "119:78:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 5671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5887,
							"sourceUnit": 1744,
							"src": "199:52:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 5672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5887,
							"sourceUnit": 148,
							"src": "253:52:20",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5673,
										"name": "Ownable",
										"nameLocations": [
											"336:7:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "336:7:20"
									},
									"id": 5674,
									"nodeType": "InheritanceSpecifier",
									"src": "336:7:20"
								}
							],
							"canonicalName": "NFTMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5886,
							"linearizedBaseContracts": [
								5886,
								147,
								1669
							],
							"name": "NFTMarketplace",
							"nameLocation": "318:14:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 5678,
									"libraryName": {
										"id": 5675,
										"name": "Counters",
										"nameLocations": [
											"359:8:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1743,
										"src": "359:8:20"
									},
									"nodeType": "UsingForDirective",
									"src": "353:36:20",
									"typeName": {
										"id": 5677,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5676,
											"name": "Counters.Counter",
											"nameLocations": [
												"372:8:20",
												"381:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1675,
											"src": "372:16:20"
										},
										"referencedDeclaration": 1675,
										"src": "372:16:20",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 5681,
									"mutability": "mutable",
									"name": "_itemIds",
									"nameLocation": "420:8:20",
									"nodeType": "VariableDeclaration",
									"scope": 5886,
									"src": "395:33:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1675_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 5680,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5679,
											"name": "Counters.Counter",
											"nameLocations": [
												"395:8:20",
												"404:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1675,
											"src": "395:16:20"
										},
										"referencedDeclaration": 1675,
										"src": "395:16:20",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 5684,
									"mutability": "mutable",
									"name": "_itemsSold",
									"nameLocation": "460:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 5886,
									"src": "435:35:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1675_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 5683,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5682,
											"name": "Counters.Counter",
											"nameLocations": [
												"435:8:20",
												"444:7:20"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1675,
											"src": "435:16:20"
										},
										"referencedDeclaration": 1675,
										"src": "435:16:20",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1675_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NFTMarketplace.NFTItem",
									"id": 5695,
									"members": [
										{
											"constant": false,
											"id": 5686,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "513:2:20",
											"nodeType": "VariableDeclaration",
											"scope": 5695,
											"src": "505:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5685,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5688,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "534:7:20",
											"nodeType": "VariableDeclaration",
											"scope": 5695,
											"src": "526:15:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5687,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "526:7:20",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5690,
											"mutability": "mutable",
											"name": "uri",
											"nameLocation": "559:3:20",
											"nodeType": "VariableDeclaration",
											"scope": 5695,
											"src": "552:10:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 5689,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "552:6:20",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5692,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "581:5:20",
											"nodeType": "VariableDeclaration",
											"scope": 5695,
											"src": "573:13:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5691,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "573:7:20",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5694,
											"mutability": "mutable",
											"name": "sold",
											"nameLocation": "602:4:20",
											"nodeType": "VariableDeclaration",
											"scope": 5695,
											"src": "597:9:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5693,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "597:4:20",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTItem",
									"nameLocation": "486:7:20",
									"nodeType": "StructDefinition",
									"scope": 5886,
									"src": "479:135:20",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5700,
									"mutability": "mutable",
									"name": "_items",
									"nameLocation": "658:6:20",
									"nodeType": "VariableDeclaration",
									"scope": 5886,
									"src": "622:42:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTItem_$5695_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarketplace.NFTItem)"
									},
									"typeName": {
										"id": 5699,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 5696,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "630:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "622:27:20",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTItem_$5695_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarketplace.NFTItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5698,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 5697,
												"name": "NFTItem",
												"nameLocations": [
													"641:7:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5695,
												"src": "641:7:20"
											},
											"referencedDeclaration": 5695,
											"src": "641:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
												"typeString": "struct NFTMarketplace.NFTItem"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "1603f20f721362b0691bb408edb3cf01409cd56da9edd4627b178750b7dd49a8",
									"id": 5710,
									"name": "ItemCreated",
									"nameLocation": "679:11:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5702,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "707:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 5710,
												"src": "691:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5704,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "731:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 5710,
												"src": "715:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5706,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "747:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 5710,
												"src": "740:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5705,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "740:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5708,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "760:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 5710,
												"src": "752:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:76:20"
									},
									"src": "673:94:20"
								},
								{
									"anonymous": false,
									"eventSelector": "a574c741071bb18f51fa88c17aeefec514bebf670ca22a3736fba6504ecbb763",
									"id": 5718,
									"name": "ItemSold",
									"nameLocation": "779:8:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 5717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5712,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "804:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 5718,
												"src": "788:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5714,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "828:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 5718,
												"src": "812:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5716,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "843:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 5718,
												"src": "835:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:62:20"
									},
									"src": "773:77:20"
								},
								{
									"body": {
										"id": 5759,
										"nodeType": "Block",
										"src": "929:222:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5727,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5681,
															"src": "940:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1675_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 5729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "949:9:20",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "940:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1675_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1675_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 5730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:20:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5731,
												"nodeType": "ExpressionStatement",
												"src": "940:20:20"
											},
											{
												"assignments": [
													5733
												],
												"declarations": [
													{
														"constant": false,
														"id": 5733,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "979:6:20",
														"nodeType": "VariableDeclaration",
														"scope": 5759,
														"src": "971:14:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "971:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5737,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5734,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5681,
															"src": "988:8:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1675_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 5735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "997:7:20",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1687,
														"src": "988:16:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1675_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1675_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 5736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:18:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "971:35:20"
											},
											{
												"expression": {
													"id": 5749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 5738,
															"name": "_items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5700,
															"src": "1019:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTItem_$5695_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarketplace.NFTItem storage ref)"
															}
														},
														"id": 5740,
														"indexExpression": {
															"id": 5739,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5733,
															"src": "1026:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1019:14:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTItem_$5695_storage",
															"typeString": "struct NFTMarketplace.NFTItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5742,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5733,
																"src": "1044:6:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 5743,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1052:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 5744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1056:6:20",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1052:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 5745,
																"name": "uri",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5720,
																"src": "1064:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 5746,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5722,
																"src": "1069:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 5747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1076:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 5741,
															"name": "NFTItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5695,
															"src": "1036:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFTItem_$5695_storage_ptr_$",
																"typeString": "type(struct NFTMarketplace.NFTItem storage pointer)"
															}
														},
														"id": 5748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1036:46:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTItem_$5695_memory_ptr",
															"typeString": "struct NFTMarketplace.NFTItem memory"
														}
													},
													"src": "1019:63:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTItem_$5695_storage",
														"typeString": "struct NFTMarketplace.NFTItem storage ref"
													}
												},
												"id": 5750,
												"nodeType": "ExpressionStatement",
												"src": "1019:63:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5752,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5733,
															"src": "1112:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5753,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1120:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 5754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1124:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1120:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5755,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5720,
															"src": "1132:3:20",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 5756,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5722,
															"src": "1137:5:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5751,
														"name": "ItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5710,
														"src": "1100:11:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256)"
														}
													},
													"id": 5757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:43:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5758,
												"nodeType": "EmitStatement",
												"src": "1095:48:20"
											}
										]
									},
									"functionSelector": "8c551742",
									"id": 5760,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5725,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5724,
												"name": "onlyOwner",
												"nameLocations": [
													"919:9:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "919:9:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:9:20"
										}
									],
									"name": "createItem",
									"nameLocation": "867:10:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5720,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "892:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 5760,
												"src": "878:17:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "878:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5722,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "905:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 5760,
												"src": "897:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:34:20"
									},
									"returnParameters": {
										"id": 5726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:20"
									},
									"scope": 5886,
									"src": "858:293:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5818,
										"nodeType": "Block",
										"src": "1207:355:20",
										"statements": [
											{
												"assignments": [
													5767
												],
												"declarations": [
													{
														"constant": false,
														"id": 5767,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "1234:4:20",
														"nodeType": "VariableDeclaration",
														"scope": 5818,
														"src": "1218:20:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
															"typeString": "struct NFTMarketplace.NFTItem"
														},
														"typeName": {
															"id": 5766,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5765,
																"name": "NFTItem",
																"nameLocations": [
																	"1218:7:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5695,
																"src": "1218:7:20"
															},
															"referencedDeclaration": 5695,
															"src": "1218:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5771,
												"initialValue": {
													"baseExpression": {
														"id": 5768,
														"name": "_items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5700,
														"src": "1241:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTItem_$5695_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.NFTItem storage ref)"
														}
													},
													"id": 5770,
													"indexExpression": {
														"id": 5769,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5762,
														"src": "1248:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1241:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTItem_$5695_storage",
														"typeString": "struct NFTMarketplace.NFTItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:37:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 5776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5773,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5767,
																	"src": "1274:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																		"typeString": "struct NFTMarketplace.NFTItem storage pointer"
																	}
																},
																"id": 5774,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1279:4:20",
																"memberName": "sold",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5694,
																"src": "1274:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 5775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1287:5:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1274:18:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d20616c726561647920736f6c64",
															"id": 5777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1294:19:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
																"typeString": "literal_string \"Item already sold\""
															},
															"value": "Item already sold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
																"typeString": "literal_string \"Item already sold\""
															}
														],
														"id": 5772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1266:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1266:48:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5779,
												"nodeType": "ExpressionStatement",
												"src": "1266:48:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5781,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1333:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 5782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1337:5:20",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1333:9:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 5783,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5767,
																	"src": "1346:4:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																		"typeString": "struct NFTMarketplace.NFTItem storage pointer"
																	}
																},
																"id": 5784,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1351:5:20",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5692,
																"src": "1346:10:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1333:23:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 5786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1358:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 5780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1325:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1325:54:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5788,
												"nodeType": "ExpressionStatement",
												"src": "1325:54:20"
											},
											{
												"expression": {
													"id": 5793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 5789,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5767,
															"src": "1392:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5791,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1397:4:20",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5694,
														"src": "1392:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1404:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1392:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5794,
												"nodeType": "ExpressionStatement",
												"src": "1392:16:20"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5795,
															"name": "_itemsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5684,
															"src": "1419:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1675_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 5797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1430:9:20",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1701,
														"src": "1419:20:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1675_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1675_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 5798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:22:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5799,
												"nodeType": "ExpressionStatement",
												"src": "1419:22:20"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5801,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5762,
															"src": "1468:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5802,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1476:3:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 5803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1480:6:20",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1476:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5804,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5767,
																"src": "1488:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																	"typeString": "struct NFTMarketplace.NFTItem storage pointer"
																}
															},
															"id": 5805,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1493:5:20",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5692,
															"src": "1488:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5800,
														"name": "ItemSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5718,
														"src": "1459:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 5806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:40:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5807,
												"nodeType": "EmitStatement",
												"src": "1454:45:20"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 5814,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5767,
																"src": "1543:4:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																	"typeString": "struct NFTMarketplace.NFTItem storage pointer"
																}
															},
															"id": 5815,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1548:5:20",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5692,
															"src": "1543:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 5810,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5767,
																		"src": "1520:4:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																			"typeString": "struct NFTMarketplace.NFTItem storage pointer"
																		}
																	},
																	"id": 5811,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1525:7:20",
																	"memberName": "creator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5688,
																	"src": "1520:12:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 5809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1512:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 5808,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1512:8:20",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 5812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1512:21:20",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 5813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1534:8:20",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1512:30:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 5816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:42:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5817,
												"nodeType": "ExpressionStatement",
												"src": "1512:42:20"
											}
										]
									},
									"functionSelector": "e7fb74c7",
									"id": 5819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyItem",
									"nameLocation": "1168:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5762,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1184:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 5819,
												"src": "1176:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1175:16:20"
									},
									"returnParameters": {
										"id": 5764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:20"
									},
									"scope": 5886,
									"src": "1159:403:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5866,
										"nodeType": "Block",
										"src": "1698:193:20",
										"statements": [
											{
												"assignments": [
													5836
												],
												"declarations": [
													{
														"constant": false,
														"id": 5836,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "1725:4:20",
														"nodeType": "VariableDeclaration",
														"scope": 5866,
														"src": "1709:20:20",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
															"typeString": "struct NFTMarketplace.NFTItem"
														},
														"typeName": {
															"id": 5835,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5834,
																"name": "NFTItem",
																"nameLocations": [
																	"1709:7:20"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5695,
																"src": "1709:7:20"
															},
															"referencedDeclaration": 5695,
															"src": "1709:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5840,
												"initialValue": {
													"baseExpression": {
														"id": 5837,
														"name": "_items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5700,
														"src": "1732:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFTItem_$5695_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarketplace.NFTItem storage ref)"
														}
													},
													"id": 5839,
													"indexExpression": {
														"id": 5838,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5821,
														"src": "1739:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1732:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTItem_$5695_storage",
														"typeString": "struct NFTMarketplace.NFTItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1709:37:20"
											},
											{
												"expression": {
													"id": 5844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5841,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5824,
														"src": "1757:2:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5842,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5836,
															"src": "1762:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1767:2:20",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5686,
														"src": "1762:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1757:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5845,
												"nodeType": "ExpressionStatement",
												"src": "1757:12:20"
											},
											{
												"expression": {
													"id": 5849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5846,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5826,
														"src": "1780:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5847,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5836,
															"src": "1790:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1795:7:20",
														"memberName": "creator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5688,
														"src": "1790:12:20",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1780:22:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5850,
												"nodeType": "ExpressionStatement",
												"src": "1780:22:20"
											},
											{
												"expression": {
													"id": 5854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5851,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5828,
														"src": "1813:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5852,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5836,
															"src": "1819:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1824:3:20",
														"memberName": "uri",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5690,
														"src": "1819:8:20",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"src": "1813:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 5855,
												"nodeType": "ExpressionStatement",
												"src": "1813:14:20"
											},
											{
												"expression": {
													"id": 5859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5856,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5830,
														"src": "1838:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5857,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5836,
															"src": "1846:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5858,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:5:20",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5692,
														"src": "1846:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1838:18:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5860,
												"nodeType": "ExpressionStatement",
												"src": "1838:18:20"
											},
											{
												"expression": {
													"id": 5864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5861,
														"name": "sold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5832,
														"src": "1867:4:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 5862,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5836,
															"src": "1874:4:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTItem_$5695_storage_ptr",
																"typeString": "struct NFTMarketplace.NFTItem storage pointer"
															}
														},
														"id": 5863,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1879:4:20",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5694,
														"src": "1874:9:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1867:16:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5865,
												"nodeType": "ExpressionStatement",
												"src": "1867:16:20"
											}
										]
									},
									"functionSelector": "3129e773",
									"id": 5867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItem",
									"nameLocation": "1579:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5821,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1595:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1587:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:16:20"
									},
									"returnParameters": {
										"id": 5833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5824,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1632:2:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1624:10:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5826,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "1644:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1636:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1636:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5828,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1667:3:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1653:17:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1653:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5830,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1680:5:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1672:13:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5832,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "1692:4:20",
												"nodeType": "VariableDeclaration",
												"scope": 5867,
												"src": "1687:9:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1687:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:74:20"
									},
									"scope": 5886,
									"src": "1570:321:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5876,
										"nodeType": "Block",
										"src": "1953:46:20",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5872,
															"name": "_itemsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5684,
															"src": "1971:10:20",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1675_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 5873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1982:7:20",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1687,
														"src": "1971:18:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1675_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1675_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 5874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:20:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5871,
												"id": 5875,
												"nodeType": "Return",
												"src": "1964:27:20"
											}
										]
									},
									"functionSelector": "c4b15141",
									"id": 5877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getItemsSold",
									"nameLocation": "1908:12:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:20"
									},
									"returnParameters": {
										"id": 5871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5877,
												"src": "1944:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:9:20"
									},
									"scope": 5886,
									"src": "1899:100:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5884,
										"nodeType": "Block",
										"src": "2041:3:20",
										"statements": []
									},
									"id": 5885,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 5880,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2029:3:20",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 5881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2033:6:20",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2029:10:20",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5882,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 5879,
												"name": "Ownable",
												"nameLocations": [
													"2021:7:20"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2021:7:20"
											},
											"nodeType": "ModifierInvocation",
											"src": "2021:19:20"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:2:20"
									},
									"returnParameters": {
										"id": 5883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2041:0:20"
									},
									"scope": 5886,
									"src": "2007:37:20",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 5887,
							"src": "309:1738:20",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								5710,
								5718
							]
						}
					],
					"src": "33:2014:20"
				},
				"id": 20
			}
		}
	}
}